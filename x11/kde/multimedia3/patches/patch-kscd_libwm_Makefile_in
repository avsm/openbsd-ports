$OpenBSD: patch-kscd_libwm_Makefile_in,v 1.18 2008/04/13 09:48:57 espie Exp $
--- kscd/libwm/Makefile.in.orig	Wed Feb 13 16:07:45 2008
+++ kscd/libwm/Makefile.in	Sun Apr 13 06:34:07 2008
@@ -16,7 +16,7 @@
 @SET_MAKE@
 
 #
-# Makefile.am for libworkman. Based on the example Makefile.am for a
+# Makefile.am for libkworkman. Based on the example Makefile.am for a
 # shared library.
 #
 
@@ -51,30 +51,30 @@ CONFIG_HEADER = $(top_builddir)/config.h
 CONFIG_CLEAN_FILES =
 LTLIBRARIES = $(noinst_LTLIBRARIES)
 am__DEPENDENCIES_1 =
-libworkman_la_DEPENDENCIES = audio/libworkmanaudio.la \
+libkworkman_la_DEPENDENCIES = audio/libworkmanaudio.la \
 	$(am__DEPENDENCIES_1)
-am_libworkman_la_OBJECTS = cddb.lo cdinfo.lo cdrom.lo wm_helpers.lo \
+am_libkworkman_la_OBJECTS = cddb.lo cdinfo.lo cdrom.lo wm_helpers.lo \
 	cdtext.lo database.lo index.lo scsi.lo cdda.lo \
 	plat_linux_cdda.lo plat_sun_cdda.lo plat_aix.lo plat_bsd386.lo \
 	plat_freebsd.lo plat_hpux.lo plat_irix.lo plat_linux.lo \
 	plat_svr4.lo plat_ultrix.lo plat_news.lo plat_openbsd.lo \
 	plat_osf1.lo plat_sun.lo plat_scor5.lo drv_sony.lo \
 	drv_toshiba.lo
-#>- libworkman_la_OBJECTS = $(am_libworkman_la_OBJECTS)
+#>- libkworkman_la_OBJECTS = $(am_libkworkman_la_OBJECTS)
 #>+ 10
-libworkman_la_final_OBJECTS = cddb.lo cdinfo.lo cdrom.lo wm_helpers.lo cdtext.lo database.lo index.lo scsi.lo cdda.lo plat_linux_cdda.lo plat_sun_cdda.lo plat_aix.lo plat_bsd386.lo plat_freebsd.lo plat_hpux.lo plat_irix.lo plat_linux.lo plat_svr4.lo plat_ultrix.lo plat_news.lo plat_openbsd.lo plat_osf1.lo plat_sun.lo plat_scor5.lo drv_sony.lo drv_toshiba.lo 
-libworkman_la_nofinal_OBJECTS = cddb.lo cdinfo.lo cdrom.lo wm_helpers.lo \
+libkworkman_la_final_OBJECTS = cddb.lo cdinfo.lo cdrom.lo wm_helpers.lo cdtext.lo database.lo index.lo scsi.lo cdda.lo plat_linux_cdda.lo plat_sun_cdda.lo plat_aix.lo plat_bsd386.lo plat_freebsd.lo plat_hpux.lo plat_irix.lo plat_linux.lo plat_svr4.lo plat_ultrix.lo plat_news.lo plat_openbsd.lo plat_osf1.lo plat_sun.lo plat_scor5.lo drv_sony.lo drv_toshiba.lo 
+libkworkman_la_nofinal_OBJECTS = cddb.lo cdinfo.lo cdrom.lo wm_helpers.lo \
 	cdtext.lo database.lo index.lo scsi.lo cdda.lo \
 	plat_linux_cdda.lo plat_sun_cdda.lo plat_aix.lo plat_bsd386.lo \
 	plat_freebsd.lo plat_hpux.lo plat_irix.lo plat_linux.lo \
 	plat_svr4.lo plat_ultrix.lo plat_news.lo plat_openbsd.lo \
 	plat_osf1.lo plat_sun.lo plat_scor5.lo drv_sony.lo \
 	drv_toshiba.lo
-@KDE_USE_FINAL_FALSE@libworkman_la_OBJECTS = $(libworkman_la_nofinal_OBJECTS)
-@KDE_USE_FINAL_TRUE@libworkman_la_OBJECTS = $(libworkman_la_final_OBJECTS)
-libworkman_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
+@KDE_USE_FINAL_FALSE@libkworkman_la_OBJECTS = $(libkworkman_la_nofinal_OBJECTS)
+@KDE_USE_FINAL_TRUE@libkworkman_la_OBJECTS = $(libkworkman_la_final_OBJECTS)
+libkworkman_la_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
 	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
-	$(libworkman_la_LDFLAGS) $(LDFLAGS) -o $@
+	$(libkworkman_la_LDFLAGS) $(LDFLAGS) -o $@
 DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
 depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
 am__depfiles_maybe = depfiles
@@ -87,8 +87,8 @@ CCLD = $(CC)
 LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
 	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
 	$(LDFLAGS) -o $@
-SOURCES = $(libworkman_la_SOURCES)
-DIST_SOURCES = $(libworkman_la_SOURCES)
+SOURCES = $(libkworkman_la_SOURCES)
+DIST_SOURCES = $(libkworkman_la_SOURCES)
 #>- RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
 #>- 	html-recursive info-recursive install-data-recursive \
 #>- 	install-dvi-recursive install-exec-recursive \
@@ -416,10 +416,10 @@ xdg_menudir = @xdg_menudir@
 subdirs = include
 SUBDIRS = audio
 INCLUDES = $(all_includes) 
-noinst_LTLIBRARIES = libworkman.la
-libworkman_la_LDFLAGS = $(ARTSC_LIBS) $(all_libraries)
-libworkman_la_LIBADD = audio/libworkmanaudio.la $(ARTS_LIBASOUND)
-libworkman_la_SOURCES = cddb.c cdinfo.c cdrom.c wm_helpers.c cdtext.c\
+noinst_LTLIBRARIES = libkworkman.la
+libkworkman_la_LDFLAGS = $(ARTSC_LIBS) $(all_libraries)
+libkworkman_la_LIBADD = audio/libworkmanaudio.la $(ARTS_LIBASOUND)
+libkworkman_la_SOURCES = cddb.c cdinfo.c cdrom.c wm_helpers.c cdtext.c\
 database.c index.c scsi.c cdda.c plat_linux_cdda.c plat_sun_cdda.c\
 plat_aix.c plat_bsd386.c plat_freebsd.c plat_hpux.c plat_irix.c \
 plat_linux.c plat_svr4.c plat_ultrix.c plat_news.c plat_openbsd.c \
@@ -483,8 +483,8 @@ clean-noinstLTLIBRARIES:
 	  echo "rm -f \"$${dir}/so_locations\""; \
 	  rm -f "$${dir}/so_locations"; \
 	done
-libworkman.la: $(libworkman_la_OBJECTS) $(libworkman_la_DEPENDENCIES) 
-	$(libworkman_la_LINK)  $(libworkman_la_OBJECTS) $(libworkman_la_LIBADD) $(LIBS)
+libkworkman.la: $(libkworkman_la_OBJECTS) $(libkworkman_la_DEPENDENCIES) 
+	$(libkworkman_la_LINK)  $(libkworkman_la_OBJECTS) $(libkworkman_la_LIBADD) $(LIBS)
 
 mostlyclean-compile:
 	-rm -f *.$(OBJEXT)
@@ -831,8 +831,8 @@ uninstall-am:
 	uninstall uninstall-am
 
 
-#libworkmanincludedir = $(includedir)/libwm
-#libworkmaninclude_HEADERS = include/wm_cdrom.h include/wm_cdtext.h
+#libkworkmanincludedir = $(includedir)/libwm
+#libkworkmaninclude_HEADERS = include/wm_cdrom.h include/wm_cdtext.h
 # Tell versions [3.59,3.63) of GNU make to not export all variables.
 # Otherwise a system limit (for SysV at least) may be exceeded.
 .NOEXPORT:
@@ -883,19 +883,19 @@ bcheck-am:
 
 #>+ 3
 final:
-	$(MAKE) libworkman_la_OBJECTS="$(libworkman_la_final_OBJECTS)" all-am
+	$(MAKE) libkworkman_la_OBJECTS="$(libkworkman_la_final_OBJECTS)" all-am
 
 #>+ 3
 final-install:
-	$(MAKE) libworkman_la_OBJECTS="$(libworkman_la_final_OBJECTS)" install-am
+	$(MAKE) libkworkman_la_OBJECTS="$(libkworkman_la_final_OBJECTS)" install-am
 
 #>+ 3
 no-final:
-	$(MAKE) libworkman_la_OBJECTS="$(libworkman_la_nofinal_OBJECTS)" all-am
+	$(MAKE) libkworkman_la_OBJECTS="$(libkworkman_la_nofinal_OBJECTS)" all-am
 
 #>+ 3
 no-final-install:
-	$(MAKE) libworkman_la_OBJECTS="$(libworkman_la_nofinal_OBJECTS)" install-am
+	$(MAKE) libkworkman_la_OBJECTS="$(libkworkman_la_nofinal_OBJECTS)" install-am
 
 #>+ 3
 kde-rpo-clean:
