$OpenBSD: patch-dovecot-example_conf,v 1.9 2005/02/12 12:17:07 brad Exp $
--- dovecot-example.conf.orig	Wed Dec 29 13:00:24 2004
+++ dovecot-example.conf	Fri Feb  4 20:58:07 2005
@@ -1,13 +1,12 @@
 ## Dovecot 1.0 configuration file
 
 # Default values are shown after each value, it's not required to uncomment
-# any of the lines. Exception to this are paths, they're just examples
-# with real defaults being based on configure options. The paths listed here
-# are for configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var
-# --with-ssldir=/etc/ssl
+# any of the lines.
 
+# *** NOTE *** Some values HAVE been changed for OpenBSD use.
+
 # Base directory where to store runtime data.
-#base_dir = /var/run/dovecot/
+base_dir = /var/dovecot/
 
 # Protocols we want to be serving:
 #  imap imaps pop3 pop3s
@@ -33,12 +32,12 @@
 # dropping root privileges, so keep the key file unreadable by anyone but
 # root. Included doc/mkcert.sh can be used to easily generate self-signed
 # certificate, just make sure to update the domains in dovecot-openssl.cnf
-#ssl_cert_file = /etc/ssl/certs/dovecot.pem
+ssl_cert_file = /etc/ssl/dovecotcert.pem
 #ssl_key_file = /etc/ssl/private/dovecot.pem
 
 # SSL parameter file. Master process generates this file for login processes.
 # It contains Diffie Hellman and RSA parameters.
-#ssl_parameters_file = /var/run/dovecot/ssl-parameters.dat
+ssl_parameters_file = /var/dovecot/ssl-parameters.dat
 
 # How often to regenerate the SSL parameters file. Generation is quite CPU
 # intensive operation. The value is in hours, 0 disables regeneration
@@ -70,7 +69,7 @@
 # which login needs to be able to connect to. The sockets are created when
 # running as root, so you don't have to worry about permissions. Note that
 # everything in this directory is deleted when Dovecot is started.
-#login_dir = /var/run/dovecot/login
+login_dir = /var/dovecot/login
 
 # chroot login process to the login_dir. Only reason not to do this is if you
 # wish to run the whole Dovecot without roots.
@@ -85,14 +84,14 @@
 login = imap
 
 # Executable location.
-#login_executable = /usr/libexec/dovecot/imap-login
+#login_executable = _PREFIX_/libexec/dovecot/imap-login
 
 # User to use for the login process. Create a completely new user for this,
 # and don't use it anywhere else. The user must also belong to a group where
 # only it has access, it's used to control access for authentication process.
 # Note that this user is NOT used to access mails.
 # http://wiki.dovecot.org/UserIds
-#login_user = dovecot
+login_user = _dovecot
 
 # Set max. process size in megabytes. If you don't use
 # login_process_per_connection you might need to grow this.
@@ -132,7 +131,7 @@ login = imap
 login = pop3
 
 # Exception to above rule being the executable location.
-#login_executable = /usr/libexec/dovecot/pop3-login
+#login_executable = _PREFIX_/libexec/dovecot/pop3-login
 
 ##
 ## Mail processes
@@ -274,6 +273,8 @@ login = pop3
 
 # Use mmap() instead of read() to read mail files. read() seems to be a bit
 # faster with my Linux/x86 and it's better with NFS, so that's the default.
+# Note that this option doesn't work correctly on OpenBSD as msync() needs
+# the MS_INVALIDATE to operate properly.  Enable at your own risk.
 #mail_read_mmaped = no
 
 # By default LIST command returns all entries in maildir beginning with dot.
@@ -291,6 +292,12 @@ login = pop3
 # If you care about performance, enable it.
 #maildir_copy_with_hardlinks = no
 
+# Call mmap() with MS_INVALIDATE flag each time before accessing message
+# indexes. This option is recommended on OpenBSD 3.4 and older versions
+# to negate the risk of corruption when rebuilding indexes.
+# It's also required if you insist on saving index files over NFS.
+index_mmap_invalidate = yes
+
 # Check if mails' content has been changed by external programs. This slows
 # down things as extra stat() needs to be called for each file. If changes are
 # noticed, the message is treated as a new message, since IMAP protocol
@@ -308,7 +315,7 @@ login = pop3
 # with is important to avoid deadlocks if other MTAs/MUAs are using both fcntl
 # and flock. Some operating systems don't allow using both of them
 # simultaneously, eg. BSDs. If dotlock is used, it's always created first.
-#mbox_locks = dotlock fcntl
+mbox_locks = fcntl
 
 # Should we create dotlock file even when we want only a read-lock? Setting
 # this to yes hurts the performance when the mailbox is accessed simultaneously
@@ -338,7 +345,7 @@ login = pop3
 ##
 
 # Executable location
-#imap_executable = /usr/libexec/dovecot/imap
+#imap_executable = _PREFIX_/libexec/dovecot/imap
 
 # Set max. process size in megabytes. Most of the memory goes to mmap()ing
 # files, so it shouldn't harm much even if this limit is set pretty high.
@@ -346,14 +353,14 @@ login = pop3
 
 # Support for dynamically loadable modules.
 #imap_use_modules = no
-#imap_modules = /usr/lib/dovecot/imap
+#imap_modules = _PREFIX_/lib/dovecot/imap
 
 ##
 ## POP3 process
 ##
 
 # Executable location
-#pop3_executable = /usr/libexec/dovecot/pop3
+#pop3_executable = _PREFIX_/libexec/dovecot/pop3
 
 # Set max. process size in megabytes. Most of the memory goes to mmap()ing
 # files, so it shouldn't harm much even if this limit is set pretty high.
@@ -361,7 +368,7 @@ login = pop3
 
 # Support for dynamically loadable modules.
 #pop3_use_modules = no
-#pop3_modules = /usr/lib/dovecot/pop3
+#pop3_modules = _PREFIX_/lib/dovecot/pop3
 
 ##
 ## Authentication processes
@@ -438,7 +445,7 @@ auth_userdb = passwd
 #   vpopmail: vpopmail authentication
 #   ldap <config path>: LDAP, see doc/dovecot-ldap.conf
 #   pgsql <config path>: a PostgreSQL database, see doc/dovecot-pgsql.conf
-auth_passdb = pam
+auth_passdb = passwd
 
 #auth_executable = /usr/libexec/dovecot/dovecot-auth
 
