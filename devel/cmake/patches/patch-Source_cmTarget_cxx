$OpenBSD: patch-Source_cmTarget_cxx,v 1.5 2010/07/12 19:19:30 dcoppa Exp $
--- Source/cmTarget.cxx.orig	Mon Jun 28 17:15:59 2010
+++ Source/cmTarget.cxx	Mon Jul  5 15:59:34 2010
@@ -3164,6 +3164,34 @@ void cmTarget::GetLibraryNames(std::string& name,
   std::string suffix;
   this->GetFullNameInternal(config, false, prefix, base, suffix);
 
+#if defined(__OpenBSD__)
+  /* OpenBSD - LIBxxx_VERSION environment override.
+   * Needed for OpenBSD ports system.
+   */
+  std::string env_name = "LIB" + base + "_VERSION";
+  char *env_vers_cstr = getenv(env_name.c_str());
+
+  if (env_vers_cstr != NULL) {
+    // this means an override is present
+    std::string env_vers = std::string(env_vers_cstr);
+
+    size_t first = env_vers.find_first_of(".");
+    size_t last = env_vers.find_first_of(".");
+
+    if ((first != last) || (first == std::string::npos)) {
+      std::string msg = "Bad ";
+      msg += env_name;
+      msg += " specification: ";
+      msg += env_vers;
+      this->Makefile->IssueMessage(cmake::FATAL_ERROR, 
+                                   msg.c_str());
+    } else {
+      /* all OK, use OpenBSD override */
+      soversion = version = env_vers_cstr;
+    }
+  }
+#endif
+
   // The library name.
   name = prefix+base+suffix;
 
@@ -3191,8 +3219,26 @@ void cmTarget::GetLibraryNames(std::string& name,
   if(version)
     {
     realName += ".";
+#if defined(__OpenBSD__)
+    // libname.so.X.X.X -> libname.so.X.X conversion
+    int j = 0;
+    for (int i = 0; i < (int)strlen(version); i++) 
+      {
+      if (version[i] == '.') 
+        {
+        j++; 
+        if (j == 2) 
+          {
+          break;
+          }
+        }
+      realName += version[i];
+      }
+    }
+#else
     realName += version;
     }
+#endif
   else if(soversion)
     {
     realName += ".";
