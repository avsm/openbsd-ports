$OpenBSD: patch-PDP11_pdp11_xq_c,v 1.1 2002/10/29 23:55:01 fgsch Exp $
--- PDP11/pdp11_xq.c.orig	Tue Oct 22 08:50:40 2002
+++ PDP11/pdp11_xq.c	Fri Oct 25 16:12:39 2002
@@ -180,7 +180,7 @@ MTAB xq_mod[] = {
 };
 
 DEVICE xq_dev = {
-  "XQ", &xq_unit, xq_reg, xq_mod,
+  "XQ", (struct unit *)&xq_unit, xq_reg, xq_mod,
   2, XQ_RDX, 0, 1, XQ_RDX, 8,
   &xq_ex, &xq_dep, &xq_reset,
   NULL, &xq_attach, &xq_detach,
@@ -623,8 +623,8 @@ t_stat xq_process_mop(void)
   t_addr address;
   uint16 size;
   int32 wstatus;
-  struct xq_meb* meb = &xq.write_buffer.msg[0200];
-  const struct xq_meb* limit = &xq.write_buffer.msg[0400];
+  struct xq_meb* meb = (struct xq_meb *)&xq.write_buffer.msg[0200];
+  const struct xq_meb* limit = (struct xq_meb *)&xq.write_buffer.msg[0400];
 
   if (xq.type == XQ_T_DEQNA)  /* DEQNA's don't MOP */
     return SCPE_NOFNC;
@@ -642,7 +642,7 @@ t_stat xq_process_mop(void)
       case 0:   /* MOP Termination */
         break;
       case 1:   /* MOP Read Ethernet Address */
-        wstatus = Map_WriteB(address, sizeof(ETH_MAC), &xq.setup.macs[0], NOMAP);
+        wstatus = Map_WriteB(address, sizeof(ETH_MAC), (uint8 *)&xq.setup.macs[0], NOMAP);
         if (wstatus) return xq_nxm_error();
         break;
       case 2:   /* MOP Reset System ID */
@@ -823,7 +823,7 @@ t_stat xq_process_xbdl()
         }
 
         /* update write status */
-        wstatus = Map_WriteW(xq.xbdl_ba + 8, 4, write_success, NOMAP);
+        wstatus = Map_WriteW(xq.xbdl_ba + 8, 4, (uint16 *)write_success, NOMAP);
         if (wstatus) return xq_nxm_error();
 
         /* clear write buffer */
@@ -850,7 +850,7 @@ t_stat xq_process_xbdl()
     } else { /* not at end-of-message */
 
       /* update bdl status words */
-      wstatus = Map_WriteW(xq.xbdl_ba + 8, 4, implicit_chain_status, NOMAP);
+      wstatus = Map_WriteW(xq.xbdl_ba + 8, 4, (uint16 *)implicit_chain_status, NOMAP);
       if(wstatus) return xq_nxm_error();
     }
 
@@ -946,7 +946,7 @@ void xq_sw_reset(void)
   xq_cancel_santmr();
 
   /* disconnect ethernet reception */
-  sim_cancel(&xq_unit);
+  sim_cancel(&xq_unit[0]);
 
   /* reset csr bits */
   xq.csr = XQ_CSR_XL | XQ_CSR_RL;
@@ -1017,7 +1017,7 @@ t_stat xq_wr_csr(int32 data)
   /* start receiver when RE transitions to set */
   if (~saved_csr & XQ_CSR_RE & data) {
     //xq_start_receiver();
-    sim_activate(&xq_unit, xq.rtime);
+    sim_activate(&xq_unit[0], xq.rtime);
   }
 
   return SCPE_OK;
@@ -1192,7 +1192,7 @@ t_stat xq_svc(UNIT* uptr)
 
   /* resubmit if still receive enabled */
   if (xq.csr & XQ_CSR_RE)
-    sim_activate(&xq_unit, xq.rtime);
+    sim_activate(&xq_unit[0], xq.rtime);
 
   return SCPE_OK;
 }
