$OpenBSD: patch-hotspot_src_cpu_x86_vm_interp_masm_x86_32_cpp,v 1.3 2009/05/23 03:27:41 kurt Exp $
--- hotspot/src/cpu/x86/vm/interp_masm_x86_32.cpp.orig	Sat May 16 22:35:34 2009
+++ hotspot/src/cpu/x86/vm/interp_masm_x86_32.cpp	Sat May 16 22:35:56 2009
@@ -452,10 +452,10 @@ void InterpreterMacroAssembler::store_ptr_and_tag(int 
 void InterpreterMacroAssembler::tag_local(frame::Tag tag, int n) {
   if (TaggedStackInterpreter) {
     if (tag == frame::TagCategory2) {
-      movptr(Address(rdi, Interpreter::local_tag_offset_in_bytes(n+1)), (int32_t)frame::TagValue);
-      movptr(Address(rdi, Interpreter::local_tag_offset_in_bytes(n)), (int32_t)frame::TagValue);
+      movptr(Address(rdi, Interpreter::local_tag_offset_in_bytes(n+1)), (intptr_t)frame::TagValue);
+      movptr(Address(rdi, Interpreter::local_tag_offset_in_bytes(n)), (intptr_t)frame::TagValue);
     } else {
-      movptr(Address(rdi, Interpreter::local_tag_offset_in_bytes(n)), (int32_t)tag);
+      movptr(Address(rdi, Interpreter::local_tag_offset_in_bytes(n)), (intptr_t)tag);
     }
   }
 }
@@ -464,12 +464,12 @@ void InterpreterMacroAssembler::tag_local(frame::Tag t
   if (TaggedStackInterpreter) {
     if (tag == frame::TagCategory2) {
       movptr(Address(rdi, idx, Interpreter::stackElementScale(),
-                  Interpreter::local_tag_offset_in_bytes(1)), (int32_t)frame::TagValue);
+                  Interpreter::local_tag_offset_in_bytes(1)), (intptr_t)frame::TagValue);
       movptr(Address(rdi, idx, Interpreter::stackElementScale(),
-                    Interpreter::local_tag_offset_in_bytes(0)), (int32_t)frame::TagValue);
+                    Interpreter::local_tag_offset_in_bytes(0)), (intptr_t)frame::TagValue);
     } else {
       movptr(Address(rdi, idx, Interpreter::stackElementScale(),
-                               Interpreter::local_tag_offset_in_bytes(0)), (int32_t)tag);
+                               Interpreter::local_tag_offset_in_bytes(0)), (intptr_t)tag);
     }
   }
 }
@@ -1315,7 +1315,7 @@ void InterpreterMacroAssembler::record_klass_in_profil
   int recvr_offset = in_bytes(VirtualCallData::receiver_offset(start_row));
   set_mdp_data_at(mdp, recvr_offset, receiver);
   int count_offset = in_bytes(VirtualCallData::receiver_count_offset(start_row));
-  movptr(reg2, (int32_t)DataLayout::counter_increment);
+  movptr(reg2, (intptr_t)DataLayout::counter_increment);
   set_mdp_data_at(mdp, count_offset, reg2);
   jmp(done);
 }
@@ -1454,7 +1454,7 @@ void InterpreterMacroAssembler::profile_switch_case(Re
     test_method_data_pointer(mdp, profile_continue);
 
     // Build the base (index * per_case_size_in_bytes()) + case_array_offset_in_bytes()
-    movptr(reg2, (int32_t)in_bytes(MultiBranchData::per_case_size()));
+    movptr(reg2, (intptr_t)in_bytes(MultiBranchData::per_case_size()));
     // index is positive and so should have correct value if this code were
     // used on 64bits
     imulptr(index, reg2);
