$OpenBSD: patch-sim_ether_c,v 1.1 2002/10/29 23:55:01 fgsch Exp $
--- sim_ether.c.orig	Fri Oct 25 16:27:11 2002
+++ sim_ether.c	Fri Oct 25 16:30:31 2002
@@ -99,7 +99,8 @@ void eth_zero(ETH_DEV* dev)
 /*                        Non-implemented versions                            */
 /*============================================================================*/
 
-#if !defined (WIN32) && !defined(linux) && !defined(__NetBSD__)
+#if !defined (WIN32) && !defined(linux) && !defined(__NetBSD__) && \
+    !defined(__OpenBSD__)
 t_stat eth_open (ETH_DEV* dev, char* name)
   {return SCPE_NOFNC;}
 t_stat eth_close (ETH_DEV* dev)
@@ -116,20 +117,21 @@ int eth_devices (int max, ETH_LIST* dev)
 #else	 /* endif unimplemented */
 
 /*============================================================================*/
-/*   Win32, Linux, and NetBSD routines - Uses WinPCAP and libpcap packages    */
+/*   Win32, Linux, NetBSD and OpenSBD routines - Uses WinPCAP and libpcap     */
+/*   packages                                                                 */
 /*============================================================================*/
 
 #include <pcap.h>
 #ifdef WIN32
 #include <packet32.h>
 #endif /*WIN32*/
-#ifdef __NetBSD__
+#if defined(__NetBSD__) || defined(__OpenBSD__)
 #include <sys/ioctl.h>
 #include <net/bpf.h>
-#endif /* __NetBSD__ */
-#if defined(linux) || defined(__NetBSD__)
+#endif /* __NetBSD__ || __OpenBSD__ */
+#if defined(linux) || defined(__NetBSD__) || defined(__OpenBSD__)
 #include <fcntl.h>
-#endif /*linux || __NetBSD__*/
+#endif /*linux || __NetBSD__ || __OpenBSD__*/
 
 t_stat eth_open(ETH_DEV* dev, char* name)
 {
@@ -166,17 +168,17 @@ t_stat eth_open(ETH_DEV* dev, char* name
   dev->name = malloc(strlen(savname)+1);
   strcpy(dev->name, savname);
 
-#ifdef __NetBSD__
+#if defined(__NetBSD__) || defined(__OpenBSD__)
   /* tell the kernel that the header is fully-formed when it gets it.
      this is required in order to fake the src address.  */
   i = 1;
   ioctl(pcap_fileno(dev->handle), BIOCSHDRCMPLT, &i);
-#endif /* __NetBSD__ */
+#endif /* __NetBSD__ || __OpenBSD__ */
 
-#if defined(linux) || defined(__NetBSD__)
+#if defined(linux) || defined(__NetBSD__) || defined(__OpenBSD__)
   /* set file non-blocking */
   fcntl(pcap_fileno(dev->handle), F_SETFL, fcntl(pcap_fileno(dev->handle), F_GETFL, 0) | O_NONBLOCK);
-#endif /*linux || __NetBSD__*/
+#endif /*linux || __NetBSD__ || __OpenBSD__*/
 
   return SCPE_OK;
 }
@@ -364,7 +366,7 @@ int eth_devices(int max, ETH_LIST* list)
   return index; /* count of devices */
 }
 
-#endif /* Win32 || linux || __NetBSD__ */
+#endif /* Win32 || linux || __NetBSD__ || __OpenBSD__ */
 
 /*============================================================================*/
 /*                          linux-specific code                               */
@@ -422,7 +424,7 @@ int PacketGetAdapterNames(char* buffer, 
 /*                          NetBSD-specific code                              */
 /*============================================================================*/
 
-#ifdef __NetBSD__
+#if defined(__NetBSD__) || defined(__OpenBSD__)
 #include <sys/types.h>
 #include <sys/socket.h>
 #include <net/if_dl.h>
@@ -470,5 +472,5 @@ int PacketGetAdapterNames(char* buffer, 
   return (ptr);
 }
 
-#endif /* __NetBSD__ */
+#endif /* __NetBSD__ || __OpenBSD__ */
 
