The Glasgow Haskell Compiler is a robust, fully-featured, optimising
compiler for the functional programming language Haskell 98.

GHC compiles Haskell to either native code or C. It implements
numerous experimental language extensions to Haskell 98, for example:
concurrency, a foreign language interface, multi-parameter type
classes, scoped type variables, existential and universal quantification,
unboxed types, exceptions, weak pointers, and so on. GHC comes with
a generational garbage collector, and a space and time profiler.
