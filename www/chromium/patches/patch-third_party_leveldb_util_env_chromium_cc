$OpenBSD: patch-third_party_leveldb_util_env_chromium_cc,v 1.1 2011/08/16 08:17:44 robert Exp $
--- third_party/leveldb/util/env_chromium.cc.orig	Wed Aug  3 12:30:52 2011
+++ third_party/leveldb/util/env_chromium.cc	Wed Aug  3 12:35:44 2011
@@ -29,7 +29,7 @@
 #include "base/win/win_util.h"
 #endif
 
-#if defined(OS_MACOSX) || defined(OS_WIN)
+#if defined(OS_MACOSX) || defined(OS_WIN) || defined(OS_OPENBSD)
 // The following are glibc-specific
 namespace {
 
@@ -325,7 +325,7 @@ class ChromiumEnv : public Env {
 
   virtual Status GetFileSize(const std::string& fname, uint64_t* size) {
     Status s;
-    int64_t signed_size;
+    int64 signed_size;
     if (!::file_util::GetFileSize(CreateFilePath(fname), &signed_size)) {
       *size = 0;
       s = Status::IOError(fname, "Could not determine file size.");
@@ -417,10 +417,9 @@ class ChromiumEnv : public Env {
     thread_id = mach_thread_self();
 #elif defined(OS_LINUX)
     thread_id = syscall(__NR_gettid);
-#elif defined(OS_FREEBSD) || defined(OS_NACL)
+#elif defined(OS_FREEBSD) || defined(OS_NACL) || defined(OS_OPENBSD)
     // TODO(BSD): find a better thread ID
-    pthread_t tid = pthread_self();
-    memcpy(&thread_id, &tid, min(sizeof(r), sizeof(tid)));
+    thread_id = reinterpret_cast<int64_t>(pthread_self());
 #endif
 
     // We try twice: the first time with a fixed-size stack allocated buffer,
