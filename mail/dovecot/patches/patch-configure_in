$OpenBSD: patch-configure_in,v 1.11 2008/04/28 09:51:10 bernd Exp $
--- configure.in.orig	Sun Mar  9 11:45:25 2008
+++ configure.in	Fri Apr 25 12:32:06 2008
@@ -12,6 +12,7 @@ AC_PROG_CPP
 AC_HEADER_STDC
 AC_C_INLINE
 AC_PROG_LIBTOOL
+LIBS="${LIBS} -liconv"
 AM_ICONV
 
 AC_CHECK_HEADERS(strings.h stdint.h unistd.h dirent.h \
@@ -1471,33 +1472,14 @@ fi
 
 have_gssapi=no
 if test $want_gssapi = yes; then
-	AC_CHECK_PROG(KRB5CONFIG, krb5-config, YES, NO)
-	if test $KRB5CONFIG = YES; then
-		# we have a kludgy check here to check that we have
-		# version >= v1.3. Although this doesn't work right with
-		# non-MIT kerberos versioning..
-		if `krb5-config --version|grep -v '1\.2' > /dev/null`; then
-			AUTH_LIBS="$AUTH_LIBS `krb5-config --libs gssapi`"
-			AUTH_CFLAGS="$AUTH_CFLAGS `krb5-config --cflags gssapi`"
-			
-			# Although krb5-config exists, all systems still don't
-			# have gssapi.h
-			old_CFLAGS=$CFLAGS
-			CFLAGS="$CFLAGS `krb5-config --cflags gssapi`"
-			AC_CHECK_HEADER([gssapi/gssapi.h], [
-				AC_DEFINE(HAVE_GSSAPI_GSSAPI_H,, GSSAPI headers in gssapi/gssapi.h)
-				have_gssapi=yes
-			])
-			AC_CHECK_HEADER([gssapi.h], [
-				AC_DEFINE(HAVE_GSSAPI_H,, GSSAPI headers in gssapi.h)
-				have_gssapi=yes
-			])
-			if test $have_gssapi = yes; then
-				AC_DEFINE(HAVE_GSSAPI,, Build with GSSAPI support)
-			fi
-			CFLAGS=$old_CFLAGS
-		fi
-	fi
+	# no krb5-config on OpenBSD, suck in the necessary libs and includes
+	# manually
+	AC_CHECK_HEADER([kerberosV/gssapi.h], [
+		AC_DEFINE(HAVE_GSSAPI,, Build with GSSAPI support)
+		AC_DEFINE(HAVE_GSSAPI_H,, Build with GSSAPI support)
+		have_gssapi=yes
+	])
+	AUTH_LIBS="$LIBS -lkrb5 -lgssapi -lcrypto"
 fi
 
 if test $want_sia = yes; then
