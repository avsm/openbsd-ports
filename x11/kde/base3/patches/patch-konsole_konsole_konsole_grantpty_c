$OpenBSD: patch-konsole_konsole_konsole_grantpty_c,v 1.1 2003/01/09 19:27:05 espie Exp $
--- konsole/konsole/konsole_grantpty.c.orig	Sun Feb 17 18:37:04 2002
+++ konsole/konsole/konsole_grantpty.c	Thu Jan  9 20:17:35 2003
@@ -40,6 +40,12 @@
 #  include <dirent.h>
 #endif
 
+#ifdef __OpenBSD__
+#  include <utmp.h>
+#  include <util.h>
+#  include <fcntl.h>
+#endif
+
 #define PTY_FILENO 3    /* keep in sync with grantpty */
 #define TTY_GROUP "tty"
 
@@ -54,9 +60,9 @@ int main (int argc, char *argv[])
   char*         tty;
 
   /* check preconditions **************************************************/
-  if (argc != 2 || (strcmp(argv[1],"--grant") && strcmp(argv[1],"--revoke")))
+  if (argc != 3 || (strcmp(argv[1],"--grant") && strcmp(argv[1],"--revoke")))
   {
-    printf("usage: %s (--grant|--revoke)\n",argv[0]);
+    printf("usage: %s (--grant|--revoke) ttyname\n",argv[0]);
     printf("%s is a helper for\n",argv[0]);
     printf("konsole and not intented to\n");
     printf("be called from the command\n");
@@ -82,6 +88,10 @@ int main (int argc, char *argv[])
   {
     uid = 0;        /* root */
     mod = S_IRUSR|S_IWUSR|S_IRGRP|S_IWGRP|S_IROTH|S_IWOTH;
+#ifdef __OpenBSD__
+	logout(argv[2]+5);
+	exit(0);
+#endif
   }
   /* Get the group ID of the special `tty' group.  */
   p = getgrnam(TTY_GROUP);            /* posix */
@@ -176,5 +186,29 @@ int main (int argc, char *argv[])
     return 1; /* FAIL */
   }
 
+#ifdef __OpenBSD__
+  /* Make sure the tty is fd 0, to help login work */
+  dup2(open(tty, O_RDWR), 0);
+  {
+      char *str_ptr;
+      struct utmp l_struct;
+      memset(&l_struct, 0, sizeof(struct utmp));
+
+      if (! (str_ptr=getlogin()) ) {
+	return 1;
+      }
+      strncpy(l_struct.ut_name, str_ptr, UT_NAMESIZE);
+
+      if (gethostname(l_struct.ut_host, UT_HOSTSIZE) == -1) {
+	 if (errno != ENOMEM)
+	    return 1;
+	 l_struct.ut_host[UT_HOSTSIZE]=0;
+      }
+
+      strncpy(l_struct.ut_line, argv[2]+5, UT_LINESIZE);
+      time(&l_struct.ut_time); 
+      login(&l_struct);
+    }
+#endif
   return 0; /* OK */
 }
