$OpenBSD: patch-jdk_src_solaris_classes_sun_nio_fs_BsdFileStore_java,v 1.3 2011/01/11 15:47:50 kurt Exp $
--- jdk/src/solaris/classes/sun/nio/fs/BsdFileStore.java.orig	Mon Nov  1 13:15:34 2010
+++ jdk/src/solaris/classes/sun/nio/fs/BsdFileStore.java	Mon Nov  1 13:16:30 2010
@@ -36,10 +36,6 @@ import java.io.IOException;
 class BsdFileStore
     extends UnixFileStore
 {
-    // used when checking if extended attributes are enabled or not
-    private volatile boolean xattrChecked;
-    private volatile boolean xattrEnabled;
-
     BsdFileStore(UnixPath file) throws IOException {
         super(file);
     }
@@ -54,7 +50,7 @@ class BsdFileStore
      */
     @Override
     UnixMountEntry findMountEntry() throws IOException {
-        BsdFileSystem fs = (BsdFileSystem)file().getFileSystem();
+        UnixFileSystem fs = file().getFileSystem();
 
         // step 1: get realpath
         UnixPath path = null;
@@ -80,20 +76,20 @@ class BsdFileStore
             parent = parent.getParent();
         }
 
-        // step 3: lookup mounted file systems (use /proc/mounts to ensure we
-        // find the file system even when not in /etc/mtab)
+        // step 3: lookup mounted file systems
         byte[] dir = path.asByteArray();
-        for (UnixMountEntry entry: fs.getMountEntries("/proc/mounts")) {
+        for (UnixMountEntry entry: fs.getMountEntries()) {
             if (Arrays.equals(dir, entry.dir()))
                 return entry;
         }
 
-        throw new IOException("Mount point not found");
+        throw new IOException("Mount point not found in fstab");
     }
 
     // returns true if extended attributes enabled on file system where given
     // file resides, returns false if disabled or unable to determine.
     private boolean isExtendedAttributesEnabled(UnixPath path) {
+/*
         try {
             int fd = path.openForAttributeAccess(false);
             try {
@@ -110,11 +106,13 @@ class BsdFileStore
         } catch (IOException ignore) {
             // nothing we can do
         }
+*/
         return false;
     }
 
     @Override
     public boolean supportsFileAttributeView(Class<? extends FileAttributeView> type) {
+/*
         // support DosFileAttributeView and UserDefinedAttributeView if extended
         // attributes enabled
         if (type == DosFileAttributeView.class ||
@@ -145,15 +143,18 @@ class BsdFileStore
             }
             return xattrEnabled;
         }
+*/
         return super.supportsFileAttributeView(type);
     }
 
     @Override
     public boolean supportsFileAttributeView(String name) {
+/*
         if (name.equals("dos"))
             return supportsFileAttributeView(DosFileAttributeView.class);
         if (name.equals("user"))
             return supportsFileAttributeView(UserDefinedFileAttributeView.class);
+*/
         return super.supportsFileAttributeView(name);
     }
 }
