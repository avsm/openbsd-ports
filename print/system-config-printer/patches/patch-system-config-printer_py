set_program_name(domain) requires newer py-gtk2, but is kept back
due to implied py-Nummeric update.

$OpenBSD: patch-system-config-printer_py,v 1.3 2008/07/08 09:33:21 ajacoutot Exp $
--- system-config-printer.py.orig	Wed Jul  2 16:21:38 2008
+++ system-config-printer.py	Wed Jul  2 16:23:41 2008
@@ -309,7 +309,7 @@ class GUI(GtkGUI, monitor.Watcher):
         np.NewPrinterWindow.set_transient_for(self.MainWindow)
 
         # Set up "About" dialog
-        self.AboutDialog.set_program_name(domain)
+        #self.AboutDialog.set_program_name(domain)
         self.AboutDialog.set_version(config.VERSION)
         self.AboutDialog.set_icon_name('printer')
 
@@ -341,7 +341,7 @@ class GUI(GtkGUI, monitor.Watcher):
         self.dests_iconview.set_model(self.mainlist)
         self.dests_iconview.set_pixbuf_column (1)
         self.dests_iconview.set_text_column (2)
-        self.dests_iconview.set_tooltip_column (3)
+        #self.dests_iconview.set_tooltip_column (3)
         self.dests_iconview.connect ('item-activated',
                                      self.dests_iconview_item_activated)
         self.dests_iconview.connect ('selection-changed',
@@ -3325,7 +3325,7 @@ class NewPrinterGUI(GtkGUI):
         # Try to get make and model via SNMP
         if host:
             os.environ["HOST"] = host
-            cmd = '/usr/lib/cups/backend/snmp "${HOST}"'
+            cmd = '${LOCALBASE}/libexec/cups/backend/snmp "${HOST}"'
             debugprint (host + ": " + cmd)
             stdout = None
             try:
@@ -4627,7 +4627,7 @@ class NewPrinterGUI(GtkGUI):
                 try:
                     # We want this to be in the current natural language,
                     # so we intentionally don't set LC_ALL=C here.
-                    p = subprocess.Popen (['/usr/bin/cupstestppd',
+                    p = subprocess.Popen (['${LOCALBASE}/bin/cupstestppd',
                                            '-rvv', filename],
                                           stdin=file("/dev/null"),
                                           stdout=subprocess.PIPE,
