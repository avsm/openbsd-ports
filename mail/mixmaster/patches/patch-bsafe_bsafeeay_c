$OpenBSD: patch-bsafe_bsafeeay_c,v 1.1.1.1 2001/07/04 15:22:33 lebel Exp $
use openssl header files in /usr/include
and correct some pointer type mismatches

--- Src/bsafe/bsafeeay.c.orig	Tue Jan 19 03:29:20 1999
+++ Src/bsafe/bsafeeay.c	Sun Jun  3 20:38:34 2001
@@ -54,12 +54,12 @@
 #include <stdio.h>
 #include <unistd.h>
 #include <stdarg.h>
-#include <rsa.h>
-#include <des.h>
-#include <md5.h>
-#include <sha.h>
-#include <rand.h>
-#include <dh.h>
+#include <openssl/rsa.h>
+#include <openssl/des.h>
+#include <openssl/md5.h>
+#include <openssl/sha.h>
+#include <openssl/rand.h>
+#include <openssl/dh.h>
 #include <bsafeeay.h>
 #include <assert.h>
 
@@ -1674,8 +1674,8 @@ B_EncryptUpdate( B_ALGORITHM_OBJ obj, PO
 
       des_set_key( (des_cblock *)kobj->data, sched );
 
-      des_ncbc_encrypt( (des_cblock *)in, 
-			(des_cblock *)out, 
+      des_ncbc_encrypt( in, 
+			out, 
 			inlen, 
 			sched, 
 			(des_cblock *)obj->info, 
@@ -1698,8 +1698,8 @@ B_EncryptUpdate( B_ALGORITHM_OBJ obj, PO
       des_set_key( (des_cblock *)(kobj->data + 2 * sizeof(des_cblock)),
 		  sched3 );
 
-      des_ede3_cbc_encrypt( (des_cblock *)in, 
-			   (des_cblock *)out, 
+      des_ede3_cbc_encrypt( in, 
+			   out, 
 			   inlen, 
 			   sched1, sched2, sched3,
 			   (des_cblock *)obj->info, 
@@ -1735,8 +1735,8 @@ B_EncryptUpdate( B_ALGORITHM_OBJ obj, PO
       kobj = (B_KEY_OBJ)obj->key;
       des_set_key( (des_cblock *)kobj->data, sched );
 
-      des_ncbc_encrypt( (des_cblock *)in_pad, 
-			(des_cblock *)out, 
+      des_ncbc_encrypt( in_pad, 
+			out, 
 			newlen, 
 			sched, 
 			(des_cblock *)obj->info, 
@@ -1772,8 +1772,8 @@ B_EncryptUpdate( B_ALGORITHM_OBJ obj, PO
 
       des_set_key( (des_cblock *)obj->state, sched );
 
-      des_ncbc_encrypt( (des_cblock *)in_pad, 
-			(des_cblock *)out, 
+      des_ncbc_encrypt( in_pad, 
+			out, 
 			newlen, 
 			sched, 
 			(des_cblock *)&(obj->state[8]), 
@@ -1809,8 +1809,8 @@ B_EncryptUpdate( B_ALGORITHM_OBJ obj, PO
 
       des_set_key( (des_cblock *)obj->state, sched );
 
-      des_ncbc_encrypt( (des_cblock *)in_pad, 
-			(des_cblock *)out, 
+      des_ncbc_encrypt( in_pad, 
+			out, 
 			newlen, 
 			sched, 
 			(des_cblock *)&(obj->state[8]), 
@@ -2039,8 +2039,8 @@ B_DecryptUpdate( B_ALGORITHM_OBJ obj, PO
 
       des_set_key( (des_cblock *)kobj->data, sched );
       
-      des_ncbc_encrypt( (des_cblock *)in, 
-			(des_cblock *)out, 
+      des_ncbc_encrypt( in, 
+			out, 
 			inlen, 
 			sched, 
 			(des_cblock *)obj->info, 
@@ -2063,8 +2063,8 @@ B_DecryptUpdate( B_ALGORITHM_OBJ obj, PO
       des_set_key( (des_cblock *)(kobj->data + 2 * sizeof(des_cblock)),
 		  sched3 );
       
-      des_ede3_cbc_encrypt( (des_cblock *)in, 
-			   (des_cblock *)out, 
+      des_ede3_cbc_encrypt( in, 
+			   out, 
 			   inlen, 
 			   sched1, sched2, sched3,
 			   (des_cblock *)obj->info, 
@@ -2082,8 +2082,8 @@ B_DecryptUpdate( B_ALGORITHM_OBJ obj, PO
       kobj = (B_KEY_OBJ)obj->key;
       des_set_key( (des_cblock *)kobj->data, sched );
 
-      des_ncbc_encrypt( (des_cblock *)in, 
-			(des_cblock *)out, 
+      des_ncbc_encrypt( in, 
+			out, 
 			inlen, 
 			sched, 
 			(des_cblock *)obj->info, 
@@ -2104,8 +2104,8 @@ B_DecryptUpdate( B_ALGORITHM_OBJ obj, PO
       kobj = (B_KEY_OBJ)obj->key;
       des_set_key( (des_cblock *)obj->state, sched );
 
-      des_ncbc_encrypt( (des_cblock *)in, 
-			(des_cblock *)out, 
+      des_ncbc_encrypt( in, 
+			out, 
 			inlen, 
 			sched, 
 			(des_cblock *)&(obj->state[8]), 
@@ -2126,8 +2126,8 @@ B_DecryptUpdate( B_ALGORITHM_OBJ obj, PO
       kobj = (B_KEY_OBJ)obj->key;
       des_set_key( (des_cblock *)obj->state, sched );
 
-      des_ncbc_encrypt( (des_cblock *)in, 
-			(des_cblock *)out, 
+      des_ncbc_encrypt( in, 
+			out, 
 			inlen, 
 			sched, 
 			(des_cblock *)&(obj->state[8]), 
