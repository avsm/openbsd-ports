$OpenBSD: patch-src_pysilc_h,v 1.4 2007/10/02 17:35:48 martynas Exp $
--- src/pysilc.h.orig	Mon Jul 10 11:42:36 2006
+++ src/pysilc.h	Sun Jul  1 22:52:11 2007
@@ -22,7 +22,7 @@
 #endif
 
 #include "pysilc_macros.h"
-#include <silcincludes.h>
+#include <silc.h>
 #include <silcclient.h>
 #include <silctypes.h>
 
@@ -40,7 +40,6 @@ typedef struct {
 
 typedef struct {
     PyObject_HEAD
-    SilcPKCS        pkcs;
     SilcPublicKey   public;
     SilcPrivateKey  private;
 } PySilcKeys;
@@ -107,9 +106,11 @@ typedef struct {
         *ftp,
         *detach;
 
-    SilcClient             silcobj;
-    SilcClientConnection   silcconn;
-    SilcClientOperations   callbacks;
+    SilcClient                   silcobj;
+    SilcClientConnection         silcconn;
+    SilcClientConnectCallback    conncallback;
+    SilcClientOperations         callbacks;
+    SilcClientConnectionParams   params;
 
 } PySilcClient;
 
@@ -182,7 +183,7 @@ static PyMemberDef pysilc_user_members[] = {
 
 /*  ---------------- pysilc keys ------------- */
 
-static PyObject *PySilcKeys_New(SilcPKCS pkcs, SilcPublicKey public, SilcPrivateKey private);
+static PyObject *PySilcKeys_New(SilcPublicKey public, SilcPrivateKey private);
 static void PySilcKeys_Del(PyObject *object);
 
 static PyMethodDef pysilc_keys_methods[] = {
@@ -227,9 +228,8 @@ static PyMethodDef pysilc_client_methods[] = {
         (PyCFunction)pysilc_client_send_channel_message, 
         METH_VARARGS | METH_KEYWORDS, 
         "send_channel_message(channel, messsage, private_key = None,\n"
-        "                     flags = 0, force_send = False)\n\n"
+        "                     flags = 0)\n\n"
         "Send a message (Unicode string) to a channel (SilcChannel object).\n"
-        "Setting 'force_send' to True means send the packet immediately\n."
         "TODO: flags and private_key support not implemented.\n"
     },
     {
@@ -237,9 +237,8 @@ static PyMethodDef pysilc_client_methods[] = {
         (PyCFunction)pysilc_client_send_private_message, 
         METH_VARARGS | METH_KEYWORDS, 
         "send_private_message(user, messsage, private_key = None,\n"
-        "                     flags = 0, force_send = False)\n\n"
+        "                     flags = 0)\n\n"
         "Send a message (Unicode string) to a user (SilcUser object).\n"
-        "Setting 'force_send' to True means send the packet immediately\n."
         "TODO: flags and private_key support not implemented.\n"
     },
     {
@@ -402,7 +401,8 @@ static PyMemberDef pysilc_client_members[] = {
 };
 
 #define PYSILC_CLIENT_DOC  "\
-  SilcClient(keys, nickname = \"\", username = \"\",\n\ realname = \"\",\
+  SilcClient(keys, nickname = \"\", username = \"\",\n\
+             realname = \"\",\
              hostname = \"\")\n\n\
   A SILC Client. 'keys' is a SilcKeys representing a public private\n\
   key pair. 'nickname', 'username', 'realname' and 'hostname'\n\
@@ -461,8 +461,7 @@ Attributes accessible:\n\n\
   channel_id = string (64-160bit)\n\n\
   mode = int\n\n\
   topic = string\n\n\
-  user_limit = int \n\n\
-  resolve_cmd_ident = int"
+  user_limit = int"
 
 static PyTypeObject PySilcChannel_Type = {
     PyObject_HEAD_INIT(&PyType_Type)
@@ -514,11 +513,8 @@ Accessible Attributes:\n\n\
   server = string\n\n\
   realname = string\n\n\
   fingerprint = string\n\n\
-  fingerprint_len = int\n\n\
   user_id = string (64/160bit)\n\n\
-  mode = int\n\n\
-  status = int\n\n\
-  resolve_cmd_ident = int"
+  mode = int"
 
 static PyTypeObject PySilcUser_Type = {
     PyObject_HEAD_INIT(&PyType_Type)
