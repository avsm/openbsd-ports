*** musicin.c.orig	Tue Jan  4 20:13:44 1994
--- musicin.c	Wed May 20 02:39:32 1998
***************
*** 101,106 ****
--- 101,108 ----
  #include "common.h"
  #include "encoder.h"
  
+ #include <stdlib.h>
+ 
  /* Global variable definitions for "musicin.c" */
  
  FILE               *musicin;
***************
*** 144,150 ****
   
      do  {
         printf("Enter PCM input file name <required>: ");
!        gets(original_file_name);
         if (original_file_name[0] == NULL_CHAR)
         printf("PCM input file name is required.\n");
      } while (original_file_name[0] == NULL_CHAR);
--- 146,152 ----
   
      do  {
         printf("Enter PCM input file name <required>: ");
!        fgets(original_file_name, MAX_NAME_SIZE-1, stdin);
         if (original_file_name[0] == NULL_CHAR)
         printf("PCM input file name is required.\n");
      } while (original_file_name[0] == NULL_CHAR);
***************
*** 163,169 ****
             original_file_name, DFLT_EXT);
  #endif
   
!     gets(encoded_file_name);
      if (encoded_file_name[0] == NULL_CHAR) {
  #ifdef  MS_DOS
          /* replace old extension with new one, 92-08-19 shn */
--- 165,171 ----
             original_file_name, DFLT_EXT);
  #endif
   
!     fgets(encoded_file_name, MAX_NAME_SIZE-1, stdin);
      if (encoded_file_name[0] == NULL_CHAR) {
  #ifdef  MS_DOS
          /* replace old extension with new one, 92-08-19 shn */
***************
*** 207,213 ****
      else {    /* Not using Audio IFF sound file headers. */
  
         printf("What is the sampling frequency? <44100>[Hz]: ");
!        gets(t);
         freq = atol(t);
         switch (freq) {
            case 48000 : info->sampling_frequency = 1;
--- 209,215 ----
      else {    /* Not using Audio IFF sound file headers. */
  
         printf("What is the sampling frequency? <44100>[Hz]: ");
!        fgets(t, 49, stdin);
         freq = atol(t);
         switch (freq) {
            case 48000 : info->sampling_frequency = 1;
***************
*** 236,242 ****
  
      printf("Which layer do you want to use?\n");
      printf("Available: Layer (1), Layer (<2>): ");
!     gets(t);
      switch(*t){
         case '1': info->lay = 1; printf(">>> Using Layer %s\n",t); break;
         case '2': info->lay = 2; printf(">>> Using Layer %s\n",t); break;
--- 238,244 ----
  
      printf("Which layer do you want to use?\n");
      printf("Available: Layer (1), Layer (<2>): ");
!     fgets(t, 49, stdin);
      switch(*t){
         case '1': info->lay = 1; printf(">>> Using Layer %s\n",t); break;
         case '2': info->lay = 2; printf(">>> Using Layer %s\n",t); break;
***************
*** 246,252 ****
      printf("Which mode do you want?\n");
      printf("Available: (<s>)tereo, (j)oint stereo, ");
      printf("(d)ual channel, s(i)ngle Channel: ");
!     gets(t);
      switch(*t){
         case 's':
         case 'S':
--- 248,254 ----
      printf("Which mode do you want?\n");
      printf("Available: (<s>)tereo, (j)oint stereo, ");
      printf("(d)ual channel, s(i)ngle Channel: ");
!     fgets(t, 49, stdin);
      switch(*t){
         case 's':
         case 'S':
***************
*** 275,281 ****
      }
  
      printf("Which psychoacoustic model do you want to use? <2>: ");
!     gets(t);
      model = atoi(t);
      if (model > 2 || model < 1) {
         printf(">>> Default model 2 selected\n");
--- 277,283 ----
      }
  
      printf("Which psychoacoustic model do you want to use? <2>: ");
!     fgets(t, 49, stdin);
      model = atoi(t);
      if (model > 2 || model < 1) {
         printf(">>> Default model 2 selected\n");
***************
*** 287,293 ****
      }
   
      printf("What is the total bitrate? <%u>[kbps]: ", DFLT_BRT);
!     gets(t);
      brt = atoi(t);
      if (brt == 0) brt = -10;
      j=0;
--- 289,295 ----
      }
   
      printf("What is the total bitrate? <%u>[kbps]: ", DFLT_BRT);
!     fgets(t, 49, stdin);
      brt = atoi(t);
      if (brt == 0) brt = -10;
      j=0;
***************
*** 310,316 ****
   
      printf("What type of de-emphasis should the decoder use?\n");
      printf("Available: (<n>)one, (5)0/15 microseconds, (c)citt j.17: ");
!     gets(t);
      if (*t != 'n' && *t != '5' && *t != 'c') {
         printf(">>> Using default no de-emphasis\n");
         info->emphasis = 0;
--- 312,318 ----
   
      printf("What type of de-emphasis should the decoder use?\n");
      printf("Available: (<n>)one, (5)0/15 microseconds, (c)citt j.17: ");
!     fgets(t, 49, stdin);
      if (*t != 'n' && *t != '5' && *t != 'c') {
         printf(">>> Using default no de-emphasis\n");
         info->emphasis = 0;
***************
*** 325,331 ****
  /*  Start 2. Part changes for CD Ver 3.2; jsp; 22-Aug-1991 */
   
      printf("Do you want to set the private bit? (y/<n>): ");
!     gets(t);
      if (*t == 'y' || *t == 'Y') info->extension = 1;
      else                        info->extension = 0;
      if(info->extension) printf(">>> Private bit set\n");
--- 327,333 ----
  /*  Start 2. Part changes for CD Ver 3.2; jsp; 22-Aug-1991 */
   
      printf("Do you want to set the private bit? (y/<n>): ");
!     fgets(t, 49, stdin);
      if (*t == 'y' || *t == 'Y') info->extension = 1;
      else                        info->extension = 0;
      if(info->extension) printf(">>> Private bit set\n");
***************
*** 334,361 ****
  /*  End changes for CD Ver 3.2; jsp; 22-Aug-1991 */
   
      printf("Do you want error protection? (y/<n>): ");
!     gets(t);
      if (*t == 'y' || *t == 'Y') info->error_protection = TRUE;
      else                        info->error_protection = FALSE;
      if(info->error_protection) printf(">>> Error protection used\n");
      else printf(">>> Error protection not used\n");
   
      printf("Is the material copyrighted? (y/<n>): ");
!     gets(t);
      if (*t == 'y' || *t == 'Y') info->copyright = 1;
      else                        info->copyright = 0;
      if(info->copyright) printf(">>> Copyrighted material\n");
      else                printf(">>> Material not copyrighted\n");
   
      printf("Is this the original? (y/<n>): ");
!     gets(t);
      if (*t == 'y' || *t == 'Y') info->original = 1;
      else                        info->original = 0;
      if(info->original) printf(">>> Original material\n");
      else               printf(">>> Material not original\n");
   
      printf("Do you wish to exit (last chance before encoding)? (y/<n>): ");
!     gets(t);
      if (*t == 'y' || *t == 'Y') exit(0);
  }
  
--- 336,363 ----
  /*  End changes for CD Ver 3.2; jsp; 22-Aug-1991 */
   
      printf("Do you want error protection? (y/<n>): ");
!     fgets(t, 49, stdin);
      if (*t == 'y' || *t == 'Y') info->error_protection = TRUE;
      else                        info->error_protection = FALSE;
      if(info->error_protection) printf(">>> Error protection used\n");
      else printf(">>> Error protection not used\n");
   
      printf("Is the material copyrighted? (y/<n>): ");
!     fgets(t, 49, stdin);
      if (*t == 'y' || *t == 'Y') info->copyright = 1;
      else                        info->copyright = 0;
      if(info->copyright) printf(">>> Copyrighted material\n");
      else                printf(">>> Material not copyrighted\n");
   
      printf("Is this the original? (y/<n>): ");
!     fgets(t, 49, stdin);
      if (*t == 'y' || *t == 'Y') info->original = 1;
      else                        info->original = 0;
      if(info->original) printf(">>> Original material\n");
      else               printf(">>> Material not original\n");
   
      printf("Do you wish to exit (last chance before encoding)? (y/<n>): ");
!     fgets(t, 49, stdin);
      if (*t == 'y' || *t == 'Y') exit(0);
  }
  
