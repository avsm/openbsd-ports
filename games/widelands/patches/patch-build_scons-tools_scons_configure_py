$OpenBSD: patch-build_scons-tools_scons_configure_py,v 1.1.1.1 2007/10/01 21:37:28 simon Exp $
--- build/scons-tools/scons_configure.py.orig	Sat Sep  8 00:53:34 2007
+++ build/scons-tools/scons_configure.py	Sun Sep 23 21:19:12 2007
@@ -172,6 +172,8 @@ def do_configure(config_h_file, conf, env):
 		print "Your compiler does not support __attribute__((format(printf, 2, 3))) which is neccessary for widelands. Please get a decent compiler."
 		env.Exit(1)
 
+	env.Append(LIBS=['iconv'])
+
 	setlocalefound=0
 	if (conf.CheckFunc('setlocale') or conf.CheckLibWithHeader('', 'locale.h', 'C', 'setlocale("LC_ALL", "C");', autoadd=0)):
 		setlocalefound=1
@@ -271,23 +273,23 @@ def do_configure(config_h_file, conf, env):
 	conf.CheckCompilerFlag('-Wcast-qual', env)
 	conf.CheckCompilerFlag('-Wconversion', env)
 	conf.CheckCompilerFlag('-Wdisabled-optimization', env)
-	conf.CheckCompilerFlag('-Wextra', env)
+	#conf.CheckCompilerFlag('-Wextra', env)
 	#conf.CheckCompilerFlag('-Wfloat-equal', env)
 	#conf.CheckCompilerFlag('-Wformat=2', env)
 	conf.CheckCompilerFlag('-Winline', env)
-	conf.CheckCompilerFlag('-Winvalid-pch', env)
+	#conf.CheckCompilerFlag('-Winvalid-pch', env)
 	conf.CheckCompilerFlag('-Wmissing-format-attribute', env)
-	conf.CheckCompilerFlag('-Wmissing-include-dirs', env)
+	#conf.CheckCompilerFlag('-Wmissing-include-dirs', env)
 	conf.CheckCompilerFlag('-Wmissing-noreturn', env)
 	conf.CheckCompilerFlag('-Wno-comment', env)
-	conf.CheckCompilerFlag('-Wnormalized=nfc', env)
+	#conf.CheckCompilerFlag('-Wnormalized=nfc', env)
 	#conf.CheckCompilerFlag('-Wold-style-cast', env)
 	#conf.CheckCompilerFlag('-Wpadded', env)
 	conf.CheckCompilerFlag('-Wpointer-arith', env)
-	conf.CheckCompilerFlag('-Wunsafe-loop-optimizations', env)
+	#conf.CheckCompilerFlag('-Wunsafe-loop-optimizations', env)
 	conf.CheckCompilerFlag('-Wshadow', env)
 	conf.CheckCompilerFlag('-Wstack-protector', env)
-	conf.CheckCompilerFlag('-Wstrict-aliasing=2', env)
+	#conf.CheckCompilerFlag('-Wstrict-aliasing=2', env)
 	#conf.CheckCompilerFlag('-Wunreachable-code', env)
 	conf.CheckCompilerFlag('-Wwrite-strings', env)
 
@@ -302,7 +304,7 @@ def do_configure(config_h_file, conf, env):
 		conf.CheckCompilerFlag('-finline-functions', env)
 		conf.CheckCompilerFlag('-ffast-math', env)
 		conf.CheckCompilerFlag('-funroll-loops', env)
-		conf.CheckCompilerFlag('-O3', env)
+		#conf.CheckCompilerFlag('-O3', env)
 	else:
 		conf.CheckCompilerFlag('-O0', env)
 
