*** mirror.pl.orig	Sat Mar 16 15:46:09 1996
--- mirror.pl	Sat Mar 16 15:51:49 1996
***************
*** 75,81 ****
  
  # Try to find the default localation of various programs via
  # the users PATH then using $extra_path
! $extra_path = '/usr/local/bin:/usr/new/bin:/usr/public/bin:/usr/ucb:/usr/bin:/bin:/etc:/usr/etc:/usr/local/etc';
  $ENV{ 'PATH' } .= ':' . $extra_path;
  
  &trap_signals();
--- 75,81 ----
  
  # Try to find the default localation of various programs via
  # the users PATH then using $extra_path
! $extra_path = '/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin';
  $ENV{ 'PATH' } .= ':' . $extra_path;
  
  &trap_signals();
***************
*** 128,146 ****
  $rm_prog = &find_prog( 'rm' );
  
  # Generate checksums
! $sum_prog = &find_prog( 'sum' );
  
  # SPECIAL NOTE: This is eval'd, so DONT put double-quotes (") in it.
  # You can get local variables to appear as in the second example:
! $mail_subject = '-s \'mirror update\'';
! # $mail_subject = ' -s \'mirror update of $package\'';
  
  # When scanning the local directory, how often to prod the remote
  # system to keep the connection alive
  $prod_interval = 60;
  
  # Put the directory that mirror is actually in at the start of PERLLIB.
! $dir = &real_dir_from_path( $0 );
  unshift( @INC, $dir );
  
  # Make sure that your PERLLIB environment variable can get you
--- 128,147 ----
  $rm_prog = &find_prog( 'rm' );
  
  # Generate checksums
! $sum_prog = &find_prog( 'md5' );
  
  # SPECIAL NOTE: This is eval'd, so DONT put double-quotes (") in it.
  # You can get local variables to appear as in the second example:
! # $mail_subject = '-s \'mirror update\'';
! $mail_subject = ' -s \'mirror update of $package\'';
  
  # When scanning the local directory, how often to prod the remote
  # system to keep the connection alive
  $prod_interval = 60;
  
  # Put the directory that mirror is actually in at the start of PERLLIB.
! # $dir = &real_dir_from_path( $0 );
! $dir = "!!PREFIX!!/lib/mirror";
  unshift( @INC, $dir );
  
  # Make sure that your PERLLIB environment variable can get you
