$OpenBSD: patch-Imakefile,v 1.1 2003/12/31 17:49:34 espie Exp $
--- Imakefile.orig	2003-12-31 18:41:06.000000000 +0100
+++ Imakefile	2003-12-31 18:42:28.000000000 +0100
@@ -1,88 +1,88 @@
-/**/#
-/**/# Imakefile for xarchie : X11 Browser interface to Archie
-/**/#
-/**/# George Ferguson, ferguson@cs.rochester.edu, 12 Sep 1991.
-/**/# Version 2.0: 23 Apr 1993.
-/**/#
-/**/# Unless otherwise indicated, you have to delete both `/**/' and the
-/**/# leading `#' sign to uncomment something. To comment something out,
-/**/# you need to add both the `/**/' (for cpp via imake) and `#' (for
-/**/# make). Just for completeness, if you're reading this in a Makefile,
-/**/# there will be some empty `' things above -- see the Imakefile.
-/**/#
+XCOMM
+XCOMM Imakefile for xarchie : X11 Browser interface to Archie
+XCOMM
+XCOMM George Ferguson, ferguson@cs.rochester.edu, 12 Sep 1991.
+XCOMM Version 2.0: 23 Apr 1993.
+XCOMM
+XCOMM Unless otherwise indicated, you have to delete both `/**/' and the
+XCOMM leading `#' sign to uncomment something. To comment something out,
+XCOMM you need to add both the `/**/' (for cpp via imake) and `#' (for
+XCOMM make). Just for completeness, if you're reading this in a Makefile,
+XCOMM there will be some empty `' things above -- see the Imakefile.
+XCOMM
 
 #include "config.h"
 
-/**/# Where do you want this stuff? Uncomment and adjust these to change the
-/**/# destinations of "make install" and "make install.man" if the defaults
-/**/# are not satisfactory.
-/**/#BINDIR = bin
-/**/#MANDIR = man/man1
-/**/# Use this for R5
-/**/#MANSUFFIX = 1
-/**/# Use this for R4 (leave one # sign since these are cpp commands for imake)
-/**/##undef ManSuffix
-/**/##define ManSuffix 1
-
-/**/# Where is the app-defaults to C converter?
-/**/# Only needed if you change the app-defaults file Xarchie.ad and want the
-/**/# changes compiled into the program. If you don't have ad2c you should
-/**/# remove the extra clean target for Xarchie.ad.h below. If you lose
-/**/# Xarchie.ad.h and can't remake it, create it to be an empty file. Of
-/**/# course then you'll have to be able to find the resource file at run time.
-/**/# If your ad2c came from this xarchie distribution, then use the following
-/**/# target, otherwise change it to reflect where you put ad2c.
+XCOMM Where do you want this stuff? Uncomment and adjust these to change the
+XCOMM destinations of "make install" and "make install.man" if the defaults
+XCOMM are not satisfactory.
+XCOMM BINDIR = bin
+XCOMM MANDIR = man/man1
+XCOMM  Use this for R5
+XCOMM MANSUFFIX = 1
+XCOMM  Use this for R4 (leave one # sign since these are cpp commands for imake)
+XCOMM #undef ManSuffix
+XCOMM #define ManSuffix 1
+
+XCOMM  Where is the app-defaults to C converter?
+XCOMM  Only needed if you change the app-defaults file Xarchie.ad and want the
+XCOMM  changes compiled into the program. If you don't have ad2c you should
+XCOMM  remove the extra clean target for Xarchie.ad.h below. If you lose
+XCOMM  Xarchie.ad.h and can't remake it, create it to be an empty file. Of
+XCOMM  course then you'll have to be able to find the resource file at run time.
+XCOMM  If your ad2c came from this xarchie distribution, then use the following
+XCOMM  target, otherwise change it to reflect where you put ad2c.
 AD2C = Ad2c/ad2c.script
 
-/**/# How excited are you about debugging? This can be -g, -O, or nothing.
-/**/#CDEBUGFLAGS = -g
+XCOMM  How excited are you about debugging? This can be -g, -O, or nothing.
+XCOMM CDEBUGFLAGS = -g
 
-/**/# If the help strings make your executable too large, disable the
-/**/# online help by commenting out the following lines.
+XCOMM  If the help strings make your executable too large, disable the
+XCOMM  online help by commenting out the following lines.
 HELP = -DHELP
 HELPC = help.c
 HELPO = help.o
 
-/**/# To enable Prospero tracing (controlled by the -debug option),
-/**/# uncomment this.
-/**/#PDEBUG = -DDEBUG
+XCOMM  To enable Prospero tracing (controlled by the -debug option),
+XCOMM  uncomment this.
+XCOMM PDEBUG = -DDEBUG
 
-/**/# Does your system have re_comp() and re_exec(), or regcmp() and regex()
-/**/# [in the case of A/UX]? If not, adjust the following definitions.
+XCOMM  Does your system have re_comp() and re_exec(), or regcmp() and regex()
+XCOMM  [in the case of A/UX]? If not, adjust the following definitions.
 #if !defined(HAVE_RE_COMP) || !defined(HAVE_REGCMP)
 REGEXC = regex.c
 REGEXO = regex.o
 #endif
 
-/**/# If you don't have <sys/param.h> to define MAXPATHLEN, then adjust
-/**/# the following definition.
+XCOMM  If you don't have <sys/param.h> to define MAXPATHLEN, then adjust
+XCOMM  the following definition.
 #ifndef HAVE_SYS_PARAM_H
 MAXPATHLEN = -DMAXPATHLEN=256
 #endif
 
-/**/# If you don't have strcasecmp() and strncasecmp(), adjust the
-/**/# following definitions:
+XCOMM  If you don't have strcasecmp() and strncasecmp(), adjust the
+XCOMM  following definitions:
 #ifndef HAVE_STRCASECMP
 STRCASECMP = -DSTRCASECMP
 STRCASECMPC = strcasecmp.c
 STRCASECMPO = strcasecmp.o
 #endif
 
-/**/# If your system does not use DNS hostname lookup by default, you
-/**/# need to uncomment the following definition. This will be apparent
-/**/# if the program builds but gives the error: "Can't resolve hostname".
-/**/# You can test this by building and running resolv.c.
+XCOMM  If your system does not use DNS hostname lookup by default, you
+XCOMM  need to uncomment the following definition. This will be apparent
+XCOMM  if the program builds but gives the error: "Can't resolve hostname".
+XCOMM  You can test this by building and running resolv.c.
 #ifdef NEED_LRESOLV
 RESOLV_LIB = -lresolv
 #endif
 
-/**/# You can enable the use of a FileChooser widget for dialogs that
-/**/# require a filename (Save, Load, Write, etc). If your system has
-/**/# trouble with the subclassing of widgets for the FileChooser
-/**/# class or with the device-independent directory routines in FWF/Dir,
-/**/# you should remove the #define of UseFileChooser.
-/**/# NOTE: If you are reading this in the Makefile and nothing follows,
-/**/#       then use of the FileChooser widget was disabled in the Imakefile.
+XCOMM  You can enable the use of a FileChooser widget for dialogs that
+XCOMM  require a filename (Save, Load, Write, etc). If your system has
+XCOMM  trouble with the subclassing of widgets for the FileChooser
+XCOMM  class or with the device-independent directory routines in FWF/Dir,
+XCOMM  you should remove the #define of UseFileChooser.
+XCOMM  NOTE: If you are reading this in the Makefile and nothing follows,
+XCOMM        then use of the FileChooser widget was disabled in the Imakefile.
 #define UseFileChooser
 #ifdef UseFileChooser
 FCHOOSER_DEF = -DFILECHOOSER
@@ -100,12 +100,12 @@ FCHOOSER_LIBS = $(FCHOOSER_LIB) $(DIR_LI
 FCHOOSER_DEPS = $(FCHOOSER_DEP) $(DIR_DEP)
 #endif
 
-/**/# You want to use the MultiList widget if possible. If you have problems
-/**/# with the subclassing in your version of X, you can use the regular
-/**/# Athena List widget by removing the #define of UseMultiList. Of course
-/**/# then you will not be able to make multiple selections.
-/**/# NOTE: If you are reading this in the Makefile and nothing follows,
-/**/#       then use of the MultiList widget was disabled in the Imakefile.
+XCOMM  You want to use the MultiList widget if possible. If you have problems
+XCOMM  with the subclassing in your version of X, you can use the regular
+XCOMM  Athena List widget by removing the #define of UseMultiList. Of course
+XCOMM  then you will not be able to make multiple selections.
+XCOMM  NOTE: If you are reading this in the Makefile and nothing follows,
+XCOMM        then use of the MultiList widget was disabled in the Imakefile.
 #define UseMultiList
 #ifdef UseMultiList
 MULTILIST_DEF =	-DMULTILIST
@@ -115,8 +115,8 @@ MULTILIST_LIB =	-L$(MULTILIST_DIR) -lMul
 MULTILIST_DEP =	$(MULTILIST_DIR)/libMultiList.a
 #endif
 
-/**/#########################################################################
-/**/# Nothing to change below here...
+XCOMM ########################################################################
+XCOMM  Nothing to change below here...
 
 PSRCS = atalloc.c dirsend.c get_pauth.c get_vdir.c perrmesg.c ptalloc.c \
 	$(REGEXC) stcopy.c support.c vl_comp.c vlalloc.c
@@ -180,24 +180,24 @@ $(DIR_DEP):
 	(cd $(DIR_DIR); $(MAKE) PassCDebugFlags)
 #endif
 
-/**/#
-/**/# Make C code for fallback resources from application resource file
-/**/#
+XCOMM 
+XCOMM  Make C code for fallback resources from application resource file
+XCOMM 
 Xarchie.ad.h: Xarchie.ad
 	$(AD2C) Xarchie.ad >Xarchie.ad.h
 
-/**/#
-/**/# Make Help text from manpage
-/**/#
+XCOMM 
+XCOMM  Make Help text from manpage
+XCOMM 
 help-text1.h: xarchie.man
 	./help-text1.sh >help-text1.h
 
 help-text2.h: help-text1.h
 	./help-text2.sh <help-text1.h >help-text2.h
 
-/**/#
-/**/# What to do when there's nothing to do...
-/**/#
+XCOMM 
+XCOMM  What to do when there's nothing to do...
+XCOMM 
 World:
 	make Makefile
 	make Makefiles
@@ -205,9 +205,9 @@ World:
 	make clean
 	make
 
-/**/#
-/**/# For debugging with Saber
-/**/#
+XCOMM 
+XCOMM  For debugging with Saber
+XCOMM 
 saberload:
 	# setopt ansi
 	# source xsaber.suppress
