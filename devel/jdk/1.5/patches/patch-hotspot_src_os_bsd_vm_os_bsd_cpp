$OpenBSD: patch-hotspot_src_os_bsd_vm_os_bsd_cpp,v 1.4 2005/11/30 02:21:32 kurt Exp $
--- hotspot/src/os/bsd/vm/os_bsd.cpp.orig	Tue Nov 22 10:16:29 2005
+++ hotspot/src/os/bsd/vm/os_bsd.cpp	Tue Nov 29 09:47:23 2005
@@ -290,8 +290,15 @@ julong os::allocatable_physical_memory(j
      // is not known at this point.  Alignments will 
      // be at most to LargePageSizeInBytes.  Protect 
      // allocations from alignments up to illegal
-     // values. If at this point 2G is illegal.
+     // values.
+// XXXBSD: This really should be using rlimit to get the actual
+// value and perhaps automaticlly increasing the current rlimit
+// up to the min(rlimit max, size)
+#ifdef __OpenBSD__
+     julong reasonable_size = (julong)1*G - 2 * LargePageSizeInBytes;
+#else
      julong reasonable_size = (julong)2*G - 2 * LargePageSizeInBytes;
+#endif
      result =  MIN2(size, reasonable_size);
    }
    return result;
@@ -313,7 +320,7 @@ static volatile int max_hrtime_lock = LO
 void os::Bsd::initialize_system_info() {
   int mib[2];
   size_t len;
-  int val;
+  u_int val;
 
   /* get processors count via hw.ncpus sysctl */
   mib[0] = CTL_HW;
@@ -429,7 +436,9 @@ void os::init_system_properties_values()
 #define malloc(n) (char*)NEW_C_HEAP_ARRAY(char, (n))
 #define getenv(n) ::getenv(n)
 
+#ifndef DEFAULT_LD_LIBRARY_PATH
 #define DEFAULT_LD_LIBRARY_PATH "/usr/lib" /* See ld.so.1(1) */
+#endif
 #define EXTENSIONS_DIR "/lib/ext"
 #define ENDORSED_DIR "/lib/endorsed"
 
