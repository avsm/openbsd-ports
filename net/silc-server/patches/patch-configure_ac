$OpenBSD: patch-configure_ac,v 1.5 2009/08/01 09:21:55 sthen Exp $
--- configure.ac.orig	Sat Aug  1 10:15:08 2009
+++ configure.ac	Sat Aug  1 10:15:08 2009
@@ -97,9 +97,6 @@ AM_CONDITIONAL(SILC_X86_64, test x$cpu_x86_64 = xtrue)
 AM_CONDITIONAL(SILC_POWERPC, test x$cpu_ppc = xtrue)
 AM_CONDITIONAL(SILC_IA64, test x$cpu_ia64 = xtrue)
 
-# Control compiler optimizations
-CFLAGS=`echo $CFLAGS | sed 's/-O[ 0123456789s]*//g'`
-
 AC_PROG_CC
 AC_C_INLINE
 AC_C_CONST
@@ -471,59 +468,9 @@ fi
 ## Compiler and compiler flag checks
 ##
 
-if test "$GCC"; then
-  # GCC specific options
-  if test "x$summary_debug" = "xyes"; then
-    SILC_ADD_CFLAGS(-g)
-  else
-    SILC_ADD_CFLAGS(-g)
-  fi
-  SILC_ADD_CFLAGS(-Wall -finline-functions)
-  SILC_ADD_CFLAGS(-Wno-pointer-sign)
-else
-  # Other compilers
-  case "$target" in
-    alpha*-dec-osf*)
-      SILC_ADD_CFLAGS(-g3)
-      ;;
-    mips*-sgi-irix*)
-      SILC_ADD_CFLAGS(-g3)
-      ;;
-    *)
-      SILC_ADD_CFLAGS(-g)
-      ;;
-  esac
+SILC_ADD_CFLAGS(-Wall -finline-functions)
+SILC_ADD_CFLAGS(-Wno-pointer-sign)
 
-  # Intel C++ Compiler needs -restrict
-  if test "x$CC" = "xicc"; then
-    SILC_ADD_CFLAGS(-restrict)
-  fi
-fi
-
-if test x$want_cc_optimizations = xtrue; then
-  if test "$GCC"; then
-    # GCC specific options
-    if test "x$summary_debug" = "xyes"; then
-      SILC_ADD_CFLAGS(-O)
-    else
-      SILC_ADD_CFLAGS(-O2)
-    fi
-  else
-    # Other compilers
-    case "$target" in
-      alpha*-dec-osf*)
-        SILC_ADD_CFLAGS(-O2, SILC_ADD_CFLAGS(-O))
-        ;;
-      mips*-sgi-irix*)
-        SILC_ADD_CFLAGS(-O2, SILC_ADD_CFLAGS(-O))
-        ;;
-      *)
-        SILC_ADD_CFLAGS(-O2, SILC_ADD_CFLAGS(-O))
-        ;;
-    esac
-  fi
-fi
-
 #
 # Workaround a bug in GCC 2.x which causes memory exhaustion
 # when compiling sha1 with optimizations on UltraSPARC.
@@ -578,55 +525,6 @@ AC_DEFINE_UNQUOTED([SILC_DOCDIR], "$DOCDIR", [SILC_DOC
 # SILC library checking
 compile_libs=true
 LIBSUBDIR=lib
-
-AC_ARG_WITH(silc-includes,
-  [  --with-silc-includes=DIR SILC Toolkit includes [search in DIR]],
-  [ac_silc_includes="$withval"], [ac_silc_includes="no"])
-AC_ARG_WITH(silc-libs,
-  [  --with-silc-libs=DIR     SILC Toolkit libraries [search in DIR]],
-  [ac_silc_libs="$withval"], [ac_silc_libs="no"])
-
-if test -n "$with_silc_includes" || test -n "$with_silc_libs"; then
-
-  # Manually provided libs
-  if test "$ac_silc_includes" != "no"; then
-    compile_libs=false
-    SILC_LIB_INCLUDES="-I$ac_silc_includes"
-    LIBSUBDIR=
-  fi
-  if test "$ac_silc_libs" != "no"; then
-    compile_libs=false
-    LIBSUBDIR=
-    LDFLAGS="-L$ac_silc_libs $LDFLAGS"
-  else
-    LDFLAGS="-L\$(silc_top_srcdir)/lib $LDFLAGS"
-  fi
-
-  # Check libs to link against
-  f=`$EGREP __SILC_HAVE_PTHREAD $ac_silc_includes/silc.h`
-  if test -n "$f"; then
-    LIBS="$LIBS -lpthread"
-    check_threads=false
-    has_threads=true
-  fi
-  f=`$EGREP __SILC_HAVE_SIM $ac_silc_includes/silc.h`
-  if test -n "$f"; then
-    LIBS="$LIBS -ldl"
-  fi
-
-else
-  # pkg-config check
-  PKG_CHECK_MODULES(SILC, [silc >= 1.1], compile_libs=false, compile_libs=true)
-
-  if test x$compile_libs = xfalse; then
-    LIBSUBDIR=
-    LIBS="$SILC_LIBS $LIBS"
-    CFLAGS="$CFLAGS $SILC_CFLAGS"
-  else
-    LDFLAGS="-L\$(silc_top_srcdir)/lib $LDFLAGS"
-  fi
-fi
-
 
 # SOCKS4 support checking
 #
