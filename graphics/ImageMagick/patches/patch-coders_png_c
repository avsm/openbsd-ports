$OpenBSD: patch-coders_png_c,v 1.1.4.1 2004/12/30 19:31:15 sturm Exp $
--- coders/png.c.orig	2004-12-27 21:04:32.000000000 +0100
+++ coders/png.c	2004-12-27 21:24:19.000000000 +0100
@@ -1125,6 +1125,8 @@ static void PNGErrorHandler(png_struct *
   Image
     *image;
 
+  if (LocaleCompare(message, "Missing PLTE before tRNS") == 0)
+    png_error(ping, message);
   image=(Image *) ping->error_ptr;
 #ifdef PNG_DEBUG
   printf("libpng-%s error: %s\n", PNG_LIBPNG_VER_STRING, message);
@@ -1273,6 +1275,20 @@ static Image *ReadPNGImage(const ImageIn
     png_textp
       text;
 
+#if defined(PNG_UNKNOWN_CHUNKS_SUPPORTED)
+  png_byte unused_chunks[]=
+    {
+     104,  73,  83,  84, '\0',   /* hIST */
+     105,  84,  88, 116, '\0',   /* iTXt */
+     112,  67,  65,  76, '\0',   /* pCAL */
+     115,  67,  65,  76, '\0',   /* sCAL */
+     115,  80,  76,  84, '\0',   /* sPLT */
+     116,  69,  88, 116, '\0',   /* tEXt */
+     116,  73,  77,  69, '\0',   /* tIME */
+     122,  84,  88, 116, '\0',   /* zTXt */
+    };
+#endif
+
   /*
     Open image file.
   */
@@ -2426,6 +2442,13 @@ static Image *ReadPNGImage(const ImageIn
       }
     else
       png_set_read_fn(ping,image,png_get_data);
+
+#if defined(PNG_UNKNOWN_CHUNKS_SUPPORTED)
+    /* Ignore unused chunks */
+    png_set_keep_unknown_chunks(ping, 0, unused_chunks,
+      (int)sizeof(unused_chunks)/5);
+#endif
+
     png_read_info(ping,ping_info);
     image->depth=ping_info->bit_depth;
     if (ping_info->bit_depth < 8)
@@ -3108,7 +3131,7 @@ static Image *ReadPNGImage(const ImageIn
           *value;
 
         length=text[i].text_length;
-        value=(char *) AcquireMemory(length+1);
+        value=(char *) AcquireMemory(length+MaxTextExtent);
         if (value == (char *) NULL)
           {
             ThrowException(&image->exception,ResourceLimitWarning,
@@ -3174,6 +3197,8 @@ static Image *ReadPNGImage(const ImageIn
                 "Cloning image for object buffer failed",image->filename);
             png_get_IHDR(ping,ping_info,&width,&height,&bit_depth,&color_type,
               &interlace_method,&compression_method,&filter_method);
+            if (width > 250000L || height > 250000L)
+              png_error(ping,"PNG Image dimensions are too large.");
             mng_info->ob[object_id]->width=width;
             mng_info->ob[object_id]->height=height;
             mng_info->ob[object_id]->color_type=color_type;
