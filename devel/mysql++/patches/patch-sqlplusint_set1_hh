$OpenBSD: patch-sqlplusint_set1_hh,v 1.1 2004/01/06 11:16:53 wilfried Exp $
--- sqlplusint/set1.hh.orig	2001-05-19 18:44:48.000000000 +0200
+++ sqlplusint/set1.hh	2004-01-04 23:54:00.000000000 +0100
@@ -9,7 +9,7 @@
 #endif
 #include <set>
 #include <vector>
-#include <iostream.h>
+#include <iostream>
 #include "define_short"
 #include "coldata1.hh"
 
@@ -32,37 +32,37 @@ public:
 };
 
 template <class T>
-inline MysqlSetInsert<set<T> > set_insert(set<T> *o) {
-  return MysqlSetInsert<set<T> >(o);
+inline MysqlSetInsert<std::set<T> > set_insert(std::set<T> *o) {
+  return MysqlSetInsert<std::set<T> >(o);
 }
 
 template <class T>
-inline MysqlListInsert<vector<T> > set_insert(vector<T> *o) {
-  return MysqlListInsert<vector<T> >(o);
+inline MysqlListInsert<std::vector<T> > set_insert(std::vector<T> *o) {
+  return MysqlListInsert<std::vector<T> >(o);
 }
 
 template <class Insert>
 void set2container (const char *str, Insert insert);
 
 //: A Special Set for holding mysql sets.
-template <class Container = set<string> >
+template <class Container = std::set<std::string> >
 class Set : public Container {
 public:
   Set(const char* str) {set2container(str,set_insert(this));}           //:
-  Set(const string &str) {set2container(str.c_str(),set_insert(this));} //:
+  Set(const std::string &str) {set2container(str.c_str(),set_insert(this));} //:
   Set(const ColData &str) 
     {set2container(str.c_str(),set_insert(this));}                      //:
   
-  ostream& out_stream(ostream &s) const;
+  std::ostream& out_stream(std::ostream &s) const;
   
-  operator string ();
+  operator std::string ();
 };
 
 //! with_class = Set
 
 //:
 template <class Container>
-inline ostream& operator << (ostream &s, const Set<Container> &d) 
+inline std::ostream& operator << (std::ostream &s, const Set<Container> &d) 
 { 
   return d.out_stream(s); 
 }
