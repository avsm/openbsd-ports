$OpenBSD: patch-sqlplusint_string_util_hh,v 1.1 2004/01/06 11:16:53 wilfried Exp $
--- sqlplusint/string_util.hh.orig	2001-05-19 18:44:49.000000000 +0200
+++ sqlplusint/string_util.hh	2004-01-04 23:25:47.000000000 +0100
@@ -3,28 +3,28 @@
 #include <ctype.h>
 #include <string>
 
-extern void strip (string& s); // Strips blanks at left and right ends
+extern void strip (std::string& s); // Strips blanks at left and right ends
 
-extern void escape_string (string& s); // C++ equivalent of mysql_escape_string
+extern void escape_string (std::string& s); // C++ equivalent of mysql_escape_string
 
-inline void str_to_upr (string& s) { // Changes case of string to upper
+inline void str_to_upr (std::string& s) { // Changes case of string to upper
 	for (unsigned int cnt=0; cnt < s.length(); cnt++) {
 		char c = s[cnt]; s[cnt]=toupper(c);
 	}
 }
 
-inline void str_to_lwr (string& s) { // Changes case of string to lower
+inline void str_to_lwr (std::string& s) { // Changes case of string to lower
 	for (unsigned int cnt=0; cnt < s.length(); cnt++) {
 		char c = s[cnt]; s[cnt]=tolower(c);
 	}
 }
 
-inline void strip_all_blanks (string& s) { // Removes all blanks
+inline void strip_all_blanks (std::string& s) { // Removes all blanks
 	for (unsigned int counter=0;counter < s.size();counter++)
 		if (s[counter] == ' ') { s.erase(counter,1); counter--;}
 }
 
-inline void strip_all_non_num (string& s) { // Removes all non-numerics
+inline void strip_all_non_num (std::string& s) { // Removes all non-numerics
 	for (unsigned int counter=0;counter < s.size();counter++)
 		if (!isdigit(s[counter])) { s.erase(counter,1); counter--;}
 }
