$OpenBSD: patch-lanbrowsing_kio_lan_kio_lan_cpp,v 1.1 2002/11/29 14:18:16 brad Exp $
--- lanbrowsing/kio_lan/kio_lan.cpp.orig	Thu Jan  3 15:34:12 2002
+++ lanbrowsing/kio_lan/kio_lan.cpp	Sun Nov 24 04:26:40 2002
@@ -176,13 +176,14 @@ int LANProtocol::lanReadDataFromServer()
 
    char *currentBuf=receiveBuffer;
    int bytesLeft=receivedBytes;
-   int tmpIP;
    //this should be large enough for a name
-   char tmpName[1024];
+   char tmpName[4*1024];
    //this should be large enough for the hostname
-   char tmpHostname[512];
+   char tmpHostname[4*1024];
    while (bytesLeft>0)
    {
+      int tmpIP=2;
+      tmpName[0]='\0';
       if ((memchr(currentBuf,0,bytesLeft)==0) || (memchr(currentBuf,int('\n'),bytesLeft)==0))
       {
          delete [] receiveBuffer;
@@ -190,17 +191,19 @@ int LANProtocol::lanReadDataFromServer()
          return 0;
       };
       kdDebug(7101)<<"LANProtocol::lanReadDataFromServer: processing "<<currentBuf;
-      sscanf(currentBuf,"%u %s\n",&tmpIP,tmpName);
       //since we check for 0 and \n with memchr() we can be sure
       //at this point that tmpBuf is correctly terminated
       int length=strlen(currentBuf)+1;
+      if (length<(4*1024))
+         sscanf(currentBuf,"%u %s\n",&tmpIP,tmpName);
+
       bytesLeft-=length;
       currentBuf+=length;
-      if ((bytesLeft==0) && (strstr(tmpName,"succeeded")!=0) && ((tmpIP==0) ||(tmpIP==1)))
+      if ((bytesLeft==0) && ((tmpIP==0) ||(tmpIP==1)) && (strstr(tmpName,"succeeded")!=0))
       {
          kdDebug(7101)<<"LANProtocol::lanReadDataFromServer: succeeded"<<endl;
       }
-      else
+      else if (tmpIP!=2)
       {
          kdDebug(7101)<<"LANProtocol::lanReadDataFromServer: listing host: "<<tmpName<<" with ip: "<<tmpIP<<endl;
          UDSAtom atom;
@@ -344,13 +347,14 @@ int LANProtocol::rlanReadDataFromServer(
 
    char *currentBuf=receiveBuffer;
    int bytesLeft=receivedBytes;
-   int tmpIP;
    //this should be large enough for a name
-   char tmpName[1024];
+   char tmpName[4*1024];
    //this should be large enough for the hostname
-   char tmpHostname[512];
+   char tmpHostname[4*1024];
    while (bytesLeft>0)
    {
+      int tmpIP=2;
+      tmpName[0]='\0';
       if ((memchr(currentBuf,0,bytesLeft)==0) || (memchr(currentBuf,int('\n'),bytesLeft)==0))
       {
          delete [] receiveBuffer;
@@ -358,17 +362,19 @@ int LANProtocol::rlanReadDataFromServer(
          return 0;
       };
       kdDebug(7101)<<"RLANProtocol::readDataFromServer: processing "<<currentBuf;
-      sscanf(currentBuf,"%u %s\n",&tmpIP,tmpName);
       //since we check for 0 and \n with memchr() we can be sure
       //at this point that tmpBuf is correctly terminated
       int length=strlen(currentBuf)+1;
+      if (length<(4*1024))
+         sscanf(currentBuf,"%u %s\n",&tmpIP,tmpName);
+
       bytesLeft-=length;
       currentBuf+=length;
-      if ((bytesLeft==0) && (strstr(tmpName,"succeeded")!=0) && ((tmpIP==0) ||(tmpIP==1)))
+      if ((bytesLeft==0) && ((tmpIP==0) ||(tmpIP==1)) && (strstr(tmpName,"succeeded")!=0) )
       {
          kdDebug(7101)<<"RLANProtocol::readDataFromServer: succeeded"<<endl;
       }
-      else
+      else if (tmpIP!=2)
       {
          kdDebug(7101)<<"RLANProtocol::readDataFromServer: listing host: "<<tmpName<<" with ip: "<<tmpIP<<endl;
          UDSAtom atom;
@@ -436,7 +442,7 @@ int LANProtocol::checkHost(const QString
          delete hostInfo;
          return 0;
       }
-      memcpy(&ip, hp->h_addr, hp->h_length);
+      memcpy(&ip, hp->h_addr, sizeof(ip));
 
       for (int i=0; i<KIOLAN_MAX; i++)
       {
