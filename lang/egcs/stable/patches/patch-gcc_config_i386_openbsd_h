$OpenBSD: patch-gcc_config_i386_openbsd_h,v 1.5 2002/08/30 08:33:14 espie Exp $
--- gcc/config/i386/openbsd.h.orig	Wed Oct 17 03:39:47 2001
+++ gcc/config/i386/openbsd.h	Thu Aug 29 20:40:53 2002
@@ -95,26 +95,32 @@ Boston, MA 02111-1307, USA.  */
 
 #undef ASM_PREFERRED_EH_DATA_FORMAT
 
-/* Assembler format: alignment output.  */
-
-/* A C statement to output to the stdio stream FILE an assembler
-   command to advance the location counter to a multiple of 1<<LOG
-   bytes if it is within MAX_SKIP bytes.
-
-   This will be used to align code labels according to Intel 
-   recommendations, in prevision of binutils upgrade.  */
-#ifdef HAVE_GAS_MAX_SKIP_P2ALIGN
-#define ASM_OUTPUT_MAX_SKIP_ALIGN(FILE,LOG,MAX_SKIP)			\
-  do {									\
-    if ((LOG) != 0) {							\
-      if ((MAX_SKIP) == 0) fprintf ((FILE), "\t.p2align %d\n", (LOG));	\
-      else fprintf ((FILE), "\t.p2align %d,,%d\n", (LOG), (MAX_SKIP));	\
-    }									\
-  } while (0)
-#endif
 
 /* Note that we pick up ASM_OUTPUT_MI_THUNK from unix.h.  */
 
 #undef ASM_COMMENT_START
 #define ASM_COMMENT_START ";#"
 
+/* OpenBSD gas currently does not support quad, so do not use it.  */
+#undef ASM_QUAD
+
+#undef FINALIZE_TRAMPOLINE
+#define FINALIZE_TRAMPOLINE(TRAMP) \
+  emit_library_call(gen_rtx_SYMBOL_REF (Pmode, "__enable_execute_stack"), \
+		    0, VOIDmode, 1, memory_address (SImode, (TRAMP)), Pmode)
+
+#define TRANSFER_FROM_TRAMPOLINE					\
+extern void __enable_execute_stack (void *);				\
+void									\
+__enable_execute_stack (addr)						\
+     void *addr;							\
+{									\
+  long size = getpagesize ();						\
+  long mask = ~(size-1);						\
+  char *page = (char *) (((long) addr) & mask); 			\
+  char *end  = (char *) ((((long) (addr + TRAMPOLINE_SIZE)) & mask) + size); \
+								      \
+  /* 7 is PROT_READ | PROT_WRITE | PROT_EXEC */ 			\
+  if (mprotect (page, end - page, 7) < 0)				\
+    perror ("mprotect of trampoline code");				\
+}
