$OpenBSD: patch-WebKit_gtk_webkit_webkitwebsettings_cpp,v 1.1 2011/04/15 23:03:03 dhill Exp $
Provide a knob to enable/disable DNS prefetching.
DNS prefetching is enabled by default.
http://trac.webkit.org/changeset/80856
--- WebKit/gtk/webkit/webkitwebsettings.cpp.orig	Fri Sep 10 08:20:33 2010
+++ WebKit/gtk/webkit/webkitwebsettings.cpp	Wed Mar 16 09:46:17 2011
@@ -108,6 +108,7 @@ struct _WebKitWebSettingsPrivate {
     gboolean enable_page_cache;
     gboolean auto_resize_window;
     gboolean enable_java_applet;
+    gboolean enable_dns_prefetching;
 };
 
 #define WEBKIT_WEB_SETTINGS_GET_PRIVATE(obj) (G_TYPE_INSTANCE_GET_PRIVATE((obj), WEBKIT_TYPE_WEB_SETTINGS, WebKitWebSettingsPrivate))
@@ -157,7 +158,8 @@ enum {
     PROP_ENABLE_SITE_SPECIFIC_QUIRKS,
     PROP_ENABLE_PAGE_CACHE,
     PROP_AUTO_RESIZE_WINDOW,
-    PROP_ENABLE_JAVA_APPLET
+    PROP_ENABLE_JAVA_APPLET,
+    PROP_ENABLE_DNS_PREFETCHING
 };
 
 // Create a default user agent string
@@ -858,6 +860,24 @@ static void webkit_web_settings_class_init(WebKitWebSe
                                                          flags));
 
     g_type_class_add_private(klass, sizeof(WebKitWebSettingsPrivate));
+
+    /**
+     * WebKitWebSettings:enable-dns-prefetching
+     *
+     * Whether webkit prefetches domain names.  This is a separate knob from
+     * private browsing.
+     * Whether private browsing should set this or not is up for debate, for
+     * now it doesn't.
+     *
+     * Backport from 1.3.13.
+     */
+     g_object_class_install_property(gobject_class,
+				     PROP_ENABLE_DNS_PREFETCHING,
+				     g_param_spec_boolean("enable-dns-prefetching",
+							  _("WebKit prefetches domain names"),
+							  _("Whether WebKit prefetches domain names"),
+							  TRUE,
+							  flags));
 }
 
 static void webkit_web_settings_init(WebKitWebSettings* web_settings)
@@ -1077,6 +1097,9 @@ static void webkit_web_settings_set_property(GObject* 
     case PROP_ENABLE_JAVA_APPLET:
         priv->enable_java_applet = g_value_get_boolean(value);
         break;
+    case PROP_ENABLE_DNS_PREFETCHING:
+	priv->enable_dns_prefetching = g_value_get_boolean(value);
+	break;
     default:
         G_OBJECT_WARN_INVALID_PROPERTY_ID(object, prop_id, pspec);
         break;
@@ -1218,6 +1241,9 @@ static void webkit_web_settings_get_property(GObject* 
     case PROP_ENABLE_JAVA_APPLET:
         g_value_set_boolean(value, priv->enable_java_applet);
         break;
+    case PROP_ENABLE_DNS_PREFETCHING:
+	g_value_set_boolean(value, priv->enable_dns_prefetching);
+	break;
     default:
         G_OBJECT_WARN_INVALID_PROPERTY_ID(object, prop_id, pspec);
         break;
@@ -1291,6 +1317,7 @@ WebKitWebSettings* webkit_web_settings_copy(WebKitWebS
                  "enable-page-cache", priv->enable_page_cache,
                  "auto-resize-window", priv->auto_resize_window,
                  "enable-java-applet", priv->enable_java_applet,
+		 "enable-dns-prefetching", priv->enable_dns_prefetching,
                  NULL));
 
     return copy;
