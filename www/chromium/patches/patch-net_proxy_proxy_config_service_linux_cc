$OpenBSD: patch-net_proxy_proxy_config_service_linux_cc,v 1.4 2011/09/19 08:55:26 robert Exp $
--- net/proxy/proxy_config_service_linux.cc.orig	Tue Aug 23 10:28:29 2011
+++ net/proxy/proxy_config_service_linux.cc	Wed Aug 24 10:54:23 2011
@@ -18,7 +18,13 @@
 #include <limits.h>
 #include <stdio.h>
 #include <stdlib.h>
+#if defined(OS_OPENBSD)
+#include <sys/types.h>
+#include <sys/event.h>
+#include <sys/time.h>
+#else
 #include <sys/inotify.h>
+#endif
 #include <unistd.h>
 
 #include <map>
@@ -972,7 +978,11 @@ class SettingGetterImplKDE : public ProxyConfigService
     // This has to be called on the UI thread (http://crbug.com/69057).
     base::ThreadRestrictions::ScopedAllowIO allow_io;
     DCHECK(inotify_fd_ < 0);
+#if defined(OS_OPENBSD)
+    inotify_fd_ = kqueue();
+#else
     inotify_fd_ = inotify_init();
+#endif
     if (inotify_fd_ < 0) {
       PLOG(ERROR) << "inotify_init failed";
       return false;
@@ -1003,6 +1013,17 @@ class SettingGetterImplKDE : public ProxyConfigService
   bool SetUpNotifications(ProxyConfigServiceLinux::Delegate* delegate) {
     DCHECK(inotify_fd_ >= 0);
     DCHECK(MessageLoop::current() == file_loop_);
+#if defined(OS_OPENBSD)
+    // catch the deletion event of kioslaverc
+    int kioslavercfd = open(kde_config_dir_.Append("kioslaverc").value().c_str(), O_RDONLY);
+    if (kioslavercfd == -1)
+      return false;
+    struct kevent ke;
+    EV_SET(&ke, kioslavercfd, EVFILT_VNODE, EV_ADD | EV_ONESHOT, NOTE_DELETE | NOTE_RENAME, 0, NULL);
+
+    if (kevent(inotify_fd_, &ke, 1, NULL, 0, NULL) == -1)
+      return false;
+#else
     // We can't just watch the kioslaverc file directly, since KDE will write
     // a new copy of it and then rename it whenever settings are changed and
     // inotify watches inodes (so we'll be watching the old deleted file after
@@ -1018,6 +1039,7 @@ class SettingGetterImplKDE : public ProxyConfigService
     // Simulate a change to avoid possibly losing updates before this point.
     OnChangeNotification();
     return true;
+#endif
   }
 
   virtual MessageLoop* GetNotificationLoop() OVERRIDE {
@@ -1299,6 +1321,18 @@ class SettingGetterImplKDE : public ProxyConfigService
   void OnChangeNotification() {
     DCHECK(inotify_fd_ >= 0);
     DCHECK(MessageLoop::current() == file_loop_);
+#if defined(OS_OPENBSD)
+    bool kioslaverc_touched = true;
+    struct kevent ke;
+    if (kevent(inotify_fd_, NULL, 0, &ke, 1, NULL) == -1) {
+      LOG(ERROR) << "kevent() failure: no loner watching kioslaverc";
+      inotify_watcher_.StopWatchingFileDescriptor();
+      close(inotify_fd_);
+      inotify_fd_ = -1;
+      kioslaverc_touched = false;
+    }
+    close(ke.ident);
+#else
     char event_buf[(sizeof(inotify_event) + NAME_MAX + 1) * 4];
     bool kioslaverc_touched = false;
     ssize_t r;
@@ -1337,6 +1371,7 @@ class SettingGetterImplKDE : public ProxyConfigService
         inotify_fd_ = -1;
       }
     }
+#endif
     if (kioslaverc_touched) {
       // We don't use Reset() because the timer may not yet be running.
       // (In that case Stop() is a no-op.)
