$OpenBSD: patch-algparam_h,v 1.2 2011/06/24 07:55:17 dcoppa Exp $
--- algparam.h.orig	Wed Jun 18 13:46:19 2008
+++ algparam.h	Fri Jun 20 15:05:20 2008
@@ -17,9 +17,9 @@ class ConstByteArrayParameter (public)
 	{
 		Assign((const byte *)data, data ? strlen(data) : 0, deepCopy);
 	}
-	ConstByteArrayParameter(const byte *data, size_t size, bool deepCopy = false)
+	ConstByteArrayParameter(const byte *data, size_t sz, bool deepCopy = false)
 	{
-		Assign(data, size, deepCopy);
+		Assign(data, sz, deepCopy);
 	}
 	template <class T> ConstByteArrayParameter(const T &string, bool deepCopy = false)
 	{
@@ -27,14 +27,14 @@ class ConstByteArrayParameter (public)
 		Assign((const byte *)string.data(), string.size(), deepCopy);
 	}
 
-	void Assign(const byte *data, size_t size, bool deepCopy)
+	void Assign(const byte *data, size_t sz, bool deepCopy)
 	{
 		if (deepCopy)
-			m_block.Assign(data, size);
+			m_block.Assign(data, sz);
 		else
 		{
 			m_data = data;
-			m_size = size;
+			m_size = sz;
 		}
 		m_deepCopy = deepCopy;
 	}
@@ -53,8 +53,8 @@ class ConstByteArrayParameter (public)
 class ByteArrayParameter
 {
 public:
-	ByteArrayParameter(byte *data = NULL, unsigned int size = 0)
-		: m_data(data), m_size(size) {}
+	ByteArrayParameter(byte *data = NULL, unsigned int sz = 0)
+		: m_data(data), m_size(sz) {}
 	ByteArrayParameter(SecByteBlock &block)
 		: m_data(block.begin()), m_size(block.size()) {}
 
