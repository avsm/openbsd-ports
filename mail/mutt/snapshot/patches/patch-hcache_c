$OpenBSD: patch-hcache_c,v 1.1 2009/07/29 20:26:45 sthen Exp $

uidvalidity is an IMAP-specific uint32; ticket #3296

--- hcache.c.orig	Mon Jun  1 17:29:32 2009
+++ hcache.c	Wed Jul 29 20:48:32 2009
@@ -85,7 +85,7 @@ static void mutt_hcache_dbt_empty_init(DBT * dbt);
 typedef union
 {
   struct timeval timeval;
-  unsigned long uid_validity;
+  unsigned int uidvalidity;
 } validate;
 
 static void *
@@ -588,7 +588,7 @@ mutt_hcache_per_folder(const char *path, const char *f
  * db_store */
 static void *
 mutt_hcache_dump(header_cache_t *h, HEADER * header, int *off,
-		 unsigned long uid_validity)
+		 unsigned int uidvalidity)
 {
   unsigned char *d = NULL;
   HEADER nh;
@@ -597,8 +597,8 @@ mutt_hcache_dump(header_cache_t *h, HEADER * header, i
   *off = 0;
   d = lazy_malloc(sizeof (validate));
 
-  if (uid_validity)
-    memcpy(d, &uid_validity, sizeof (unsigned long));
+  if (uidvalidity)
+    memcpy(d, &uidvalidity, sizeof (uidvalidity));
   else
   {
     struct timeval now;
@@ -757,7 +757,7 @@ mutt_hcache_fetch_raw (header_cache_t *h, const char *
 
 int
 mutt_hcache_store(header_cache_t *h, const char *filename, HEADER * header,
-		  unsigned long uid_validity,
+		  unsigned int uidvalidity,
 		  size_t(*keylen) (const char *fn))
 {
   char* data;
@@ -767,7 +767,7 @@ mutt_hcache_store(header_cache_t *h, const char *filen
   if (!h)
     return -1;
   
-  data = mutt_hcache_dump(h, header, &dlen, uid_validity);
+  data = mutt_hcache_dump(h, header, &dlen, uidvalidity);
   ret = mutt_hcache_store_raw (h, filename, data, dlen, keylen);
   
   FREE(&data);
