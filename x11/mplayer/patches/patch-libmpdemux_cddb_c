$OpenBSD: patch-libmpdemux_cddb_c,v 1.1 2002/08/18 13:17:51 espie Exp $
--- libmpdemux/cddb.c.orig	Wed Jul 10 10:51:11 2002
+++ libmpdemux/cddb.c	Sun Aug 18 14:58:04 2002
@@ -28,14 +28,20 @@
 #include <sys/types.h>
 #include <sys/stat.h>
 
-#if defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__NetBSD__) || defined(__bsdi__)
+#if defined(__FreeBSD__) || defined(__NetBSD__) || defined(__bsdi__)
 #define SYS_BSD 1
 #endif
+#if defined(__OpenBSD__)
+#define SYS_OBSD 1
+#endif
 
 #if defined(__linux__)
 #include <linux/cdrom.h>
 #elif defined(SYS_BSD)
 #include <sys/cdio.h>
+#elif defined(SYS_OBSD)
+#include <util.h>
+#include <sys/cdio.h>
 #endif
 
 #include "cdd.h"
@@ -111,8 +117,50 @@ read_toc(void) {
 	close(drive);
 	return tochdr.ending_track;
 }
-#endif
 
+#elif defined(SYS_OBSD)
+int 
+read_toc(void) {
+	int drive;
+	struct ioc_toc_header tochdr;
+	struct ioc_read_toc_entry tocentry;
+	int i;
+	char *drivename;
+	char *realdev;
+	struct cd_toc_entry toc_buffer;
+
+	drivename = getenv("CDROM");
+	if (!drivename)
+		drivename = "cd0";
+	drive = opendev(drivename, O_RDONLY, OPENDEV_PART, &realdev);
+	if (!drive)
+		return -1;
+
+	ioctl(drive, CDIOREADTOCHEADER, &tochdr);
+	for (i = tochdr.starting_track; i <= tochdr.ending_track; i++) {
+		tocentry.starting_track = i;
+		tocentry.address_format = CD_MSF_FORMAT;
+		tocentry.data = &toc_buffer;
+		tocentry.data_len = sizeof(toc_buffer);
+		ioctl(drive, CDIOREADTOCENTRYS, &tocentry);
+		cdtoc[i-1].min = toc_buffer.addr.msf.minute;
+		cdtoc[i-1].sec = toc_buffer.addr.msf.second;
+		cdtoc[i-1].frame = toc_buffer.addr.msf.frame;
+		cdtoc[i-1].frame += cdtoc[i-1].min*60*75;
+		cdtoc[i-1].frame += cdtoc[i-1].sec*75;
+	}
+	tocentry.starting_track = 0xAA;
+	tocentry.address_format = CD_MSF_FORMAT;
+	ioctl(drive, CDIOREADTOCENTRYS, &tocentry);
+	cdtoc[tochdr.ending_track].min = toc_buffer.addr.msf.minute;
+	cdtoc[tochdr.ending_track].sec = toc_buffer.addr.msf.second;
+	cdtoc[tochdr.ending_track].frame = toc_buffer.addr.msf.frame;
+	cdtoc[tochdr.ending_track].frame += cdtoc[tochdr.ending_track].min*60*75;
+	cdtoc[tochdr.ending_track].frame += cdtoc[tochdr.ending_track].sec*75;
+	close(drive);
+	return tochdr.ending_track;
+}
+#endif
 unsigned int 
 cddb_sum(int n) {
 	unsigned int ret;
