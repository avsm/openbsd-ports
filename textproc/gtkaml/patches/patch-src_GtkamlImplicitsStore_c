$OpenBSD: patch-src_GtkamlImplicitsStore_c,v 1.11 2009/11/14 11:41:04 ajacoutot Exp $

Fix a gint-gsize-confusion to get rid of a bus error on sparc64.

--- src/GtkamlImplicitsStore.c.orig	Tue Oct 27 09:07:16 2009
+++ src/GtkamlImplicitsStore.c	Sat Nov 14 12:37:38 2009
@@ -133,7 +133,7 @@ enum  {
 	GTKAML_KEY_FILE_WRAPPER_DUMMY_PROPERTY
 };
 gboolean gtkaml_key_file_wrapper_has_key (GtkamlKeyFileWrapper* self, const char* group, const char* key);
-char** gtkaml_key_file_wrapper_get_string_list (GtkamlKeyFileWrapper* self, const char* group, const char* key, int* result_length1);
+char** gtkaml_key_file_wrapper_get_string_list (GtkamlKeyFileWrapper* self, const char* group, const char* key, gsize* result_length1);
 GtkamlKeyFileWrapper* gtkaml_key_file_wrapper_new (void);
 GtkamlKeyFileWrapper* gtkaml_key_file_wrapper_construct (GType object_type);
 static GObject * gtkaml_key_file_wrapper_constructor (GType type, guint n_construct_properties, GObjectConstructParam * construct_properties);
@@ -241,7 +241,7 @@ gboolean gtkaml_key_file_wrapper_has_key (GtkamlKeyFil
 }
 
 
-char** gtkaml_key_file_wrapper_get_string_list (GtkamlKeyFileWrapper* self, const char* group, const char* key, int* result_length1) {
+char** gtkaml_key_file_wrapper_get_string_list (GtkamlKeyFileWrapper* self, const char* group, const char* key, gsize* result_length1) {
 	char** result;
 	GError * _inner_error_;
 	g_return_val_if_fail (self != NULL, NULL);
@@ -452,14 +452,14 @@ ValaList* gtkaml_implicits_store_get_adds (GtkamlImpli
 			if (gtkaml_key_file_wrapper_has_key (kfw, class_name, "adds")) {
 				char** _tmp1_;
 				gint kf_adds_size;
-				gint kf_adds_length1;
-				gint _tmp0_;
+				gsize kf_adds_length1;
+				gsize _tmp0_;
 				char** kf_adds;
 				kf_adds = (_tmp1_ = gtkaml_key_file_wrapper_get_string_list (kfw, class_name, "adds", &_tmp0_), kf_adds_length1 = _tmp0_, kf_adds_size = kf_adds_length1, _tmp1_);
 				{
 					char** add_collection;
 					int add_collection_length1;
-					int add_it;
+					gsize add_it;
 					add_collection = kf_adds;
 					add_collection_length1 = kf_adds_length1;
 					for (add_it = 0; add_it < kf_adds_length1; add_it = add_it + 1) {
@@ -505,14 +505,14 @@ ValaList* gtkaml_implicits_store_get_method_parameters
 			if (gtkaml_key_file_wrapper_has_key (kfw, class_name, method_name)) {
 				char** _tmp3_;
 				gint kf_parameters_size;
-				gint kf_parameters_length1;
-				gint _tmp2_;
+				gsize kf_parameters_length1;
+				gsize _tmp2_;
 				char** kf_parameters;
 				kf_parameters = (_tmp3_ = gtkaml_key_file_wrapper_get_string_list (kfw, class_name, method_name, &_tmp2_), kf_parameters_length1 = _tmp2_, kf_parameters_size = kf_parameters_length1, _tmp3_);
 				{
 					char** parameter_collection;
 					int parameter_collection_length1;
-					int parameter_it;
+					gsize parameter_it;
 					parameter_collection = kf_parameters;
 					parameter_collection_length1 = kf_parameters_length1;
 					for (parameter_it = 0; parameter_it < kf_parameters_length1; parameter_it = parameter_it + 1) {
