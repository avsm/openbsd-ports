$OpenBSD: patch-daemon_remote_c,v 1.8 2009/09/06 15:03:18 naddy Exp $
--- daemon/remote.c.orig	Tue Aug 25 01:43:02 2009
+++ daemon/remote.c	Thu Sep  3 23:13:47 2009
@@ -826,10 +826,10 @@ tr_strltime( char * buf, int seconds, size_t buflen )
     minutes = ( seconds % 3600 ) / 60;
     seconds = ( seconds % 3600 ) % 60;
 
-    tr_snprintf( d, sizeof( d ), "%'d day%s", days, days==1?"":"s" );
-    tr_snprintf( h, sizeof( h ), "%'d hour%s", hours, hours==1?"":"s" );
-    tr_snprintf( m, sizeof( m ), "%'d minute%s", minutes, minutes==1?"":"s" );
-    tr_snprintf( s, sizeof( s ), "%'d second%s", seconds, seconds==1?"":"s" );
+    tr_snprintf( d, sizeof( d ), "%d day%s", days, days==1?"":"s" );
+    tr_snprintf( h, sizeof( h ), "%d hour%s", hours, hours==1?"":"s" );
+    tr_snprintf( m, sizeof( m ), "%d minute%s", minutes, minutes==1?"":"s" );
+    tr_snprintf( s, sizeof( s ), "%d second%s", seconds, seconds==1?"":"s" );
 
     if( days )
     {
@@ -891,24 +891,24 @@ strlsize( char *  buf, int64_t size, size_t  buflen )
     if( !size )
         tr_strlcpy( buf, "None", buflen );
     else if( size < (int64_t)KILOBYTE_FACTOR )
-        tr_snprintf( buf, buflen, "%'" PRId64 " bytes", (int64_t)size );
+        tr_snprintf( buf, buflen, "%" PRId64 " bytes", (int64_t)size );
     else
     {
         double displayed_size;
         if( size < (int64_t)MEGABYTE_FACTOR )
         {
             displayed_size = (double) size / KILOBYTE_FACTOR;
-            tr_snprintf( buf, buflen, "%'.1f KB", displayed_size );
+            tr_snprintf( buf, buflen, "%.1f KB", displayed_size );
         }
         else if( size < (int64_t)GIGABYTE_FACTOR )
         {
             displayed_size = (double) size / MEGABYTE_FACTOR;
-            tr_snprintf( buf, buflen, "%'.1f MB", displayed_size );
+            tr_snprintf( buf, buflen, "%.1f MB", displayed_size );
         }
         else
         {
             displayed_size = (double) size / GIGABYTE_FACTOR;
-            tr_snprintf( buf, buflen, "%'.1f GB", displayed_size );
+            tr_snprintf( buf, buflen, "%.1f GB", displayed_size );
         }
     }
     return buf;
