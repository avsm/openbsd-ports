$OpenBSD: patch-sqlplusint_vallist1_hh,v 1.1 2004/01/06 11:16:53 wilfried Exp $
--- sqlplusint/vallist1.hh.orig	2001-05-19 18:44:48.000000000 +0200
+++ sqlplusint/vallist1.hh	2004-01-04 23:25:47.000000000 +0100
@@ -8,10 +8,10 @@
 template <class Seq, class Manip>
 struct value_list_b {
   const Seq          *list;
-  const vector<bool> fields;
+  const std::vector<bool> fields;
   const char         *delem;
   Manip              manip;
-  value_list_b(const Seq &s, const vector<bool> &f, const char *d, Manip m) 
+  value_list_b(const Seq &s, const std::vector<bool> &f, const char *d, Manip m)
     : list(&s), fields(f), delem(d), manip(m) {}
 };
 
@@ -19,11 +19,11 @@ template <class Seq1, class Seq2, class 
 struct equal_list_b {
   const Seq1         *list1;
   const Seq2         *list2;
-  const vector<bool> fields;
+  const std::vector<bool> fields;
   const char         *delem;
   const char         *equl;
   Manip              manip;
-  equal_list_b(const Seq1 &s1, const Seq2 &s2, const vector<bool> &f,
+  equal_list_b(const Seq1 &s1, const Seq2 &s2, const std::vector<bool> &f,
 	       const char *d, const char *e, Manip m) 
     : list1(&s1), list2(&s2), fields(f), delem(d), equl(e), manip(m) {}
 };
@@ -52,7 +52,7 @@ struct equal_list_ba {
 //
 
 template <class Seq, class Manip>
-ostream& operator << (ostream &o, const value_list_b<Seq, Manip> &cl) {
+std::ostream& operator << (std::ostream &o, const value_list_b<Seq, Manip> &cl) {
   typename Seq::const_iterator i =  cl.list->begin();
   register int k = 0;
   for (;;) {
@@ -67,7 +67,7 @@ ostream& operator << (ostream &o, const 
 }
 
 template <class Seq1, class Seq2, class Manip>
-ostream& operator << (ostream &o, const equal_list_b<Seq1, Seq2, Manip> &el) {
+std::ostream& operator << (std::ostream &o, const equal_list_b<Seq1, Seq2, Manip> &el) {
   typename Seq1::const_iterator i = el.list1->begin();
   typename Seq2::const_iterator j = el.list2->begin();
   register int k = 0;
@@ -84,7 +84,7 @@ ostream& operator << (ostream &o, const 
 }
 
 template <class Seq, class Manip>
-ostream& operator << (ostream &o, const value_list_ba<Seq, Manip> &cl) {
+std::ostream& operator << (std::ostream &o, const value_list_ba<Seq, Manip> &cl) {
   typename Seq::const_iterator i =  cl.list->begin();
   for (;;) {
     o << cl.manip << *i;
@@ -95,7 +95,7 @@ ostream& operator << (ostream &o, const 
 }
 
 template <class Seq1, class Seq2, class Manip>
-ostream& operator << (ostream &o, const equal_list_ba<Seq1, Seq2, Manip> &el) {
+std::ostream& operator << (std::ostream &o, const equal_list_ba<Seq1, Seq2, Manip> &el) {
   typename Seq1::const_iterator i = el.list1->begin();
   typename Seq2::const_iterator j = el.list2->begin();
   for (;;) {
@@ -123,16 +123,16 @@ public:
 // create vector
 //
 
-void create_vector(int size, vector<bool>& v, bool t0, 
+void create_vector(int size, std::vector<bool>& v, bool t0,
 		   bool t1=false, bool t2=false, bool t3=false, bool t4=false,
 		   bool t5=false, bool t6=false, bool t7=false, bool t8=false,
 		   bool t9=false, bool ta=false, bool tb=false, bool tc=false);
 
 template <class Container>
-void create_vector(const Container&c, vector<bool>&v, string s0, string s1, 
-		   string s2, string s3, string s4, string s5, string s6,
-		   string s7, string s8, string s9, string sa, string sb,
-		   string sc);
+void create_vector(const Container&c, std::vector<bool>&v, std::string s0, std::string s1,
+		   std::string s2, std::string s3, std::string s4, std::string s5, std::string s6,
+		   std::string s7, std::string s8, std::string s9, std::string sa, std::string sb,
+		   std::string sc);
 
 //
 // value list
@@ -155,7 +155,7 @@ value_list(const Seq &s, const char *d, 
 template <class Seq, class Manip>
 inline
 value_list_b<Seq,Manip>
-value_list(const Seq &s, const char *d, Manip m, const vector<bool> &vb)
+value_list(const Seq &s, const char *d, Manip m, const std::vector<bool> &vb)
 {
   return value_list_b<Seq, Manip>(s, vb, d, m);
 }
@@ -167,7 +167,7 @@ value_list(const Seq &s, const char *d, 
 	   bool t5=false, bool t6=false, bool t7=false, bool t8=false,
 	   bool t9=false, bool ta=false, bool tb=false, bool tc=false)
 {
-  vector<bool> vb;
+  std::vector<bool> vb;
   create_vector(s.size(), vb, t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,ta,tb,tc);
   return value_list_b<Seq, Manip>(s, vb, d, m);
 }
@@ -179,7 +179,7 @@ value_list(const Seq &s, const char *d, 
 	   bool t5=false, bool t6=false, bool t7=false, bool t8=false,
 	   bool t9=false, bool ta=false, bool tb=false, bool tc=false)
 {
-  vector<bool> vb;
+  std::vector<bool> vb;
   create_vector(s.size(), vb, t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,ta,tb,tc);
   return value_list_b<Seq, do_nothing_type0> (s, vb, d, do_nothing);
 }
@@ -191,7 +191,7 @@ value_list(const Seq &s, bool t0, 
 	   bool t5=false, bool t6=false, bool t7=false, bool t8=false,
 	   bool t9=false, bool ta=false, bool tb=false, bool tc=false)
 {
-  vector<bool> vb;
+  std::vector<bool> vb;
   create_vector(s.size(), vb, t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,ta,tb,tc);
   return value_list_b<Seq, do_nothing_type0> (s, vb, ",",do_nothing);
 }
@@ -220,7 +220,7 @@ template <class Seq1, class Seq2, class 
 inline
 equal_list_b<Seq1, Seq2, Manip>
 equal_list(const Seq1 &s1, const Seq2 &s2, const char *d, const char *e, 
-	   Manip m, const vector<bool> &vb)
+	   Manip m, const std::vector<bool> &vb)
 {
   return equal_list_b<Seq1,Seq2,Manip>(s1, s2, vb, d, e, m);
 }
@@ -234,7 +234,7 @@ equal_list(const Seq1 &s1, const Seq2 &s
 	   bool t5=false, bool t6=false, bool t7=false, bool t8=false,
 	   bool t9=false, bool ta=false, bool tb=false, bool tc=false)
 {
-  vector<bool> vb;
+  std::vector<bool> vb;
   create_vector(s1.size(), vb, t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,ta,tb,tc);
   return equal_list_b<Seq1,Seq2,Manip>(s1, s2, vb, d, e, m);
 }
@@ -248,7 +248,7 @@ equal_list(const Seq1 &s1, const Seq2 &s
 	   bool t5=false, bool t6=false, bool t7=false, bool t8=false,
 	   bool t9=false, bool ta=false, bool tb=false, bool tc=false)
 {
-  vector<bool> vb;
+  std::vector<bool> vb;
   create_vector(s1.size(), vb, t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,ta,tb,tc);
   return equal_list_b<Seq1,Seq2,do_nothing_type0>
     (s1, s2, vb, d, e, do_nothing);
@@ -262,7 +262,7 @@ equal_list(const Seq1 &s1, const Seq2 &s
 	   bool t5=false, bool t6=false, bool t7=false, bool t8=false,
 	   bool t9=false, bool ta=false, bool tb=false, bool tc=false)
 {
-  vector<bool> vb;
+  std::vector<bool> vb;
   create_vector(s1.size(), vb, t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,ta,tb,tc);
   return equal_list_b<Seq1,Seq2,do_nothing_type0> 
     (s1, s2, vb, d, " = ", do_nothing);
@@ -276,7 +276,7 @@ equal_list(const Seq1 &s1, const Seq2 &s
 	   bool t5=false, bool t6=false, bool t7=false, bool t8=false,
 	   bool t9=false, bool ta=false, bool tb=false, bool tc=false)
 {
-  vector<bool> vb;
+  std::vector<bool> vb;
   create_vector(s1.size(), vb, t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,ta,tb,tc);
   return equal_list_b<Seq1,Seq2,do_nothing_type0> 
     (s1, s2, vb,"," ," = " ,do_nothing);
