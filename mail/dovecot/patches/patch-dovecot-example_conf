$OpenBSD: patch-dovecot-example_conf,v 1.36 2007/04/11 20:28:15 jakob Exp $
--- dovecot-example.conf.orig	Fri Mar 30 13:36:18 2007
+++ dovecot-example.conf	Wed Apr 11 22:10:52 2007
@@ -10,13 +10,12 @@
 # value inside quotes, eg.: key = "# char and trailing whitespace  "
 
 # Default values are shown for each setting, it's not required to uncomment
-# any of the lines. Exception to this are paths, they're just examples with
-# the real defaults being based on configure options. The paths listed here
-# are for configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var
-# --with-ssldir=/etc/ssl
+# any of the lines.
 
+# *** NOTE *** Some values HAVE been changed for OpenBSD use.
+
 # Base directory where to store runtime data.
-#base_dir = /var/run/dovecot/
+base_dir = /var/dovecot/
 
 # Protocols we want to be serving: imap imaps pop3 pop3s
 # If you only want to use dovecot-auth, you can set this to "none".
@@ -45,7 +44,7 @@
 # SSL/TLS is used (LOGINDISABLED capability). Note that if the remote IP
 # matches the local IP (ie. you're connecting from the same computer), the
 # connection is considered secure and plaintext authentication is allowed.
-#disable_plaintext_auth = yes
+disable_plaintext_auth = yes
 
 # Should all IMAP and POP3 processes be killed when Dovecot master process
 # shuts down. Setting this to "no" means that Dovecot can be upgraded without
@@ -91,7 +90,7 @@
 # dropping root privileges, so keep the key file unreadable by anyone but
 # root. Included doc/mkcert.sh can be used to easily generate self-signed
 # certificate, just make sure to update the domains in dovecot-openssl.cnf
-#ssl_cert_file = /etc/ssl/certs/dovecot.pem
+ssl_cert_file = /etc/ssl/dovecotcert.pem
 #ssl_key_file = /etc/ssl/private/dovecot.pem
 
 # If key file is password protected, give the password here. Alternatively
@@ -128,7 +127,7 @@
 # which login needs to be able to connect to. The sockets are created when
 # running as root, so you don't have to worry about permissions. Note that
 # everything in this directory is deleted when Dovecot is started.
-#login_dir = /var/run/dovecot/login
+login_dir = /var/dovecot/login
 
 # chroot login process to the login_dir. Only reason not to do this is if you
 # wish to run the whole Dovecot without roots. <doc/wiki/Rootless.txt>
@@ -138,7 +137,7 @@
 # and don't use it anywhere else. The user must also belong to a group where
 # only it has access, it's used to control access for authentication process.
 # Note that this user is NOT used to access mails. <doc/wiki/UserIds.txt>
-#login_user = dovecot
+login_user = _dovecot
 
 # Set max. process size in megabytes. If you don't use
 # login_process_per_connection you might need to grow this.
@@ -285,7 +284,7 @@
 
 # Don't write() to mmaped files. This is required for some operating systems
 # which use separate caches for them, such as OpenBSD.
-#mmap_no_write = no
+mmap_no_write = yes
 
 # Rely on O_EXCL to work when creating dotlock files. The default is to use
 # hard linking. O_EXCL makes the dotlocking faster, but it doesn't always
@@ -443,7 +442,7 @@
 # locking methods as well. Some operating systems don't allow using some of
 # them simultaneously.
 #mbox_read_locks = fcntl
-#mbox_write_locks = dotlock fcntl
+mbox_write_locks = fcntl
 
 # Maximum time in seconds to wait for lock (all of them) before aborting.
 #mbox_lock_timeout = 300
@@ -498,19 +497,19 @@
 
 protocol imap {
   # Login executable location.
-  #login_executable = /usr/libexec/dovecot/imap-login
+  #login_executable = _PREFIX_/libexec/dovecot/imap-login
 
   # IMAP executable location. Changing this allows you to execute other
   # binaries before the imap process is executed.
   #
   # This would write rawlogs into ~/dovecot.rawlog/ directory:
-  #   mail_executable = /usr/libexec/dovecot/rawlog /usr/libexec/dovecot/imap
+  #   mail_executable = _PREFIX_/libexec/dovecot/rawlog _PREFIX_/libexec/dovecot/imap
   #
   # This would attach gdb into the imap process and write backtraces into
   # /tmp/gdbhelper.* files:
-  #   mail_executable = /usr/libexec/dovecot/gdbhelper /usr/libexec/dovecot/imap
+  #   mail_executable = _PREFIX_/libexec/dovecot/gdbhelper _PREFIX_/libexec/dovecot/imap
   #
-  #mail_executable = /usr/libexec/dovecot/imap
+  #mail_executable = _PREFIX_/libexec/dovecot/imap
 
   # Maximum IMAP command line length in bytes. Some clients generate very long
   # command lines with huge mailboxes, so you may need to raise this if you get
@@ -554,7 +553,7 @@ protocol imap {
   #     but not both. Thunderbird separates these two by forcing server to
   #     accept '/' suffix in mailbox names in subscriptions list.
   # The list is space-separated.
-  #imap_client_workarounds = outlook-idle
+  imap_client_workarounds = delay-newmail outlook-idle netscape-eoh tb-extra-mailbox-sep
 }
   
 ##
@@ -563,11 +562,11 @@ protocol imap {
 
 protocol pop3 {
   # Login executable location.
-  #login_executable = /usr/libexec/dovecot/pop3-login
+  #login_executable = _PREFIX_/libexec/dovecot/pop3-login
 
   # POP3 executable location. See IMAP's mail_executable above for examples
   # how this could be changed.
-  #mail_executable = /usr/libexec/dovecot/pop3
+  #mail_executable = _PREFIX_/libexec/dovecot/pop3
 
   # Don't try to set mails non-recent or seen with POP3 sessions. This is
   # mostly intended to reduce disk I/O. With maildir it doesn't move files
@@ -612,7 +611,7 @@ protocol pop3 {
   # installations. %08Xu%08Xv will be the new default, so use it for new
   # installations.
   #
-  #pop3_uidl_format = 
+  pop3_uidl_format = %08Xu%08Xv
 
   # POP3 logout format string:
   #  %t - number of TOP commands
@@ -637,7 +636,7 @@ protocol pop3 {
   #     Outlook Express and Netscape Mail breaks if end of headers-line is
   #     missing. This option simply sends it if it's missing.
   # The list is space-separated.
-  #pop3_client_workarounds = 
+  pop3_client_workarounds = outlook-no-nuls oe-ns-eoh
 }
 
 ##
@@ -669,7 +668,7 @@ protocol lda {
 ##
 
 # Executable location
-#auth_executable = /usr/libexec/dovecot/dovecot-auth
+#auth_executable = _PREFIX_/libexec/dovecot/dovecot-auth
 
 # Set max. process size in megabytes.
 #auth_process_size = 256
@@ -784,7 +783,7 @@ auth default {
   # database (passwd usually), you can use static userdb.
   # REMEMBER: You'll need /etc/pam.d/dovecot file created for PAM
   # authentication to actually work. <doc/wiki/PasswordDatabase.PAM.txt>
-  passdb pam {
+  #passdb pam {
     # [blocking=yes] [session=yes] [setcred=yes]
     # [cache_key=<key>] [<service name>]
     #
@@ -817,7 +816,7 @@ auth default {
     #   args = session=yes *
     #   args = cache_key=%u dovecot
     #args = dovecot
-  }
+  #}
 
   # /etc/passwd or similar, using getpwnam()
   # In many systems nowadays this uses Name Service Switch, which is
@@ -836,10 +835,10 @@ auth default {
 
   # PAM-like authentication for OpenBSD.
   # <doc/wiki/PasswordDatabase.BSDAuth.txt>
-  #passdb bsdauth {
+  passdb bsdauth {
     # [cache_key=<key>] - See cache_key in PAM for explanation.
     #args =
-  #}
+  }
 
   # passwd-like file with specified location
   # <doc/wiki/AuthDatabase.PasswdFile.txt>
