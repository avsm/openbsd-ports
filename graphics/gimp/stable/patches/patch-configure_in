$OpenBSD: patch-configure_in,v 1.1 2005/07/08 07:50:56 fgsch Exp $
--- configure.in.orig	Fri May 13 13:01:31 2005
+++ configure.in	Wed Jul  6 02:37:31 2005
@@ -883,7 +883,7 @@ AC_ARG_WITH(libtiff,  [  --without-libti
   if test x$with_libtiff != xno && test -z "$LIBTIFF"; then
     AC_CHECK_LIB(tiff, TIFFReadScanline,
       [AC_CHECK_HEADER(tiffio.h,
-	TIFF='tiff$(EXEEXT)'; LIBTIFF='-ltiff',
+	TIFF='tiff$(EXEEXT)'; LIBTIFF='-ltiff -ljpeg -lz',
 	[AC_MSG_WARN(*** TIFF plug-in will not be built (TIFF header files not found) ***)])],
       [AC_CHECK_LIB(tiff, TIFFWriteScanline,
 	[AC_CHECK_HEADER(tiffio.h,
@@ -893,7 +893,7 @@ AC_ARG_WITH(libtiff,  [  --without-libti
 	  [AC_CHECK_HEADER(tiffio.h,
             TIFF='tiff$(EXEEXT)'; LIBTIFF='-ltiff34 -ljpeg -lz',
 	    [AC_MSG_WARN(*** TIFF plug-in will not be built (TIFF header files not found) ***)])],
-        [AC_MSG_WARN(*** TIFF plug-in will not be built (TIFF library not found) ***)], -ljpeg -lz -lm)], -ljpeg -lz -lm)], -lm)
+        [AC_MSG_WARN(*** TIFF plug-in will not be built (TIFF library not found) ***)], -ljpeg -lz -lm)], -ljpeg -lz -lm)], -ljpeg -lz -lm)
   fi
 
   if test x$with_libtiff != xno && test -z "$LIBTIFF"; then
@@ -1019,9 +1019,9 @@ AC_ARG_WITH(libmng,  [  --without-libmng
      test -n "$LIBPNG" && test -n "$LIBJPEG" && test -n "$LIBZ"; then
     AC_CHECK_LIB(mng, mng_create,
       [AC_CHECK_HEADER(libmng.h, mng_ok=yes)],
-      [AC_MSG_WARN(*** MNG plug-in will not be built (MNG library not found) ***)], -lz -lm)
+      [AC_MSG_WARN(*** MNG plug-in will not be built (MNG library not found) ***)], -llcms $LIBJPEG -lz -lm)
     if test "$mng_ok" = yes; then
-      MNG='mng$(EXEEXT)'; LIBMNG="-lmng $LIBJPEG $LIBPNG"
+      MNG='mng$(EXEEXT)'; LIBMNG="-lmng -llcms $LIBJPEG $LIBPNG"
     else
       AC_MSG_WARN(*** MNG plug-in will not be built (MNG header file not found) ***)
     fi
@@ -1058,9 +1058,9 @@ AC_ARG_WITH(aa,  [  --without-aa        
 if test x$with_aa != xno && test -z "$LIBAA"; then
   AC_CHECK_LIB(aa, aa_printf,
     [AC_CHECK_HEADER(aalib.h,
-      AA='aa$(EXEEXT)'; LIBAA='-laa',
+      AA='aa$(EXEEXT)'; LIBAA='-laa -L/usr/X11R6/lib -lX11',
       [AC_MSG_WARN(*** AA plug-in will not be built (AA header file not found) ***)])],
-    [AC_MSG_WARN(*** AA plug-in will not be built (AA library not found) ***)])
+    [AC_MSG_WARN(*** AA plug-in will not be built (AA library not found) ***)], -L/usr/X11R6/lib -lX11)
 fi
 
 AC_SUBST(AA)
@@ -1096,11 +1096,17 @@ AC_SUBST(LIBXPM)
 # Check for gtkhtml2
 ####################
 
-PKG_CHECK_MODULES(GTKHTML2, libgtkhtml-2.0 >= gtkhtml2_required_version,
-  have_gtkhtml2=yes,
-  AC_MSG_WARN([*** Help browser plug-in will not be built (GtkHtml2 not found) ***]))
-AC_SUBST(GTKHTML2_CFLAGS)
-AC_SUBST(GTKHTML2_LIBS)
+AC_ARG_ENABLE(gtkhtml, [  --disable-gtkhtml       do not build the Help Browser plug-in])
+
+have_gtkhtml2=no
+if test "x$enable_gtkhtml" != "xno"; then
+  have_gtkhtml2=yes
+  PKG_CHECK_MODULES(GTKHTML2, libgtkhtml-2.0 >= gtkhtml2_required_version,
+    have_gtkhtml2=yes,
+    AC_MSG_WARN([*** Help browser plug-in will not be built (GtkHtml2 not found) ***]))
+  AC_SUBST(GTKHTML2_CFLAGS)
+  AC_SUBST(GTKHTML2_LIBS)
+fi
 AM_CONDITIONAL(BUILD_HELPBROWSER, test x$have_gtkhtml2 = xyes)
 
 
@@ -1108,14 +1114,17 @@ AM_CONDITIONAL(BUILD_HELPBROWSER, test x
 # Check for librsvg
 ###################
 
-PKG_CHECK_MODULES(SVG, librsvg-2.0 >= rsvg_required_version,
-  SVG='svg$(EXEEXT)'
-  LIBSVG=$SVG_LIBS,
-  AC_MSG_WARN([*** SVG import plug-in will not be built (librsvg not found) ***]))
-AC_SUBST(SVG)
-AC_SUBST(SVG_CFLAGS)
-AC_SUBST(LIBSVG)
+AC_ARG_ENABLE(svg, [  --enable-svg            do not build the SVG import plug-in])
 
+if test "x$enable_svg" != "xno"; then
+  PKG_CHECK_MODULES(SVG, librsvg-2.0 >= rsvg_required_version,
+    SVG='svg$(EXEEXT)'
+    LIBSVG=$SVG_LIBS,
+    AC_MSG_WARN([*** SVG import plug-in will not be built (librsvg not found) ***]))
+  AC_SUBST(SVG)
+  AC_SUBST(SVG_CFLAGS)
+  AC_SUBST(LIBSVG)
+fi
 
 ######################
 # Check for gimp-print
@@ -1193,10 +1202,10 @@ AC_CHECK_LIB(lcms, cmsCreate_sRGBProfile
       AC_DEFINE(HAVE_LCMS_LCMS_H, 1,
         [Define to 1 if the lcms header must be included as lcms/lcms.h]))
     ])
-])
+], , -lm)
 
 if test $have_lcms = yes; then
-  LCMS_LIBS="-llcms"
+  LCMS_LIBS="-llcms -lm"
 else
   AC_MSG_WARN([*** color proof module will not be built (lcms not found or unuseable) ***])
 fi
