$OpenBSD: patch-base_src_common_encode_c,v 1.1 2003/05/23 13:22:14 todd Exp $
--- base/src/common/encode.c.orig	Wed Jan  1 01:53:28 2003
+++ base/src/common/encode.c	Thu May 22 17:46:42 2003
@@ -68,7 +68,7 @@ b64_decode(const char *s, uint32_t *inle
 {
   uint32_t len = *inlen;
   uint32_t outlen = (len * 6) / 8;
-  unsigned char *outbuf = GC_MALLOC_ATOMIC(outlen);
+  unsigned char *outbuf = malloc(outlen);
   char *pBuf = outbuf;
 
   while (len) {
@@ -123,7 +123,7 @@ b64_encode(const void *vp, uint32_t len)
 {
   unsigned const char *cp = vp;
   uint32_t outlen = (len*8 + 5) / 6;
-  char *outbuf = GC_MALLOC_ATOMIC(outlen + 1);
+  char *outbuf = malloc(outlen + 1);
   char *pBuf = outbuf;
 
   while (len) {
@@ -184,7 +184,7 @@ hex_decode(const char *s, uint32_t *len)
     THROW(ExMalformed, "Hexadecimal strings must be even length");
 
   *len = z / 2;
-  b = GC_MALLOC_ATOMIC(*len);
+  b = malloc(*len);
 
   w = 0;
   for (u = 0; u < z; u=u+2) {
@@ -207,7 +207,7 @@ hex_encode(const void *vp, uint32_t len)
   static char *hex_digits = "0123456789abcdef";
   uint32_t u, w;
   const unsigned char *buf = vp;
-  char *b = GC_MALLOC_ATOMIC(2*len+1);
+  char *b = malloc(2*len+1);
 
   w = 0;
   for (u = 0; u < len; u++) {
