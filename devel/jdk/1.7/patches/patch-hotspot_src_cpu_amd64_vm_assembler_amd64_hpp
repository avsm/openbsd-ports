$OpenBSD: patch-hotspot_src_cpu_amd64_vm_assembler_amd64_hpp,v 1.1.1.1 2007/05/08 17:06:19 kurt Exp $
--- hotspot/src/cpu/amd64/vm/assembler_amd64.hpp.orig	Tue Apr 10 04:01:22 2007
+++ hotspot/src/cpu/amd64/vm/assembler_amd64.hpp	Mon Apr 16 08:42:38 2007
@@ -433,12 +433,12 @@ class Assembler 
   void movl(Address dst, int imm32);
   void movl(Address dst, Register src);
 
-  void movq(Register dst, int64_t imm64);
+  void movq(Register dst, intptr_t imm64);
   void movq(Register dst, address imm64, relocInfo::relocType rtype);
   void movq(Register dst, Register src);
   void movq(Register dst, jobject obj);
   void movq(Register dst, Address src);
-  void movq(Address dst, int64_t imm64);
+  void movq(Address dst, intptr_t imm64);
   void movq(Address dst, Register src);
 
   void movsbl(Register dst, Address src);
@@ -976,7 +976,7 @@ class MacroAssembler
     check_reach(src) ? Assembler::movq(dst, src) :
                        Assembler::movq(dst, Address(rscratch1));
   }
-  void movq(Address dst, int64_t imm64)
+  void movq(Address dst, intptr_t imm64)
   { 
     if (check_reach(dst)) {
       if (is_simm32(imm64)) {
@@ -1441,7 +1441,7 @@ class MacroAssembler
   void popq(Register dst)                   { Assembler::popq(dst); }
   void movl(Register dst, int imm32)        { Assembler::movl(dst, imm32); }
   void movl(Register dst, Register src)     { Assembler::movl(dst, src); }
-  void movq(Register dst, int64_t imm64)    { Assembler::movq(dst, imm64); }
+  void movq(Register dst, intptr_t imm64)    { Assembler::movq(dst, imm64); }
   void movq(Register dst, address imm64, relocInfo::relocType rtype) { Assembler::movq(dst, imm64, rtype); }
   void movq(Register dst, Register src)     { Assembler::movq(dst, src); }
   void movq(Register dst, jobject obj)      { Assembler::movq(dst, obj); }
