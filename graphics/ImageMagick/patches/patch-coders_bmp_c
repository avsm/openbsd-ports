$OpenBSD: patch-coders_bmp_c,v 1.1.2.1 2004/12/30 19:31:15 sturm Exp $
--- coders/bmp.c.orig	2004-12-27 20:48:34.000000000 +0100
+++ coders/bmp.c	2004-12-27 20:53:50.000000000 +0100
@@ -151,6 +151,7 @@ static unsigned int DecodeImage(Image *i
     x;
 
   register unsigned char
+    *p,
     *q;
 
   assert(image != (Image *) NULL);
@@ -159,9 +160,12 @@ static unsigned int DecodeImage(Image *i
     pixels[i]=0;
   byte=0;
   x=0;
-  q=pixels;
+  p=pixels;
+  q=pixels+(size_t) image->columns*image->rows;
   for (y=0; y < (int) image->rows; )
   {
+    if ((p < pixels) || (p >= q))
+      break;
     count=ReadBlobByte(image);
     if (count == EOF)
       break;
@@ -170,13 +174,14 @@ static unsigned int DecodeImage(Image *i
         /*
           Encoded mode.
         */
+        count=Min(count,q-p);
         byte=ReadBlobByte(image);
         for (i=0; i < count; i++)
         {
           if (compression == 1)
-            *q++=(unsigned char) byte;
+            *p++=(unsigned char) byte;
           else
-            *q++=(i & 0x01) ? (byte & 0x0f) : ((byte >> 4) & 0x0f);
+            *p++=(i & 0x01) ? (byte & 0x0f) : ((byte >> 4) & 0x0f);
           x++;
         }
       }
@@ -197,7 +202,7 @@ static unsigned int DecodeImage(Image *i
             */
             x=0;
             y++;
-            q=pixels+y*image->columns;
+            p=pixels+y*image->columns;
             break;
           }
           case 0x02:
@@ -207,7 +212,7 @@ static unsigned int DecodeImage(Image *i
             */
             x+=ReadBlobByte(image);
             y+=ReadBlobByte(image);
-            q=pixels+y*image->columns+x;
+            p=pixels+y*image->columns+x;
             break;
           }
           default:
@@ -215,15 +220,16 @@ static unsigned int DecodeImage(Image *i
             /*
               Absolute mode.
             */
+            count=Min(count,q-p);
             for (i=0; i < count; i++)
             {
               if (compression == 1)
-                *q++=ReadBlobByte(image);
+                *p++=ReadBlobByte(image);
               else
                 {
                   if ((i & 0x01) == 0)
                     byte=ReadBlobByte(image);
-                  *q++=(i & 0x01) ? (byte & 0x0f) : ((byte >> 4) & 0x0f);
+                  *p++=(i & 0x01) ? (byte & 0x0f) : ((byte >> 4) & 0x0f);
                 }
               x++;
             }
