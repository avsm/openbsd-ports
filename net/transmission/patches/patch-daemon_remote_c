$OpenBSD: patch-daemon_remote_c,v 1.3 2009/02/15 18:09:29 naddy Exp $
--- daemon/remote.c.orig	Thu Feb 12 22:00:51 2009
+++ daemon/remote.c	Fri Feb 13 15:33:03 2009
@@ -628,11 +628,11 @@ strlratio2( char * buf, double ratio, size_t buflen )
     else if( (int)ratio == TR_RATIO_INF )
         tr_strlcpy( buf, "Inf", buflen );
     else if( ratio < 10.0 )
-        tr_snprintf( buf, buflen, "%'.2f", ratio );
+        tr_snprintf( buf, buflen, "%.2f", ratio );
     else if( ratio < 100.0 )
-        tr_snprintf( buf, buflen, "%'.1f", ratio );
+        tr_snprintf( buf, buflen, "%.1f", ratio );
     else
-        tr_snprintf( buf, buflen, "%'.0f", ratio );
+        tr_snprintf( buf, buflen, "%.0f", ratio );
     return buf;
 }
 
@@ -660,24 +660,24 @@ strlsize( char *  buf, int64_t size, size_t  buflen )
     if( !size )
         tr_strlcpy( buf, "None", buflen );
     else if( size < (int64_t)KILOBYTE_FACTOR )
-        tr_snprintf( buf, buflen, "%'" PRId64 " bytes", (int64_t)size );
+        tr_snprintf( buf, buflen, "%" PRId64 " bytes", (int64_t)size );
     else
     {
         double displayed_size;
         if( size < (int64_t)MEGABYTE_FACTOR )
         {
             displayed_size = (double) size / KILOBYTE_FACTOR;
-            tr_snprintf( buf, buflen, "%'.1f KB", displayed_size );
+            tr_snprintf( buf, buflen, "%.1f KB", displayed_size );
         }
         else if( size < (int64_t)GIGABYTE_FACTOR )
         {
             displayed_size = (double) size / MEGABYTE_FACTOR;
-            tr_snprintf( buf, buflen, "%'.1f MB", displayed_size );
+            tr_snprintf( buf, buflen, "%.1f MB", displayed_size );
         }
         else
         {
             displayed_size = (double) size / GIGABYTE_FACTOR;
-            tr_snprintf( buf, buflen, "%'.1f GB", displayed_size );
+            tr_snprintf( buf, buflen, "%.1f GB", displayed_size );
         }
     }
     return buf;
