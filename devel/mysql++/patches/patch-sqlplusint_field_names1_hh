$OpenBSD: patch-sqlplusint_field_names1_hh,v 1.1 2004/01/06 11:16:53 wilfried Exp $
--- sqlplusint/field_names1.hh.orig	2001-05-19 18:44:48.000000000 +0200
+++ sqlplusint/field_names1.hh	2004-01-05 18:58:32.000000000 +0100
@@ -2,37 +2,37 @@
 #ifndef __field_names1_hh__
 #define __field_names1_hh__
 
-#include <vector.h>
-#include <algo.h>
+#include <vector>
+#include <algorithm>
 #include "defs"
 #include "define_short"
 #include "coldata1.hh"
 #include "string_util.hh"
 
 //: A vector of the field names.
-class FieldNames : public vector<string> {
+class FieldNames : public std::vector<std::string> {
 private:
   void init (const ResUse *res);
 public:
   FieldNames () {}
   FieldNames (const ResUse *res) {init(res);}
-  FieldNames (int i) : vector<string>(i) {}
+  FieldNames (int i) : std::vector<std::string>(i) {}
 
   FieldNames& operator = (const ResUse *res) {init(res); return *this;}  
   //: Creates a new list from the data in res.
   FieldNames& operator = (int i) {insert(begin(), i, ""); return *this;} 
   //: Creates a new list with i field names.
   
-  string&  operator [] (int i) {return vector<string>::operator [] (i);}
+  std::string&  operator [] (int i) {return std::vector<std::string>::operator [] (i);}
   //: returns the field name of the field with that index number
 
-  const string&  operator [] (int i) const 
-    {return vector<string>::operator [] (i);}
+  const std::string&  operator [] (int i) const 
+    {return std::vector<std::string>::operator [] (i);}
   //: returns the field name of the field with that index number
 
-  uint     operator [] (string i) const
+  uint     operator [] (std::string i) const
   {
-	  string temp(i); str_to_lwr(temp);
+	  std::string temp(i); str_to_lwr(temp);
 	  return find(begin(),end(), temp) - begin();
 	}
   //: returns the index number of the field with that name
