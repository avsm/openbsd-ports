$OpenBSD: patch-kdecore_kprocess_cpp,v 1.1 2003/01/09 20:17:23 espie Exp $
--- kdecore/kprocess.cpp.orig	Thu Jan  9 21:07:01 2003
+++ kdecore/kprocess.cpp	Thu Jan  9 21:08:22 2003
@@ -261,7 +261,7 @@ bool KProcess::start(RunMode runmode, Co
   int fd[2];
   if (0 > pipe(fd))
   {
-     fd[0] = fd[1] = 0; // Pipe failed.. continue
+     fd[0] = fd[1] = -1; // Pipe failed.. continue
   }
 
   runs = true;
@@ -273,7 +273,7 @@ bool KProcess::start(RunMode runmode, Co
   pid_ = fork();
 
   if (0 == pid_) {
-        if (fd[0])
+        if (fd[0] >= 0)
            close(fd[0]);
         if (!runPrivileged())
         {
@@ -303,11 +303,11 @@ bool KProcess::start(RunMode runmode, Co
 
         // We set the close on exec flag.
         // Closing of fd[1] indicates that the execvp succeeded!
-        if (fd[1])
+        if (fd[1] >= 0)
           fcntl(fd[1], F_SETFD, FD_CLOEXEC);
         execvp(arglist[0], arglist);
         char resultByte = 1;
-        if (fd[1])
+        if (fd[1] >= 0)
           write(fd[1], &resultByte, 1);
         _exit(-1);
   } else if (-1 == pid_) {
@@ -317,7 +317,7 @@ bool KProcess::start(RunMode runmode, Co
         free(arglist);
         return false;
   } else {
-        if (fd[1])
+        if (fd[1] >= 0)
           close(fd[1]);
         // the parent continues here
 
@@ -325,7 +325,7 @@ bool KProcess::start(RunMode runmode, Co
         input_data = 0;
 
         // Check whether client could be started.
-        if (fd[0]) for(;;)
+        if (fd[0] >= 0) for(;;)
         {
            char resultByte;
            int n = ::read(fd[0], &resultByte, 1);
@@ -345,7 +345,7 @@ bool KProcess::start(RunMode runmode, Co
            }
            break; // success
         }
-        if (fd[0])
+        if (fd[0] >= 0)
            close(fd[0]);
 
         if (!commSetupDoneP())  // finish communication socket setup for the parent
