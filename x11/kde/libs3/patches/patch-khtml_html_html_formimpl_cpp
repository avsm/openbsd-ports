$OpenBSD: patch-khtml_html_html_formimpl_cpp,v 1.1 2002/06/03 10:06:20 espie Exp $
--- khtml/html/html_formimpl.cpp.orig	Fri May 10 02:41:57 2002
+++ khtml/html/html_formimpl.cpp	Mon Jun  3 12:00:42 2002
@@ -165,9 +165,6 @@ void HTMLFormElementImpl::i18nData()
     QString foo3 = i18n("When you send a password unencrypted to the Internet, "
                         "it might be possible for others to capture it as plain text.\n"
                         "Do you want to continue?");
-    QString foo4 = i18n("You're about to transfer the following files from "
-                        "your local computer to the Internet.\n"
-                        "Do you really want to continue?");
     QString foo5 = i18n("Your data submission is redirected to "
                         "an insecure site. The data is sent unencrypted.\n"
                         "Do you want to continue?");
@@ -176,7 +173,7 @@ void HTMLFormElementImpl::i18nData()
 }
 
 
-QByteArray HTMLFormElementImpl::formData()
+QByteArray HTMLFormElementImpl::formData(bool& ok)
 {
 #ifdef FORMS_DEBUG
     kdDebug( 6030 ) << "form: formData()" << endl;
@@ -218,6 +215,8 @@ QByteArray HTMLFormElementImpl::formData
     for(unsigned int i=0; i < m_encCharset.length(); i++)
         m_encCharset[i] = m_encCharset[i].latin1() == ' ' ? QChar('-') : m_encCharset[i].lower();
 
+    QStringList fileUploads;
+
     for (QPtrListIterator<HTMLGenericFormElementImpl> it(formElements); it.current(); ++it) {
         HTMLGenericFormElementImpl* current = it.current();
         khtml::encodingList lst;
@@ -261,6 +260,7 @@ QByteArray HTMLFormElementImpl::formData
                         static_cast<HTMLInputElementImpl*>(current)->inputType() == HTMLInputElementImpl::FILE)
                     {
                         QString path = static_cast<HTMLInputElementImpl*>(current)->value().string();
+                        if (path.length()) fileUploads << path;
                         QString onlyfilename = path.mid(path.findRev('/')+1);
 
                         hstr += ("; filename=\"" + onlyfilename + "\"").ascii();
@@ -286,6 +286,21 @@ QByteArray HTMLFormElementImpl::formData
             }
         }
     }
+
+    if (fileUploads.count()) {
+        int result = KMessageBox::warningContinueCancelList( 0,
+                                                             i18n("You're about to transfer the following files from "
+                                                                  "your local computer to the Internet.\n"
+                                                                  "Do you really want to continue?"),
+                                                             fileUploads);
+
+
+        if (result == KMessageBox::Cancel) {
+            ok = false;
+            return QByteArray();
+        }
+    }
+
     if (m_multipart)
         enc_string = ("--" + m_boundary.string() + "--\r\n").ascii();
 
@@ -293,6 +308,7 @@ QByteArray HTMLFormElementImpl::formData
     form_data.resize( form_data.size() + enc_string.length() );
     memcpy(form_data.data() + old_size, enc_string.data(), enc_string.length() );
 
+    ok = true;
     return form_data;
 }
 
@@ -366,19 +382,19 @@ void HTMLFormElementImpl::submit(  )
         }
     }
 
-    QByteArray form_data = formData();
-    if(m_post)
-    {
-        view->part()->submitForm( "post", m_url.string(), form_data,
-                                  m_target.string(),
-                                  enctype().string(),
-//                                   m_encCharset.isEmpty() ? enctype().string()
-//                                   : QString(enctype().string() + "; charset=" + m_encCharset),
-                                  boundary().string() );
-    }
-    else {
-        view->part()->submitForm( "get", m_url.string(), form_data,
-                                  m_target.string() );
+    bool ok;
+    QByteArray form_data = formData(ok);
+    if (ok) {
+        if(m_post) {
+            view->part()->submitForm( "post", m_url.string(), form_data,
+                                      m_target.string(),
+                                      enctype().string(),
+                                      boundary().string() );
+        }
+        else {
+            view->part()->submitForm( "get", m_url.string(), form_data,
+                                      m_target.string() );
+        }
     }
 
     m_doingsubmit = m_insubmit = false;
@@ -996,7 +1012,7 @@ void HTMLInputElementImpl::init()
     case IMAGE:
         break;
     };
-    m_value = getAttribute(ATTR_VALUE);
+    if (m_type != FILE) m_value = getAttribute(ATTR_VALUE);
     if ((uint) m_type <= ISINDEX && !m_value.isEmpty()) {
         QString value = m_value.string();
         // remove newline stuff..
@@ -1226,14 +1242,10 @@ DOMString HTMLInputElementImpl::value() 
 
 void HTMLInputElementImpl::setValue(DOMString val)
 {
-    switch (m_type) {
-    case FILE:
-        // sorry, can't change this!
-        break;
-    default:
-        m_value = (val.isNull() ? DOMString("") : val);
-        setChanged();
-    }
+    if (m_type == FILE) return;
+
+    m_value = (val.isNull() ? DOMString("") : val);
+    setChanged();
 }
 
 void HTMLInputElementImpl::blur()
@@ -1388,7 +1400,7 @@ long HTMLSelectElementImpl::selectedInde
             if (static_cast<HTMLOptionElementImpl*>(items[i])->selected())
                 return o;
             o++;
-    }
+        }
     }
     Q_ASSERT(m_multiple);
     return -1;
