$OpenBSD: patch-dcop_dcopc_c,v 1.1.2.1 2003/01/07 00:12:40 brad Exp $
--- dcop/dcopc.c.orig	Wed Apr 18 12:18:55 2001
+++ dcop/dcopc.c	Sun Jan  5 16:04:15 2003
@@ -36,6 +36,9 @@
 #include "dcopglobal.h"
 #include "dcopc.h"
 
+
+#define BUFFER_SIZE 1024
+
 enum {
   DCOP_REPLY_PENDING,
   DCOP_REPLY_OK,
@@ -133,7 +136,11 @@ dcop_read_string(char * buf, char ** out
   int length;
   char * pos = dcop_read_int(buf, &length);
   fprintf(stderr, "dcop_read_string: length == %d\n", length);
+
   *output = (char *)malloc(length);
+  if (*output == NULL)
+    return pos;
+
   memcpy(*output, pos, length);
   return pos + length;
 }
@@ -215,6 +222,8 @@ dcop_process_message(
 
       fprintf(stderr, "dcop_process_message(): length == %ld\n", length);
       buf = (char *)malloc(length);
+      if (buf == NULL)
+        return;
       status = IceReadData(dcop_ice_conn, length, buf);
       if (False == status) {
         fprintf(stderr, "dcop_process_message(): IceReadData failed\n");
@@ -253,6 +262,9 @@ dcop_process_message(
       fprintf(stderr, "dcop_process_message(): DCOPSend received\n");
 
       buf = (char *)malloc(length);
+      if (buf == NULL)
+        return;
+
       IceReadData(dcop_ice_conn, length, buf);
 
       pos = buf;
@@ -307,6 +319,8 @@ dcop_send_signal(
 
   struct DCOPMsg * pMsgPtr = 0;
 
+  static const char sAnonymous = "anonymous";
+
   if (0 == dcop_ice_conn) {
     fprintf(stderr, "Try running dcop_attach(), moron\n");
     return False;
@@ -338,10 +352,19 @@ dcop_send_signal(
    * as last field into the dcop msg header ;-)
    */
 
-  header = (char *)malloc(1024);
+  headerLength = strlen(sAnonymous) + 1 +
+                 strlen(receiving_app) + 1 +
+                 strlen(object) + 1 +
+                 strlen(function) + 1 +
+                 4*5;  /* 4 string lengths + 1 int */
+
+  header = (char *)malloc(headerLength);
+  if (header == NULL)
+    return False;
+
   pos = header;
 
-  pos = dcop_write_string(pos, "anonymous");
+  pos = dcop_write_string(pos, sAnonymous);
   pos = dcop_write_string(pos, receiving_app);
   pos = dcop_write_string(pos, object);
   pos = dcop_write_string(pos, function);
@@ -423,6 +446,8 @@ dcop_call(
   temp += 1024; /* Extra space for marshalling overhead */
 
   outputData = (char *)malloc(temp);
+  if (outputData == NULL)
+    return False;
 
   temp = 0;
 
@@ -556,10 +581,16 @@ dcop_register(const char * app_name, Boo
     /* Leave room for "-pid" */
     int len = strlen(app_name) + 64;
     dcop_requested_name = (char *)malloc(len);
+    if (dcop_requested_name == NULL)
+      return NULL;
+
     snprintf(dcop_requested_name, len, "%s-%ld", app_name, (long)getpid());
   }
 
   data = (char *)malloc(strlen(dcop_requested_name) + 42);
+  if (data == NULL)
+    return NULL;
+
   pos = data;
   pos = dcop_write_string(pos, dcop_requested_name);
   dataLength = pos - data;
@@ -616,6 +647,7 @@ dcop_ice_register()
   return (dcop_major_opcode >= 0) ? True : False;
 }
 
+
 /***************************************************************************/
 
   Bool
@@ -628,10 +660,10 @@ dcop_connect()
   char      * homeDir       = 0L;
   char      * display       = 0L;
   char      * dcopServer    = 0L;
-  char        errBuf[1024];
-  char        fileName[512];
-  char        hostName[256];
-  char        displayName[256];
+  char        errBuf[BUFFER_SIZE];
+  char        fileName[BUFFER_SIZE];
+  char        hostName[BUFFER_SIZE];
+  char        displayName[BUFFER_SIZE];
   char      * i;
 
   homeDir = getenv("HOME");
@@ -644,7 +676,9 @@ dcop_connect()
   if (NULL == display)
     return False;
 
-  strcpy(displayName, display);
+  strncpy(displayName, display, sizeof(displayName));
+  displayName[sizeof(displayName) - 1] = 0;
+
   if((i = strrchr(displayName, '.')) > strrchr(displayName, ':') && i)
       *i = '\0';
 
@@ -668,9 +702,12 @@ dcop_connect()
       return False;
     }
 
-    dcopServer = (char *)malloc(1024);
+    dcopServer = (char *)malloc(BUFFER_SIZE);
+    if (dcopServer == NULL)
+      return False;
 
-    bytesRead = fread((void *)dcopServer, sizeof(char), 1024, f);
+    bytesRead = fread((void *)dcopServer, sizeof(char), BUFFER_SIZE, f);
+    dcopServer[BUFFER_SIZE - 1] = 0;
 
     if (0 == bytesRead)
       return False;
@@ -719,7 +756,7 @@ dcop_protocol_setup()
   int           majorVersion  = 0;
   int           minorVersion  = 0;
   int           status        = 0;
-  char          errBuf[1024];
+  char          errBuf[BUFFER_SIZE];
 
   status =
     IceProtocolSetup(
@@ -731,7 +768,7 @@ dcop_protocol_setup()
       &(minorVersion),
       &(vendor),
       &(release),
-      1024,
+      BUFFER_SIZE,
       errBuf
     );
 
