$OpenBSD: patch-jhead_c,v 1.5 2008/04/24 19:36:14 okan Exp $
--- jhead.c.orig	Thu Apr  3 10:52:21 2008
+++ jhead.c	Thu Apr 24 09:15:26 2008
@@ -153,7 +153,7 @@ static int FileEditComment(char * TempFileName, char *
 #endif
         }
 
-        sprintf(QuotedPath, "%s \"%s\"",Editor, TempFileName);
+        snprintf(QuotedPath, sizeof(QuotedPath), "%s \"%s\"",Editor, TempFileName);
         a = system(QuotedPath);
     }
     
@@ -259,7 +259,8 @@ static int ModifyDescriptComment(char * OutComment, ch
     if (!HasScandate && !ImageInfo.DateTime[0]){
         // Scan date is not in the file yet, and it doesn't have one built in.  Add it.
         char Temp[30];
-        sprintf(Temp, "scan_date=%s", ctime(&ImageInfo.FileDateTime));
+        snprintf(Temp, sizeof(Temp),
+	    "scan_date=%s", ctime(&ImageInfo.FileDateTime));
         strcat(OutComment, Temp);
         Modified = TRUE;
     }
@@ -285,7 +286,9 @@ static int AutoResizeCmdStuff(void)
 
     if (scale < 0.5) scale = 0.5; // Don't scale down by more than a factor of two.
 
-    sprintf(CommandString, "mogrify -geometry %dx%d -quality 85 &i",(int)(ImageInfo.Width*scale), (int)(ImageInfo.Height*scale));
+    snprintf(CommandString, sizeof(CommandString),
+	"mogrify -geometry %dx%d -quality 85 &i",
+	(int)(ImageInfo.Width*scale), (int)(ImageInfo.Height*scale));
     return TRUE;
 }
 
@@ -315,13 +318,15 @@ static void DoCommand(const char * FileName, int ShowI
         if (ApplyCommand[a] == '&'){
             if (ApplyCommand[a+1] == 'i'){
                 // Input file.
-                e += sprintf(ExecString+e, "\"%s\"",FileName);
+                e += snprintf(ExecString+e, sizeof(ExecString) + e,
+		    "\"%s\"",FileName);
                 a += 1;
                 continue;
             }
             if (ApplyCommand[a+1] == 'o'){
                 // Needs an output file distinct from the input file.
-                e += sprintf(ExecString+e, "\"%s\"",TempName);
+                e += snprintf(ExecString+e, sizeof(ExecString) + e,
+		    "\"%s\"",TempName);
                 a += 1;
                 TempUsed = TRUE;
                 unlink(TempName);// Remove any pre-existing temp file
@@ -551,7 +556,8 @@ static void DoFileRenaming(const char * FileName)
                         memcpy(pat, pattern+ppos, 4);
                         pat[a-ppos] = 'd'; // Replace 'i' with 'd' for '%d'
                         pat[a-ppos+1] = '\0';
-                        sprintf(num, pat, FileSequence); // let printf do the number formatting.
+			// let printf do the number formatting.
+                        snprintf(num, sizeof(num), pat, FileSequence);
                         memmove(pattern+ppos+strlen(num), pattern+a+1, strlen(pattern+a+1)+1);
                         memcpy(pattern+ppos, num, strlen(num));
                         break;
@@ -565,8 +571,9 @@ static void DoFileRenaming(const char * FileName)
         strftime(NewBaseName+PrefixPart, PATH_MAX, pattern, &tm);
     }else{
         // My favourite scheme.
-        sprintf(NewBaseName+PrefixPart, "%02d%02d-%02d%02d%02d",
-             tm.tm_mon+1, tm.tm_mday, tm.tm_hour, tm.tm_min, tm.tm_sec);
+        snprintf(NewBaseName+PrefixPart, sizeof NewBaseName+PrefixPart,
+	    "%02d%02d-%02d%02d%02d",
+            tm.tm_mon+1, tm.tm_mday, tm.tm_hour, tm.tm_min, tm.tm_sec);
     }
 
     for (a=0;;a++){
@@ -590,7 +597,7 @@ static void DoFileRenaming(const char * FileName)
             NameExtra[0] = 0;
         }
 
-        sprintf(NewName, "%s%s.jpg", NewBaseName, NameExtra);
+        snprintf(NewName, sizeof(NewName), "%s%s.jpg", NewBaseName, NameExtra);
 
         if (!strcmp(FileName, NewName)) break; // Skip if its already this name.
 
@@ -600,7 +607,8 @@ static void DoFileRenaming(const char * FileName)
                 printf("%s --> %s\n",FileName, NewName);
 #ifdef _WIN32
                 if (RenameAssociatedFiles){
-                    sprintf(NewName, "%s%s", NewBaseName, NameExtra);
+                    snprintf(NewName, sizeof(NewName),
+			"%s%s", NewBaseName, NameExtra);
                     RenameAssociated(FileName, NewName);
                 }
 #endif
@@ -632,7 +640,8 @@ static int DoAutoRotate(const char * FileName)
                 ErrFatal("Orientation screwup");
             }
 
-            sprintf(RotateCommand, "jpegtran -%s -outfile &o &i", Argument);
+            snprintf(RotateCommand, sizeof(RotateCommand),
+		"jpegtran -%s -outfile &o &i", Argument);
             ApplyCommand = RotateCommand;
             DoCommand(FileName, FALSE);
             ApplyCommand = NULL;
@@ -651,7 +660,8 @@ static int DoAutoRotate(const char * FileName)
                 strcpy(ThumbTempName_out, FileName);
                 strcat(ThumbTempName_out, ".tho");
                 SaveThumbnail(ThumbTempName_in);
-                sprintf(RotateCommand,"jpegtran -%s -outfile \"%s\" \"%s\"",
+                snprintf(RotateCommand, sizeof(RotateCommand),
+		    "jpegtran -%s -outfile \"%s\" \"%s\"",
                     Argument, ThumbTempName_out, ThumbTempName_in);
 
                 if (system(RotateCommand) == 0){
@@ -679,7 +689,8 @@ static int RegenerateThumbnail(const char * FileName)
         return FALSE;
     }
 
-    sprintf(ThumbnailGenCommand, "mogrify -thumbnail %dx%d \"%s\"", 
+    snprintf(ThumbnailGenCommand, sizeof(ThumbnailGenCommand),
+	"mogrify -thumbnail %dx%d \"%s\"", 
         RegenThumbnail, RegenThumbnail, FileName);
 
     if (system(ThumbnailGenCommand) == 0){
@@ -1012,7 +1023,7 @@ void ProcessFile(const char * FileName)
 
             // Print to temp buffer first to avoid putting null termination in destination.
             // snprintf() would do the trick, hbut not available everywhere (like FreeBSD 4.4)
-            sprintf(TempBuf, "%04d:%02d:%02d %02d:%02d:%02d",
+            snprintf(TempBuf, sizeof(TempBuf), "%04d:%02d:%02d %02d:%02d:%02d",
                 tm.tm_year+1900, tm.tm_mon+1, tm.tm_mday,
                 tm.tm_hour, tm.tm_min, tm.tm_sec);
             
