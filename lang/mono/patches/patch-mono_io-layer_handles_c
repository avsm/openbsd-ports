$OpenBSD: patch-mono_io-layer_handles_c,v 1.2 2010/03/26 17:53:26 robert Exp $
--- mono/io-layer/handles.c.orig	Fri Sep 25 16:58:10 2009
+++ mono/io-layer/handles.c	Fri Mar 26 18:47:01 2010
@@ -1046,6 +1046,9 @@ void _wapi_handle_unref (gpointer handle)
 	guint32 idx = GPOINTER_TO_UINT(handle);
 	gboolean destroy = FALSE;
 	int thr_ret;
+#if defined(__OpenBSD__)
+	int i = 0;
+#endif
 
 	if (!_WAPI_PRIVATE_VALID_SLOT (idx)) {
 		return;
@@ -1114,8 +1117,19 @@ void _wapi_handle_unref (gpointer handle)
 			 * now, but pthreads doesn't have a
 			 * "unlock_and_destroy" atomic function.
 			 */
+#if defined(__OpenBSD__)
+			/* XXX: It seems that we have to wait for some thread to finish */
+			do {
+				thr_ret = mono_mutex_destroy (&_WAPI_PRIVATE_HANDLES(idx).signal_mutex);
+				if (thr_ret == EBUSY) {
+					sleep(1);
+					i++;
+				}
+			} while ((thr_ret > 0) && (i < 5));
+#else
 			thr_ret = mono_mutex_destroy (&_WAPI_PRIVATE_HANDLES(idx).signal_mutex);
 			g_assert (thr_ret == 0);
+#endif
 				
 			thr_ret = pthread_cond_destroy (&_WAPI_PRIVATE_HANDLES(idx).signal_cond);
 			g_assert (thr_ret == 0);
