$OpenBSD: patch-src_Makefile,v 1.1 2001/05/20 05:56:37 form Exp $
--- src/Makefile.orig	Sun May 20 12:22:31 2001
+++ src/Makefile	Sun May 20 12:24:23 2001
@@ -1,8 +1,8 @@
 # Makefile for analog 5.01
 # Please read docs/Readme.html, or http://www.analog.cx/
-CC = gcc           # which compiler to use: eg cc, acc, gcc. NB Different
+#CC = gcc           # which compiler to use: eg cc, acc, gcc. NB Different
 #                    compilers need different CFLAGS, e.g., -O instead of -O2.
-CFLAGS = -O2    # options, e.g. for optimisation or ANSI compilation.
+#CFLAGS = -O2    # options, e.g. for optimisation or ANSI compilation.
 #                 HP/UX cc needs CFLAGS = -Aa (HP/UX 9) or -Ae (HP/UX 10)
 #                 BS2000/OSD needs CFLAGS = -XLLML -XLLMK
 #                 NeXTSTEP needs CFLAGS = -O2 -pipe -no-precomp 
@@ -52,7 +52,7 @@ HEADERS = anlghead.h anlghea2.h anlghea3
 ALLCFLAGS = $(CFLAGS) $(DEFS) -D$(OS)
 ALLOBJS = $(OBJS) $(SUBDIROBJS)
 
-$(PROGRAM): $(OBJS) $(SUBDIRS) $(HEADERS) Makefile
+$(PROGRAM): $(OBJS) $(SUBDIRS) $(HEADERS)
 	$(CC) $(CFLAGS) -o $(TARGET) $(ALLOBJS) $(LIBS)
 	@echo '***'
 	@echo '***IMPORTANT: You must read the licence before using analog'
@@ -72,61 +72,61 @@ pcre: ALWAYS
 zlib: ALWAYS
 	cd zlib && make 'CC=$(CC)' 'ALLCFLAGS=$(ALLCFLAGS)'
 
-alias.o: alias.c $(HEADERS) Makefile
+alias.o: alias.c $(HEADERS)
 	$(CC) $(ALLCFLAGS) -c alias.c
 
-analog.o: analog.c $(HEADERS) Makefile
+analog.o: analog.c $(HEADERS)
 	$(CC) $(ALLCFLAGS) -c analog.c
 
-cache.o: cache.c $(HEADERS) Makefile
+cache.o: cache.c $(HEADERS)
 	$(CC) $(ALLCFLAGS) -c cache.c
 
-dates.o: dates.c $(HEADERS) Makefile
+dates.o: dates.c $(HEADERS)
 	$(CC) $(ALLCFLAGS) -c dates.c
 
-globals.o: globals.c $(HEADERS) Makefile
+globals.o: globals.c $(HEADERS)
 	$(CC) $(ALLCFLAGS) -c globals.c
 
-hash.o: hash.c $(HEADERS) Makefile
+hash.o: hash.c $(HEADERS)
 	$(CC) $(ALLCFLAGS) -c hash.c
 
-init.o: init.c $(HEADERS) Makefile
+init.o: init.c $(HEADERS)
 	$(CC) $(ALLCFLAGS) -c init.c
 
-init2.o: init2.c $(HEADERS) Makefile
+init2.o: init2.c $(HEADERS)
 	$(CC) $(ALLCFLAGS) -c init2.c
 
-input.o: input.c $(HEADERS) Makefile
+input.o: input.c $(HEADERS)
 	$(CC) $(ALLCFLAGS) -c input.c
 
-macinput.o: macinput.c $(HEADERS) Makefile
+macinput.o: macinput.c $(HEADERS)
 	$(CC) $(ALLCFLAGS) -c macinput.c
 
-macstuff.o: macstuff.c $(HEADERS) Makefile
+macstuff.o: macstuff.c $(HEADERS)
 	$(CC) $(ALLCFLAGS) -c macstuff.c
 
-output.o: output.c $(HEADERS) Makefile
+output.o: output.c $(HEADERS)
 	$(CC) $(ALLCFLAGS) -c output.c
 
-output2.o: output2.c $(HEADERS) Makefile
+output2.o: output2.c $(HEADERS)
 	$(CC) $(ALLCFLAGS) -c output2.c
 
-process.o: process.c $(HEADERS) Makefile
+process.o: process.c $(HEADERS)
 	$(CC) $(ALLCFLAGS) -c process.c
 
-settings.o: settings.c $(HEADERS) Makefile
+settings.o: settings.c $(HEADERS)
 	$(CC) $(ALLCFLAGS) -c settings.c
 
-sort.o: sort.c $(HEADERS) Makefile
+sort.o: sort.c $(HEADERS)
 	$(CC) $(ALLCFLAGS) -c sort.c
 
-tree.o: tree.c $(HEADERS) Makefile
+tree.o: tree.c $(HEADERS)
 	$(CC) $(ALLCFLAGS) -c tree.c
 
-utils.o: utils.c $(HEADERS) Makefile
+utils.o: utils.c $(HEADERS)
 	$(CC) $(ALLCFLAGS) -c utils.c
 
-win32.o: win32.c $(HEADERS) Makefile
+win32.o: win32.c $(HEADERS)
 	$(CC) $(ALLCFLAGS) -c win32.c
 
 force:
