$OpenBSD: patch-girepository_giroffsets_c,v 1.1 2009/11/12 21:48:18 jasper Exp $

Prevent redefinition of ALIGN in giroffsets.c with /usr/include/machine/param.h

--- girepository/giroffsets.c.orig	Thu Nov 12 21:33:35 2009
+++ girepository/giroffsets.c	Thu Nov 12 21:34:37 2009
@@ -309,7 +309,7 @@ get_field_size_alignment (GIrNodeField *field,
   return success;
 }
 
-#define ALIGN(n, align) (((n) + (align) - 1) & ~((align) - 1))
+#define G_ALIGN(n, align) (((n) + (align) - 1) & ~((align) - 1))
 
 static gboolean
 compute_struct_field_offsets (GIrNode     *node,
@@ -343,7 +343,7 @@ compute_struct_field_offsets (GIrNode     *node,
 					    module, modules,
 					    &member_size, &member_alignment))
 		{
-		  size = ALIGN (size, member_alignment);
+		  size = G_ALIGN (size, member_alignment);
 		  alignment = MAX (alignment, member_alignment);
 		  field->offset = size;
 		  size += member_size;
@@ -357,14 +357,14 @@ compute_struct_field_offsets (GIrNode     *node,
 	}
       else if (member->type == G_IR_NODE_CALLBACK)
 	{
-          size = ALIGN (size, ffi_type_pointer.alignment);
+          size = G_ALIGN (size, ffi_type_pointer.alignment);
           alignment = MAX (alignment, ffi_type_pointer.alignment);
 	  size += ffi_type_pointer.size;
 	}
     }
 
   /* Structs are tail-padded out to a multiple of their alignment */
-  size = ALIGN (size, alignment);
+  size = G_ALIGN (size, alignment);
 
   if (!have_error)
     {
@@ -422,7 +422,7 @@ compute_union_field_offsets (GIrNode     *node,
     }
 
   /* Unions are tail-padded out to a multiple of their alignment */
-  size = ALIGN (size, alignment);
+  size = G_ALIGN (size, alignment);
 
   if (!have_error)
     {
