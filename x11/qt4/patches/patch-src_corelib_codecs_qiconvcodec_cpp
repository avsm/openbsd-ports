$OpenBSD: patch-src_corelib_codecs_qiconvcodec_cpp,v 1.1 2008/05/26 17:08:35 naddy Exp $
--- src/corelib/codecs/qiconvcodec.cpp.orig	Sun May 25 19:00:35 2008
+++ src/corelib/codecs/qiconvcodec.cpp	Sun May 25 19:03:40 2008
@@ -136,7 +136,7 @@ QString QIconvCodec::convertToUnicode(const char* char
     QByteArray ba;
     size_t outBytesLeft = len * 2 + 2;
     ba.resize(outBytesLeft);
-#ifdef GNU_LIBICONV
+#if defined(GNU_LIBICONV) && (_LIBICONV_VERSION < 0x010B)
     // GNU doesn't disagree with POSIX :/
     const char *inBytes = chars;
 #else
@@ -196,7 +196,7 @@ QByteArray QIconvCodec::convertFromUnicode(const QChar
     ba.resize(outBytesLeft);
     char *outBytes = ba.data();
 
-#if defined(GNU_LIBICONV)
+#if defined(GNU_LIBICONV) && (_LIBICONV_VERSION < 0x010B)
     const char *inBytes;
 #else
     char *inBytes;
@@ -206,7 +206,7 @@ QByteArray QIconvCodec::convertFromUnicode(const QChar
 #if !defined(NO_BOM)
     // give iconv() a BOM
     QChar bom[] = { QChar(QChar::ByteOrderMark) };
-#ifdef GNU_LIBICONV
+#if defined(GNU_LIBICONV) && (_LIBICONV_VERSION < 0x010B)
     // GNU doesn't disagree with POSIX :/
     inBytes = reinterpret_cast<const char *>(bom);
 #else
@@ -220,7 +220,7 @@ QByteArray QIconvCodec::convertFromUnicode(const QChar
 #endif // NO_BOM
 
     // now feed iconv() the real data
-#ifdef GNU_LIBICONV
+#if defined(GNU_LIBICONV) && (_LIBICONV_VERSION < 0x010B)
     // GNU doesn't disagree with POSIX :/
     inBytes = reinterpret_cast<const char *>(uc);
 #else
