--- gcc/configure.in.orig	Thu Jan 28 09:46:10 1999
+++ gcc/configure.in	Fri Feb 12 02:43:25 1999
@@ -502,11 +502,23 @@
 	tm_file=${cpu_type}/${cpu_type}.h
 	xm_file=${cpu_type}/xm-${cpu_type}.h
 	
-	# Set the default macros to define for GNU/Linux systems.
+	# Common parts for linux-gnu and openbsd systems
 	case $machine in
 	*-*-linux-gnu*)
 		xm_defines="HAVE_ATEXIT POSIX BSTRING"
 		;;
+	*-*-openbsd*)
+		tm_file=${cpu_type}/openbsd.h
+		# On OpenBSD systems, the headers are okay
+		fixincludes=Makefile.in
+		tmake_file="t-libc-ok t-openbsd"
+		# avoid surprises, always provide an xm-openbsd file 
+		xm_file=${cpu_type}/xm-openbsd.h
+ 		if test x$enable_threads = xyes; then
+ 			thread_file='posix'
+			tmake_file="${tmake_file} t-openbsd-thread"
+		fi
+		;;
 	esac
 
 	case $machine in
@@ -586,6 +598,12 @@
 		fixincludes=fixinc.wrap
 		gas=yes gnu_ld=yes
 		;;
+
+	alpha*-*-openbsd*)
+		# default x-alpha is only appropriate for dec-osf.
+		target_cpu_default="MASK_GAS"
+		xmake_file=none
+		;;
 		
 	alpha*-dec-osf*)
 		if test x$stabs = xyes
@@ -776,6 +794,10 @@
 	h8300-*-*)
 		float_format=i32
 		;;
+	hppa*-*-openbsd*)
+		target_cpu_default="MASK_SNAKE"
+     tmake_file=pa/t-openbsd
+		;;
 	hppa1.1-*-pro*)
 		tm_file="pa/pa-pro.h ${tm_file} pa/pa-pro-end.h libgloss.h"
 		xm_file=pa/xm-papro.h
@@ -1103,10 +1125,8 @@
 		fixincludes=fixinc.wrap
 		tmake_file=i386/t-freebsd
 		;;
-	# We are hoping OpenBSD is still close enough to NetBSD that we can
-	# share the configurations.
 changequote(,)dnl
-	i[34567]86-*-netbsd* | i[34567]86-*-openbsd*)
+	i[34567]86-*-netbsd*)
 changequote([,])dnl
 		tm_file=i386/netbsd.h
 		# On NetBSD, the headers are already okay, except for math.h.
@@ -1114,6 +1134,14 @@
 		tmake_file=t-netbsd
 		;;
 changequote(,)dnl
+	i[34567]86-*-openbsd*)
+changequote([,])dnl
+		# Remove when the math emulator is fixed
+		target_cpu_default="MASK_NO_FANCY_MATH_387"
+		# we need collect2 until our bug is fixed...
+		use_collect2=yes
+		;;
+changequote(,)dnl
 	i[34567]86-*-coff*)
 changequote([,])dnl
 		tm_file=i386/i386-coff.h
@@ -1975,6 +2003,11 @@
 		tmake_file=t-netbsd
 		float_format=m68k
 		;;
+	m68k*-*-openbsd*)
+		float_format=m68k
+		# we need collect2 until our bug is fixed...
+		use_collect2=yes
+		;;
 	m68k-*-sysv3*)			# Motorola m68k's running system V.3
 		xm_file="xm-alloca.h ${xm_file}"
 		xm_defines=USG
@@ -2098,6 +2131,9 @@
 			tmake_file=m88k/t-luna
 		fi
 		;;
+	m88k-*-openbsd*)
+		tmake_file="${tmake_file} m88k/t-luna-gas"
+		;;
 	m88k-*-sysv3*)
 		tm_file=m88k/sysv3.h
 		extra_parts="crtbegin.o crtend.o"
@@ -2306,6 +2342,16 @@
 		gas=yes
 		fixincludes=Makefile.in 
 		;;
+	mips*el-*-openbsd*)	# mips little endian
+		target_cpu_default="MASK_GAS|MASK_ABICALLS"
+		tm_file=mips/openbsd.h
+		xmake_file=none
+		;;
+	mips*-*-openbsd*)		# mips big endian
+		target_cpu_default="MASK_GAS|MASK_ABICALLS"
+		tm_file=mips/openbsd-be.h
+		xmake_file=none
+		;;
 	mips-sony-bsd* | mips-sony-newsos*)	# Sony NEWS 3600 or risc/news.
 		tm_file="mips/news4.h ${tm_file}"
 		if test x$stabs = xyes; then
@@ -2656,6 +2702,9 @@
                 ;;
         pdp11-*-*)
 		;;
+	ns32k-*-openbsd*)
+		# Nothing special
+		;;
 	pyramid-*-*)
 		cpu_type=pyr
 		xmake_file=pyr/x-pyr
@@ -2668,6 +2717,14 @@
 		xmake_file=romp/x-mach
 		use_collect2=yes
 		;;
+	romp-*-openbsd*)
+		# Nothing special
+		;;
+	powerpc-*-openbsd*)
+		tmake_file="${tmake_file} rs6000/t-rs6000 rs6000/t-openbsd"
+		xmake_file=none
+		xm_file=rs6000/xm-openbsd.h
+		;;
 	powerpc-*-beos*)
 		cpu_type=rs6000
 		tm_file=rs6000/beos.h
@@ -2962,6 +3019,10 @@
 		fixincludes=fixinc.wrap
 		tmake_file=t-netbsd
 		;;
+	sparc-*-openbsd*)
+		# we need collect2 until our bug is fixed...
+		use_collect2=yes
+		;;
 	sparc-*-bsd*)
 		tm_file=sparc/bsd.h
 		;;
@@ -3189,6 +3250,9 @@
 		fixincludes=fixinc.wrap
 		tmake_file=t-netbsd
 		float_format=vax
+		;;
+	vax-*-openbsd*)
+		tmake_file="${tm_file} vax/t-openbsd"
 		;;
 	vax-*-ultrix*)			# vaxen running ultrix
 		tm_file="${tm_file} vax/ultrix.h"
