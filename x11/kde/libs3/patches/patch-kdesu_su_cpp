$OpenBSD: patch-kdesu_su_cpp,v 1.6 2004/09/18 09:36:44 espie Exp $
--- kdesu/su.cpp.orig	Sat May 22 22:55:16 2004
+++ kdesu/su.cpp	Mon Sep  6 02:36:32 2004
@@ -41,19 +41,35 @@
 #ifndef __PATH_SU
 #define __PATH_SU "false"
 #endif
+#ifndef __PATH_SUDO
+#define __PATH_SUDO "false"
+#endif
 
+class SuProcess::SuProcessPrivate
+{
+public:
+    bool m_useSudo;
+};
 
 SuProcess::SuProcess(const QCString &user, const QCString &command)
 {
     m_User = user;
     m_Command = command;
+    d = new SuProcess::SuProcessPrivate();
+    d->m_useSudo = false;
 }
 
 
 SuProcess::~SuProcess()
 {
+    delete d;
 }
 
+void SuProcess::setUseSudo(bool use_sudo)
+{
+    d->m_useSudo = use_sudo;
+}
+
 int SuProcess::checkInstall(const char *password)
 {
     return exec(password, Install);
@@ -65,7 +81,7 @@ int SuProcess::checkNeedPassword()
 }
 
 /*
- * Execute a command with su(1).
+ * Execute a command with su(1) or sudo
  */
 
 int SuProcess::exec(const char *password, int check)
@@ -74,11 +90,19 @@ int SuProcess::exec(const char *password
 	setTerminal(true);
 
     QCStringList args;
+    if (d->m_useSudo)
+    {
+	args += "-S";
+	args += "-p";
+	args += "Password:";
+	args += "-u";
+    }
     if ((m_Scheduler != SchedNormal) || (m_Priority > 50))
 	args += "root";
     else
 	args += m_User;
-    args += "-c";
+    if (!d->m_useSudo)
+	args += "-c";
     args += QCString(__KDE_BINDIR) + "/kdesu_stub";
     args += "-";
 
@@ -91,7 +115,7 @@ int SuProcess::exec(const char *password
     }
 
     // kdDebug(900) << k_lineinfo << "Call StubProcess::exec()" << endl;
-    if (StubProcess::exec(command, args) < 0)
+    if (StubProcess::exec(d->m_useSudo ? __PATH_SUDO : __PATH_SU, args) < 0)
     {
 	return check ? SuNotFound : -1;
     }
@@ -103,7 +127,8 @@ int SuProcess::exec(const char *password
     if (ret == error) 
     {
 	if (!check)
-	    kdError(900) << k_lineinfo << "Conversation with su failed\n";
+	    kdError(900) << k_lineinfo << "Conversation with " <<
+		(d->m_useSudo ? "sudo" : "su") << " failed\n";
 	return ret;
     } 
     if (check == NeedPassword)
@@ -201,6 +226,9 @@ int SuProcess::ConverseSU(const char *pa
 		kdDebug(900) << k_lineinfo << "Read line <" << more << ">" << endl;
             }
             
+ 	    if (d->m_useSudo && line != "Password:")
+ 		break;
+ 
 	    // Match "Password: " with the regex ^[^:]+:[\w]*$.
 	    for (i=0,j=0,colon=0; i<line.length(); i++) 
 	    {
@@ -252,6 +280,9 @@ int SuProcess::ConverseSU(const char *pa
 	}
 
 	case HandleStub:
+ 	    if (d->m_useSudo && line == "Password:")
+ 		return -1;
+ 
 	    // Read till we get "kdesu_stub"
 	    if (line == "kdesu_stub")
 	    {
