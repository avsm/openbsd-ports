$OpenBSD: patch-t_handle_external_10_destroy_t,v 1.1 2008/04/26 16:37:33 bluhm Exp $
--- t/handle/external/10_destroy.t.orig	Tue Jul  3 15:53:43 2007
+++ t/handle/external/10_destroy.t	Sat Sep 29 13:41:51 2007
@@ -10,7 +10,7 @@ my @uris = qw(
         perldition.org
 );
 
-plan tests => scalar @uris * 2;
+plan tests => scalar @uris * 3;
 
 use File::Spec;
 use Symbol qw(gensym);
@@ -27,17 +27,25 @@ for my $uri (@uris) {
 my $fdcount_start = count_fds();
 
 for my $uri (@uris) {
-    {
-        my $ssl = gensym();
-        tie(*$ssl, "Net::SSLeay::Handle", $uri, 443);
-        print $ssl "GET / HTTP/1.0\r\n\r\n";
+    SKIP: {
+	{
+	    my $ssl = gensym();
+	    eval {
+		tie(*$ssl, "Net::SSLeay::Handle", $uri, 443);
+	    };
 
-        my $response = do { local $/ = undef; <$ssl> };
-        like( $response, qr/^HTTP\/1/s, 'correct response' );
-    }
+	    skip('could not connect', 3) if $@;
+	    pass('connection');
 
-    my $fdcount_end = count_fds();
-    is ($fdcount_end, $fdcount_start, 'handle gets destroyed when it goes out of scope');
+	    print $ssl "GET / HTTP/1.0\r\n\r\n";
+
+	    my $response = do { local $/ = undef; <$ssl> };
+	    like( $response, qr/^HTTP\/1/s, 'correct response' );
+	}
+
+	my $fdcount_end = count_fds();
+	is ($fdcount_end, $fdcount_start, 'handle gets destroyed when it goes out of scope');
+    }
 }
 
 sub count_fds {
