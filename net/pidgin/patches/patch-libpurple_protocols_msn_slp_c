$OpenBSD: patch-libpurple_protocols_msn_slp_c,v 1.1 2010/01/05 07:19:49 jasper Exp $

Security fix for SA37953:
Pidgin MSN Custom Smileys File Disclosure Vulnerability

Patch from upstream revisions:
4be2df4f72bd8a55cdae7f2554b73342a497c92f
3d02401cf232459fc80c0837d31e05fae7ae5467
c64a1adc8bda2b4aeaae1f273541afbc4f71b810

--- libpurple/protocols/msn/slp.c.orig	Mon Jan  4 16:31:26 2010
+++ libpurple/protocols/msn/slp.c	Mon Jan  4 16:43:37 2010
@@ -238,6 +238,38 @@ send_decline(MsnSlpCall *slpcall, const char *branch,
 	msn_slplink_queue_slpmsg(slplink, slpmsg);
 }
 
+/* XXX: this could be improved if we tracked custom smileys
+ * per-protocol, per-account, per-session or (ideally) per-conversation
+ */
+static PurpleStoredImage *
+find_valid_emoticon(PurpleAccount *account, const char *path)
+{
+       GList *smileys;
+
+       if (!purple_account_get_bool(account, "custom_smileys", TRUE))
+	       return NULL;
+
+       smileys = purple_smileys_get_all();
+
+       for (; smileys; smileys = g_list_delete_link(smileys, smileys)) {
+	       PurpleSmiley *smiley;
+	       PurpleStoredImage *img;
+
+	       smiley = smileys->data;
+	       img = purple_smiley_get_stored_image(smiley);
+
+	       if (purple_strequal(path, purple_imgstore_get_filename(img))) {
+		       g_list_free(smileys);
+		       return img;
+	       }
+
+	       purple_imgstore_unref(img);
+       }
+
+       purple_debug_error("msn", "Received illegal request for file %s\n", path);
+       return NULL;
+}
+
 #define MAX_FILE_NAME_LEN 0x226
 
 static void
@@ -255,7 +287,7 @@ got_sessionreq(MsnSlpCall *slpcall, const char *branch
 		MsnSlpMessage *slpmsg;
 		MsnObject *obj;
 		char *msnobj_data;
-		PurpleStoredImage *img;
+		PurpleStoredImage *img = NULL;
 		int type;
 
 		/* Send Ok */
@@ -274,50 +306,38 @@ got_sessionreq(MsnSlpCall *slpcall, const char *branch
 		type = msn_object_get_type(obj);
 		g_free(msnobj_data);
 
-		if ((type != MSN_OBJECT_USERTILE) && (type != MSN_OBJECT_EMOTICON))
-		{
-			purple_debug_error("msn", "Wrong object?\n");
-			msn_object_destroy(obj);
-			g_return_if_reached();
-		}
-
 		if (type == MSN_OBJECT_EMOTICON) {
-			char *path;
-			path = g_build_filename(purple_smileys_get_storing_dir(),
-					obj->location, NULL);
-			img = purple_imgstore_new_from_file(path);
-			g_free(path);
-		} else {
+			img = find_valid_emoticon(slplink->session->account, obj->location);
+		} else if (type == MSN_OBJECT_USERTILE) {
 			img = msn_object_get_image(obj);
 			if (img)
 				purple_imgstore_ref(img);
 		}
 		msn_object_destroy(obj);
 
-		if (img == NULL)
-		{
+		if (img != NULL) {
+			/* DATA PREP */
+			slpmsg = msn_slpmsg_new(slplink);
+			slpmsg->slpcall = slpcall;
+			slpmsg->session_id = slpcall->session_id;
+			msn_slpmsg_set_body(slpmsg, NULL, 4);
+			slpmsg->info = "SLP DATA PREP";
+			msn_slplink_queue_slpmsg(slplink, slpmsg);
+
+			/* DATA */
+			slpmsg = msn_slpmsg_new(slplink);
+			slpmsg->slpcall = slpcall;
+			slpmsg->flags = 0x20;
+			slpmsg->info = "SLP DATA";
+			msn_slpmsg_set_image(slpmsg, img);
+			msn_slplink_queue_slpmsg(slplink, slpmsg);
+			purple_imgstore_unref(img);
+
+			accepted = TRUE;
+		} else {
 			purple_debug_error("msn", "Wrong object.\n");
-			g_return_if_reached();
 		}
 
-		/* DATA PREP */
-		slpmsg = msn_slpmsg_new(slplink);
-		slpmsg->slpcall = slpcall;
-		slpmsg->session_id = slpcall->session_id;
-		msn_slpmsg_set_body(slpmsg, NULL, 4);
-		slpmsg->info = "SLP DATA PREP";
-		msn_slplink_queue_slpmsg(slplink, slpmsg);
-
-		/* DATA */
-		slpmsg = msn_slpmsg_new(slplink);
-		slpmsg->slpcall = slpcall;
-		slpmsg->flags = 0x20;
-		slpmsg->info = "SLP DATA";
-		msn_slpmsg_set_image(slpmsg, img);
-		msn_slplink_queue_slpmsg(slplink, slpmsg);
-		purple_imgstore_unref(img);
-
-		accepted = TRUE;
 	}
 
 	else if (!strcmp(euf_guid, MSN_FT_GUID))
