#!/usr/bin/perl

# $OpenBSD: check-package-lists,v 1.1 2001/05/05 22:51:32 espie Exp $
# Copyright (c) 2001
# Marc Espie.  All rights reserved.
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Neither the name of OpenBSD nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY ITS AUTHOR AND THE OpenBSD project ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.

# do extensive checks of package lists.
# Usage: check-package-lists plistdir packagedir arch1 ...

# - verify that the p list ordering is consistent with dependencies.
# - check that all packages are marked cd-rom'able.


sub analyze {
	my $fh = shift;
	my $main = shift;
	my $known = shift;
	local $_;
	while (<$fh>) {
		chomp;
		if (m/^\@comment\s.*cdrom=(\S+)/) {
			if ($1 ne "yes") {
				printf "Broken: $main (not for cd)\n";
			}
		}
		if (m/^\@newdepend\s+(\S*)\s*$/) {
			my ($blorf, $blech,  $pkgname) = split(/:/, $1);
			if ($known->{"$pkgname.tgz"}) {
				print "$main -> $pkgname\n";
			} else {
				print "Broken: $main -> $pkgname\n";
			}
		}
	}
}

my $pbase=shift;
my $packagebase=shift;

for my $arch (@ARGV) {
    open(LIST, "$pbase/$arch") or die "Problem\n";

    while (<LIST>) {
	    chomp;
	    next if m/^\#/;
	    my $pkgname = $_;
	    $known{$pkgname} = 1;
	    print STDERR "$pkgname\n";
	    system "tar zxqf $packagebase/$arch/$pkgname +CONTENTS";
	    if (open(my $fh, '<+CONTENTS')) {
		analyze($fh, $pkgname, \%known);
		unlink("+CONTENTS");
	    } else {
		warn "Problem with $pkgname";
	    }
    }

    close(LIST);
}
