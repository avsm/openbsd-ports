*** metamail.c.bak	Thu Feb 17 04:57:19 1994
--- metamail/metamail.c	Mon Nov 20 01:21:37 1995
***************
*** 83,89 ****
  #define MAX_FILE_NAME_SIZE 256
  #define WRITE_BINARY	"w"
  #else /* AMIGA */
! extern char **environ, *gets();
  #define CATCOMMAND  "cat"
  #define CATTEMPLATE "cat %s"
  #define METAMAIL    "metamail"
--- 83,89 ----
  #define MAX_FILE_NAME_SIZE 256
  #define WRITE_BINARY	"w"
  #else /* AMIGA */
! extern char **environ;
  #define CATCOMMAND  "cat"
  #define CATTEMPLATE "cat %s"
  #define METAMAIL    "metamail"
***************
*** 579,585 ****
                                  int overwriteans = -1;
                                  do {
                                      printf("File %s exists.  Do you want to overwrite it (y/n) ?\n", Fname);
!                                     s = gets(AnsBuf);
                                      if (!s) {
                                          overwriteans = 0;
                                      } else {
--- 579,585 ----
                                  int overwriteans = -1;
                                  do {
                                      printf("File %s exists.  Do you want to overwrite it (y/n) ?\n", Fname);
! 				    s = fgets(AnsBuf, sizeof(AnsBuf), stdin);
                                      if (!s) {
                                          overwriteans = 0;
                                      } else {
***************
*** 1823,1829 ****
          } else {
              printf("This message contains '%s'-format data.\nDo you want to view it using the '%s' command (y/n) [y] ? ", ctype, ShortCommand(progname));
          }
!         s = gets(AnsBuf);
          if (!s) return(0); /* EOF */
  	while (s && *s && isspace((unsigned char) *s)) ++s;
  	if (*s == 'y' || *s == 'Y' || !*s || *s == '\n') return(1);
--- 1823,1829 ----
          } else {
              printf("This message contains '%s'-format data.\nDo you want to view it using the '%s' command (y/n) [y] ? ", ctype, ShortCommand(progname));
          }
! 	s = fgets(AnsBuf, sizeof(AnsBuf), stdin);
          if (!s) return(0); /* EOF */
  	while (s && *s && isspace((unsigned char) *s)) ++s;
  	if (*s == 'y' || *s == 'Y' || !*s || *s == '\n') return(1);
