--- configs/openbsd-g++-shared.orig	Wed Nov  8 18:06:37 2000
+++ configs/openbsd-g++-shared	Tue Nov 21 10:32:18 2000
@@ -1,13 +1,13 @@
 # Compiling
 INTERFACE_DECL_PATH 	= .
-SYSCONF_CXX		= g++
+SYSCONF_CXX		= $(SYS_CXX)
 SYSCONF_CC		= gcc
 DASHCROSS		= 
 
 # Compiling with support libraries
-SYSCONF_CXXFLAGS_X11	= -I/usr/X11R6/include
+SYSCONF_CXXFLAGS_X11	= -I/usr/X11R6/include -I/usr/local/include
 SYSCONF_CXXFLAGS_QT	= -I$(QTDIR)/include
-SYSCONF_CXXFLAGS_OPENGL	= -I/usr/X11R6/include
+SYSCONF_CXXFLAGS_OPENGL	= -I/usr/local/include -I/usr/X11R6/include
 
 # Compiling YACC output
 SYSCONF_CXXFLAGS_YACC     = -Wno-unused -Wno-parentheses
@@ -19,30 +19,30 @@ SYSCONF_RPATH_OPENGL	= 
 
 # Linking with support libraries
 # X11
-SYSCONF_LFLAGS_X11	= -L/usr/X11R6/lib
+SYSCONF_LFLAGS_X11	= -L/usr/X11R6/lib -L$(QTDIR)/lib -L/usr/local/lib
 SYSCONF_LIBS_X11	= -lXext -lX11 -lm
 # Qt, Qt+OpenGL
 SYSCONF_LFLAGS_QT	= -L$(QTDIR)/lib
 SYSCONF_LIBS_QT		= -lqt$(QT_THREAD_SUFFIX)
 SYSCONF_LIBS_QT_OPENGL	= 
 # OpenGL
-SYSCONF_LFLAGS_OPENGL	= -L/usr/X11R6/lib
+SYSCONF_LFLAGS_OPENGL	= -L$(QTDIR)/lib -L/usr/local/lib -L/usr/X11R6/lib
 SYSCONF_LIBS_OPENGL	= -lGLU -lGL -lXmu
 # Yacc
 SYSCONF_LIBS_YACC	= 
 
 # Linking applications
-SYSCONF_LINK		= g++
-SYSCONF_LFLAGS		= 
-SYSCONF_LIBS		= 
+SYSCONF_LINK		= $(SYS_CXX)
+SYSCONF_LFLAGS		= -L/usr/X11R6/lib -L$(QTDIR)/lib -L/usr/local/lib
+SYSCONF_LIBS		= -lz
 
 # Link flags for shared objects
-SYSCONF_LFLAGS_SHOBJ	= -Bshareable
+SYSCONF_LFLAGS_SHOBJ	= -shared -fPIC
 
 # Flags for threading
-SYSCONF_CFLAGS_THREAD	= 
-SYSCONF_CXXFLAGS_THREAD	= 
-SYSCONF_LFLAGS_THREAD	= 
+SYSCONF_CFLAGS_THREAD	= -pthread
+SYSCONF_CXXFLAGS_THREAD	= -pthread
+SYSCONF_LFLAGS_THREAD	= -pthread
 # SYSCONF_LIBS_THREAD	= ???
 
 # Meta-object compiler
@@ -56,9 +56,9 @@ SYSCONF_UIC		= $(QTDIR)/bin/uic
 #   - Place target in $(DESTDIR) - which has a trailing /
 #   - Usually needs to incorporate $(VER_MAJ), $(VER_MIN) and $(VER_PATCH)
 #
-SYSCONF_LINK_SHLIB	= ld
+SYSCONF_LINK_SHLIB	= $(SYS_CXX) -shared -fPIC
 SYSCONF_LINK_TARGET_SHARED	= lib$(TARGET).so.$(VER_MAJ).$(VER_MIN).$(VER_PATCH)
-SYSCONF_LINK_LIB_SHARED	= $(SYSCONF_LINK_SHLIB) -Bshareable $(LFLAGS) -o $(DESTDIR)$(SYSCONF_LINK_TARGET_SHARED) `lorder /usr/lib/c++rt0.o $(OBJECTS) $(OBJMOC) | tsort` $(LIBS)
+SYSCONF_LINK_LIB_SHARED	= $(SYSCONF_LINK_SHLIB) $(LFLAGS) -o $(DESTDIR)$(SYSCONF_LINK_TARGET_SHARED) $(OBJECTS) $(OBJMOC) $(LIBS)
 
 # Linking static libraries
 #   - Build the $(TARGET) library, eg. lib$(TARGET).a
@@ -70,7 +70,7 @@ SYSCONF_LINK_LIB_STATIC	= rm -f $(DESTDI
 				 $(SYSCONF_AR) $(DESTDIR)$(SYSCONF_LINK_TARGET_STATIC) $(OBJECTS) $(OBJMOC) ; \
 				 ranlib $(DESTDIR)$(SYSCONF_LINK_TARGET_STATIC)
 # Compiling application source
-SYSCONF_CXXFLAGS	= -O2
+SYSCONF_CXXFLAGS	= $(SYS_CXXFLAGS)
 SYSCONF_CFLAGS		= -O2
 # Default link type (static linking is still be used where required)
 SYSCONF_LINK_LIB	= $(SYSCONF_LINK_LIB_SHARED)
