$OpenBSD: patch-src_ck-sysdeps-unix_c,v 1.4 2010/06/28 15:55:21 ajacoutot Exp $
--- src/ck-sysdeps-unix.c.orig	Wed Apr 29 21:07:29 2009
+++ src/ck-sysdeps-unix.c	Mon Jun 28 16:36:43 2010
@@ -35,6 +35,11 @@
 #include <linux/kd.h>
 #endif
 
+#if defined(__OpenBSD__)
+#include <dev/wscons/wsdisplay_usl_io.h>
+#include <sys/un.h>
+#endif
+
 #ifdef HAVE_SYS_VT_H
 #include <sys/vt.h>
 #endif
@@ -99,6 +104,17 @@ ck_get_socket_peer_credentials   (int      socket_fd,
         if (ucred != NULL) {
                 ucred_free (ucred);
         }
+#elif defined(__OpenBSD__)
+	uid_t euid;
+	gid_t egid;
+	if (getpeereid (socket_fd, &euid, &egid) == 0) {
+		pid_read = getpid();
+		uid_read = euid;
+		ret = TRUE;
+	} else {
+		g_warning ("Failed to getpeereid() credentials: %s\n",
+                           g_strerror (errno));
+	}
 #else /* !SO_PEERCRED && !HAVE_GETPEERUCRED */
         g_warning ("Socket credentials not supported on this OS\n");
 #endif
@@ -126,7 +142,7 @@ ck_get_socket_peer_credentials   (int      socket_fd,
 gboolean
 ck_fd_is_a_console (int fd)
 {
-#ifdef __linux__
+#if defined(__linux__) || defined(__OpenBSD__)
         struct vt_stat vts;
 #elif defined(__FreeBSD__)
         int vers;
@@ -134,7 +150,7 @@ ck_fd_is_a_console (int fd)
         int  kb_ok;
 
         errno = 0;
-#ifdef __linux__
+#if defined(__linux__) || defined(__OpenBSD__)
         kb_ok = (ioctl (fd, VT_GETSTATE, &vts) == 0);
 #elif defined(__FreeBSD__)
         kb_ok = (ioctl (fd, CONS_GETVERS, &vers) == 0);
@@ -182,6 +198,13 @@ ck_get_a_console_fd (void)
         if (fd >= 0) {
                 goto done;
         }
+#endif
+
+#if defined(__OpenBSD__)
+	fd = open_a_console ("/dev/ttyC0");
+	if (fd >= 0) {
+		goto done;
+	}
 #endif
 
 #ifdef _PATH_TTY
