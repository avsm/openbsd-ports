$OpenBSD: patch-contrib_scripts_safe_asterisk,v 1.10 2010/03/25 12:01:47 sthen Exp $

- more useful defaults
- create /var/run/asterisk with sane ownership/perms
- shell portability fix (s/function//)
- use pkill, it's slightly less unportable than killall

--- contrib/scripts/safe_asterisk.orig	Tue Jan 12 03:24:05 2010
+++ contrib/scripts/safe_asterisk	Thu Mar 25 11:47:50 2010
@@ -2,9 +2,9 @@
 # vim:textwidth=80:tabstop=4:shiftwidth=4:smartindent:autoindent
 
 CLIARGS="$*"				# Grab any args passed to safe_asterisk
-TTY=9						# TTY (if you want one) for Asterisk to run on
-CONSOLE=yes					# Whether or not you want a console
-#NOTIFY=ben@alkaloid.net	# Who to notify about crashes
+TTY=""						# TTY (if you want one) for Asterisk to run on
+CONSOLE=no					# Whether or not you want a console
+NOTIFY=root					# Who to notify about crashes
 #EXEC=/path/to/somescript	# Run this command if Asterisk crashes
 #LOGFILE=/path/to/logfile	# Where to place the normal logfile (disabled if blank)
 #SYSLOG=local0				# Which syslog facility to use (disabled if blank)
@@ -13,10 +13,11 @@ DUMPDROP=/tmp
 SLEEPSECS=4
 ASTSBINDIR=__ASTERISK_SBIN_DIR__
 ASTPIDFILE=__ASTERISK_VARRUN_DIR__/asterisk.pid
+VARRUNOWNER="_asterisk:wheel"	# chown __ASTERISK_VARRUN_DIR__ if it's created.
 
-# comment this line out to have this script _not_ kill all mpg123 processes when
+# uncomment this line to have this script kill all mpg123 processes when
 # asterisk exits
-KILLALLMPG123=1
+# KILLALLMPG123=1
 
 # run asterisk with this priority
 PRIORITY=0
@@ -32,7 +33,7 @@ PRIORITY=0
 # set to the system's maximum files open devided by two, if not set here.
 # MAXFILES=32768
 
-function message() {
+message() {
 	echo "$1" >&2
 	if test "x$SYSLOG" != "x" ; then
 	    logger -p "${SYSLOG}.warn" -t safe_asterisk[$$] "$1"
@@ -42,6 +43,19 @@ function message() {
 	fi
 }
 
+# Create the directory for the control socket if required. As of 1.6.0.26,
+# Asterisk tries to create this itself at startup but doesn't give suitable
+# ownership. This must be created before the 'check if asterisk is already
+# running' below, since that is enough to get the dir created.
+if test `id -u` == 0 ; then
+	varrundir=`dirname $ASTPIDFILE`
+	if [ ! -d $varrundir ]; then
+		mkdir -p $varrundir
+		[ -n "$VARRUNOWNER" ] && chown $VARRUNOWNER $varrundir
+		chmod 770 $varrundir
+	fi
+fi
+
 # Check if Asterisk is already running.  If it is, then bug out, because
 # starting safe_asterisk when Asterisk is running is very bad.
 VERSION=`${ASTSBINDIR}/asterisk -rx 'core show version'`
@@ -186,7 +200,7 @@ run_asterisk()
 		message "Automatically restarting Asterisk."
 		sleep $SLEEPSECS
 		if test "0$KILLALLMPG123" -gt "0" ; then
-			killall -9 mpg123
+			pkill -9 mpg123
 		fi
 	done
 }
