$OpenBSD: patch-memory_memory_cc,v 1.1 2001/02/02 16:59:12 todd Exp $
--- memory/memory.cc.orig	Sat Mar 25 21:46:39 2000
+++ memory/memory.cc	Tue Oct 17 12:04:03 2000
@@ -170,7 +170,7 @@ inc_one:
     // adapter ROM     C0000 .. DFFFF
     // ROM BIOS memory E0000 .. FFFFF
     // (ignore write)
-    //bx_printf("ROM lock %08x: len=%u\n",
+    //bio->printf("ROM lock %08x: len=%u\n",
     //  (unsigned) a20addr, (unsigned) len);
 #if BX_PCI_SUPPORT == 0
 #if BX_SHADOW_RAM
@@ -187,7 +187,7 @@ inc_one:
         ((a20addr >= 0xC0000) && (a20addr <= 0xFFFFF))) {
       switch (bx_pci.wr_memType(a20addr & 0xFC000)) {
         case 0x0:   // Writes to ShadowRAM
-//        bx_printf ("Writing to ShadowRAM %08x, len %u ! \n", (unsigned) a20addr, (unsigned) len);
+//        bio->printf ("Writing to ShadowRAM %08x, len %u ! \n", (unsigned) a20addr, (unsigned) len);
           BX_MEM.vector[a20addr] = *data_ptr;
           BX_DBG_DIRTY_PAGE(a20addr >> 12);
           BX_DYN_DIRTY_PAGE(a20addr >> 12);
@@ -195,10 +195,10 @@ inc_one:
 
         case 0x1:   // Writes to ROM, Inhibit
 //        bx_pci.s.i440fx.shadow[(a20addr - 0xc0000)] = *data_ptr;
-//        bx_printf ("Writing to ROM %08x, Data %02x ! \n", (unsigned) a20addr, *data_ptr);
+//        bio->printf ("Writing to ROM %08x, Data %02x ! \n", (unsigned) a20addr, *data_ptr);
           goto inc_one;
         default:
-          bx_panic("write_physical: default case\n");
+          bio->panic("write_physical: default case\n");
           goto inc_one;
         }
       }
@@ -374,15 +374,15 @@ inc_one:
       switch (bx_pci.rd_memType(a20addr & 0xFC000)) {
         case 0x0:   // Read from ShadowRAM
           *data_ptr = BX_MEM.vector[a20addr];
-          bx_printf ("Reading from ShadowRAM %08x, Data %02x \n", (unsigned) a20addr, *data_ptr);
+          bio->printf ("Reading from ShadowRAM %08x, Data %02x \n", (unsigned) a20addr, *data_ptr);
           goto inc_one;
 
         case 0x1:   // Read from ROM
           *data_ptr = bx_pci.s.i440fx.shadow[(a20addr - 0xc0000)];
-          //bx_printf ("Reading from ROM %08x, Data %02x  \n", (unsigned) a20addr, *data_ptr);
+          //bio->printf ("Reading from ROM %08x, Data %02x  \n", (unsigned) a20addr, *data_ptr);
           goto inc_one;
         default:
-          bx_panic("::read_physical: default case\n");
+          bio->panic("::read_physical: default case\n");
         }
       }
     goto inc_one;
@@ -413,21 +413,21 @@ inc_one:
             switch (bx_pci.rd_memType(a20addr & 0xFC000)) {
               case 0x0:   // Read from ROM
                 *data_ptr = BX_MEM.vector[a20addr];
-                //bx_printf ("Reading from ROM %08x, Data %02x \n", (unsigned) a20addr, *data_ptr);
+                //bio->printf ("Reading from ROM %08x, Data %02x \n", (unsigned) a20addr, *data_ptr);
                 break;
 
               case 0x1:   // Read from Shadow RAM
                 *data_ptr = bx_pci.s.i440fx.shadow[(a20addr - 0xc0000)];
-                bx_printf ("Reading from ShadowRAM %08x, Data %02x  \n", (unsigned) a20addr, *data_ptr);
+                bio->printf ("Reading from ShadowRAM %08x, Data %02x  \n", (unsigned) a20addr, *data_ptr);
                 break;
               default:
-                bx_panic("read_physical: default case\n");
+                bio->panic("read_physical: default case\n");
               } // Switch
             }
           }
         else {
           *data_ptr = BX_MEM.vector[a20addr];
-          bx_printf ("Reading from Norm %08x, Data %02x  \n", (unsigned) a20addr, *data_ptr);
+          bio->printf ("Reading from Norm %08x, Data %02x  \n", (unsigned) a20addr, *data_ptr);
           }
         }
       else
