$OpenBSD: patch-alan_c,v 1.1 2008/08/21 05:20:53 ckuethe Exp $
--- alan.c.orig	Wed Jul  2 22:08:13 2008
+++ alan.c	Wed Jul  2 22:23:01 2008
@@ -228,68 +228,68 @@ static void rev_bytes(void *dword) {
 }
 
 static void swap_wpthdr(struct wpthdr *wpthdr,
-			void (*swap16)(void *), void (*swap32)(void *)) {
+			void (*swap16_func)(void *), void (*swap32_func)(void *)) {
   int i;
 
-  if ( swap32 != NULL ) {
-    swap32( &wpthdr->id );
+  if ( swap32_func != NULL ) {
+    swap32_func( &wpthdr->id );
   }
-  if ( swap16 != NULL ) {
-    swap16( &wpthdr->num );
-    swap16( &wpthdr->next );
+  if ( swap16_func != NULL ) {
+    swap16_func( &wpthdr->num );
+    swap16_func( &wpthdr->next );
     for (i=0; i<MAXWPT; i++)
-      swap16( &wpthdr->idx[i] );
+      swap16_func( &wpthdr->idx[i] );
   }
 }
 
 static void swap_wpt(struct wpt *wpt,
-		     void (*swap16)(void *), void (*swap32)(void *)) {
-  if ( swap16 != NULL ) {
-    swap16( &wpt->usecount );
+		     void (*swap16_func)(void *), void (*swap32_func)(void *)) {
+  if ( swap16_func != NULL ) {
+    swap16_func( &wpt->usecount );
   }
-  if ( swap32 != NULL ) {
-    swap32( &wpt->pt.x );
-    swap32( &wpt->pt.y );
-    swap32( &wpt->date );
-    swap32( &wpt->time );
+  if ( swap32_func != NULL ) {
+    swap32_func( &wpt->pt.x );
+    swap32_func( &wpt->pt.y );
+    swap32_func( &wpt->date );
+    swap32_func( &wpt->time );
   }
 }
 
 static void swap_rtehdr(struct rtehdr *rtehdr,
-			void (*swap16)(void *), void (*swap32)(void *)) {
+			void (*swap16_func)(void *), void (*swap32_func)(void *)) {
   int i;
 
-  if ( swap16 != NULL) {
-    swap16( &rtehdr->num );
-    swap16( &rtehdr->next );
+  if ( swap16_func != NULL) {
+    swap16_func( &rtehdr->num );
+    swap16_func( &rtehdr->next );
     for (i=0; i<MAXRTE; i++)
-      swap16( &rtehdr->idx[i] );
-    swap16( &rtehdr->rteno );
+      swap16_func( &rtehdr->idx[i] );
+    swap16_func( &rtehdr->rteno );
   }
-  if ( swap32 != NULL ) {
-    swap32( &rtehdr->id );
+  if ( swap32_func != NULL ) {
+    swap32_func( &rtehdr->id );
   }
 }
 
 static void swap_rte(struct rte *rte,
-		     void (*swap16)(void *), void (*swap32)(void *)) {
+		     void (*swap16_func)(void *), void (*swap32_func)(void *)) {
   int i;
 
-  if (swap16 != NULL) {
-    swap16( &rte->wptnum );
+  if (swap16_func != NULL) {
+    swap16_func( &rte->wptnum );
     for (i=0; i<MAXWPTINRTE; i++)
-      swap16( &rte->wptidx[i] );
-    swap16( &rte->reserved );
+      swap16_func( &rte->wptidx[i] );
+    swap16_func( &rte->reserved );
   }
-  if ( swap32 != NULL ) {
-    swap32( &rte->date );
-    swap32( &rte->time );
+  if ( swap32_func != NULL ) {
+    swap32_func( &rte->date );
+    swap32_func( &rte->time );
   }
 }
 
 static void wpr_swap(struct wprdata *wprdata) {
-  void (*swap16)(void *);
-  void (*swap32)(void *);
+  void (*swap16_func)(void *);
+  void (*swap32_func)(void *);
   int i;
 
   switch( byte_order() ) {
@@ -297,80 +297,80 @@ static void wpr_swap(struct wprdata *wprdata) {
     return;
     break;
   case SWAP_BOTH:		   /* swap words and bytes, BIG_ENDIAN */
-    swap16 = sw_bytes;
-    swap32 = rev_bytes;
+    swap16_func = sw_bytes;
+    swap32_func = rev_bytes;
     break;
   case SWAP_WORDS:		   /* swap words, PDP_ENDIAN */
-    swap16 = NULL;
-    swap32 = sw_words;
+    swap16_func = NULL;
+    swap32_func = sw_words;
     break;
   case SWAP_BYTES:		   /* swap bytes */
-    swap16 = sw_bytes;
-    swap32 = NULL;
+    swap16_func = sw_bytes;
+    swap32_func = NULL;
     break;
   default:
     return;			   /* never reached */
   }
   
-  swap_wpthdr( &(wprdata->wpthdr), swap16, swap32 );
+  swap_wpthdr( &(wprdata->wpthdr), swap16_func, swap32_func );
   for (i=0; i< MAXWPT; i++)
-    swap_wpt( &(wprdata->wpt[i]), swap16, swap32 );
-  swap_rtehdr( &(wprdata->rtehdr), swap16, swap32 );
+    swap_wpt( &(wprdata->wpt[i]), swap16_func, swap32_func );
+  swap_rtehdr( &(wprdata->rtehdr), swap16_func, swap32_func );
   for (i=0; i<MAXRTE; i++)
-    swap_rte( &(wprdata->rte[i]), swap16, swap32 );
+    swap_rte( &(wprdata->rte[i]), swap16_func, swap32_func );
 }
 
 static void swap_trkhdr(struct trkhdr *trkhdr,
-			void (*swap16)(void *), void (*swap32)(void *)) {
-  if ( swap16 != NULL ) {
-    swap16( &(trkhdr->totalpt) );
-    swap16( &(trkhdr->next) );
+			void (*swap16_func)(void *), void (*swap32_func)(void *)) {
+  if ( swap16_func != NULL ) {
+    swap16_func( &(trkhdr->totalpt) );
+    swap16_func( &(trkhdr->next) );
   }
-  if ( swap32 != NULL ) {
-    swap32( &(trkhdr->occupied) );
-    swap32( &(trkhdr->show) );
-    swap32( &(trkhdr->fill) );
+  if ( swap32_func != NULL ) {
+    swap32_func( &(trkhdr->occupied) );
+    swap32_func( &(trkhdr->show) );
+    swap32_func( &(trkhdr->fill) );
   }
 }
 
 static void swap_loghdr(struct loghdr *loghdr,
-			void (*swap16)(void *), void (*swap32)(void *)) {
+			void (*swap16_func)(void *), void (*swap32_func)(void *)) {
   int i;
 
-  if ( swap16 != NULL ) {
-    swap16( &(loghdr->num) );
-    swap16( &(loghdr->next) );
+  if ( swap16_func != NULL ) {
+    swap16_func( &(loghdr->num) );
+    swap16_func( &(loghdr->next) );
   }
-  if ( swap32 != NULL ) {
-    swap32( &(loghdr->id) );
-    swap32( &(loghdr->date) );
-    swap32( &(loghdr->time) );
+  if ( swap32_func != NULL ) {
+    swap32_func( &(loghdr->id) );
+    swap32_func( &(loghdr->date) );
+    swap32_func( &(loghdr->time) );
   }
   for (i=0; i<MAXTRK; i++)
-    swap_trkhdr( &(loghdr->trkhdr[i]), swap16, swap32 );
+    swap_trkhdr( &(loghdr->trkhdr[i]), swap16_func, swap32_func );
 }
 
 static void swap_trklog(struct trklog *trklog,
-			void (*swap16)(void *), void (*swap32)(void *)) {
+			void (*swap16_func)(void *), void (*swap32_func)(void *)) {
   int i;
 
-  if ( swap16 != NULL ) {
+  if ( swap16_func != NULL ) {
     for (i=0; i<MAXPTINTRK; i++) {
-      swap16( &(trklog->sh[i].speed) );
-      swap16( &(trklog->sh[i].height) );
+      swap16_func( &(trklog->sh[i].speed) );
+      swap16_func( &(trklog->sh[i].height) );
     }
   }
-  if ( swap32 != NULL ) {
+  if ( swap32_func != NULL ) {
     for (i=0; i<MAXPTINTRK; i++) {
-      swap32( &(trklog->pt[i].x) );
-      swap32( &(trklog->pt[i].y) );
+      swap32_func( &(trklog->pt[i].x) );
+      swap32_func( &(trklog->pt[i].y) );
     }
   }
 }
 
 static void trl_swap(struct trldata *trldata) {
-  void (*swap16)(void *);
-  void (*swap32)(void *);
+  void (*swap16_func)(void *);
+  void (*swap32_func)(void *);
   int i;
 
   switch( byte_order() ) {
@@ -378,24 +378,24 @@ static void trl_swap(struct trldata *trldata) {
     return;
     break;
   case SWAP_BOTH:		   /* swap words and bytes, BIG_ENDIAN */
-    swap16 = sw_bytes;
-    swap32 = rev_bytes;
+    swap16_func = sw_bytes;
+    swap32_func = rev_bytes;
     break;
   case SWAP_WORDS:		   /* swap words, PDP_ENDIAN */
-    swap16 = NULL;
-    swap32 = sw_words;
+    swap16_func = NULL;
+    swap32_func = sw_words;
     break;
   case SWAP_BYTES:		   /* swap bytes */
-    swap16 = sw_bytes;
-    swap32 = NULL;
+    swap16_func = sw_bytes;
+    swap32_func = NULL;
     break;
   default:
     return;                        /* never reached */
   }
 
-  swap_loghdr( &(trldata->loghdr), swap16, swap32);
+  swap_loghdr( &(trldata->loghdr), swap16_func, swap32_func);
   for (i=0; i<MAXTRK; i++)
-    swap_trklog( &(trldata->trklog[i]), swap16, swap32);
+    swap_trklog( &(trldata->trklog[i]), swap16_func, swap32_func);
 }
 
 
