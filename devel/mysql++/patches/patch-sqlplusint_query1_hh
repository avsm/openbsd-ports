$OpenBSD: patch-sqlplusint_query1_hh,v 1.2 2004/01/06 11:16:53 wilfried Exp $
--- sqlplusint/query1.hh.orig	2001-05-19 18:44:48.000000000 +0200
+++ sqlplusint/query1.hh	2004-01-04 23:31:02.000000000 +0100
@@ -25,24 +25,24 @@ private:
 
   int     affected_rows() const;
   int     insert_id ();
-  string  info ();
+  std::string  info ();
   bool    lock();
   void    unlock();
 
 public:
   Query(Connection *m, bool te = false) 
-    {mysql = m;errmsg=NULL;Success = true;throw_exceptions=te;} 
+    {mysql = m;errmsg=NULL;Success_ = true;throw_exceptions=te;} 
   //: Create a new query object attached to a connection.
   Query(const Query &q); //:
   Query& operator = (const Query &q); //:
 
-  string   error ();  //: The error message if the query was not successful.
+  std::string   error ();  //: The error message if the query was not successful.
   bool     success(); //: Displays the string currently in the buffer.
   // Same thing as string().
 
-  string   preview () {return str(def);}       //:
-  string   preview (parms &p) {return str(p);} //:
-	bool     exec (const string &str);
+  std::string   preview () {return str(def);}       //:
+  std::string   preview (parms &p) {return str(p);} //:
+	bool     exec (const std::string &str);
   //!dummy: MysqlResNSel execute (...);
   //: Executes the query in the string buffer.
   // Executes the query in the string buffer and returns a structure
@@ -67,7 +67,7 @@ public:
   //
   // The parameters can be anything in a valid SQLQuery::str.
 
-  mysql_query_define0(string,preview)
+  mysql_query_define0(std::string,preview)
 
   mysql_query_define1(ResNSel, execute)
   mysql_query_define1(ResUse, use)
