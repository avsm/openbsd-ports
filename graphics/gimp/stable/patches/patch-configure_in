$OpenBSD: patch-configure_in,v 1.9 2010/07/08 16:16:51 giovanni Exp $
--- configure.in.orig	Mon Jun 21 21:20:20 2010
+++ configure.in	Fri Jun 25 18:47:26 2010
@@ -421,14 +421,7 @@ AM_GLIB_GNU_GETTEXT
 ###########
 
 AC_MSG_CHECKING([for iso-codes])
-PKG_CHECK_EXISTS(iso-codes,
-  have_iso_codes="yes"
-  AC_DEFINE(HAVE_ISO_CODES, 1,
-  	    [Define to 1 if the iso-codes package is available])
-  ISO_CODES_PREFIX=`$PKG_CONFIG --variable=prefix iso-codes`   
-  ISO_CODES_LOCATION="$ISO_CODES_PREFIX/share/xml/iso-codes"
-  ISO_CODES_LOCALEDIR="$ISO_CODES_PREFIX/$DATADIRNAME/locale",
-  have_iso_codes="no (iso-codes package not found)")
+  have_iso_codes="no (iso-codes package not found)"
 AC_MSG_RESULT($have_iso_codes)
 
 AC_SUBST(ISO_CODES_LOCATION)
@@ -569,7 +562,8 @@ AC_TRY_RUN([#include <math.h>
 AC_CHECK_FUNCS(finite, , [
   AC_MSG_CHECKING(for finite in <math.h>)
   AC_TRY_LINK([#include <math.h>], [double f = 0.0; finite (f)], [
-    AC_DEFINE(HAVE_FINITE, 1)
+    AC_DEFINE(HAVE_FINITE, 1,
+                [Define to 1 if you have the finite function.])
     AC_MSG_RESULT(yes)], [
     AC_MSG_RESULT(no)
     AC_MSG_CHECKING(for isfinite in <math.h>)
@@ -1143,10 +1137,10 @@ if test "x$with_libmng" != xno && test -z "$MNG_LIBS" 
    test -n "$PNG_LIBS" && test -n "$JPEG_LIBS" && test -n "$Z_LIBS"; then
   AC_CHECK_LIB(mng, mng_create,
     [AC_CHECK_HEADER(libmng.h, mng_ok=yes)],
-    [have_libmng="no (MNG library not found)"], -lz -lm)
+    [have_libmng="no (MNG library not found)"], -lz -lm -llcms -ljpeg )
   if test "$mng_ok" = yes; then
     have_libmng=yes
-    FILE_MNG='file-mng$(EXEEXT)'; MNG_LIBS="-lmng $JPEG_LIBS $PNG_LIBS"
+    FILE_MNG='file-mng$(EXEEXT)'; MNG_LIBS="-lmng -llcms $JPEG_LIBS $PNG_LIBS"
   else
     have_libmng="no (MNG header file not found)"
   fi
@@ -1325,19 +1319,9 @@ if test "x$with_gnomevfs" != xno; then
 
 gnome_vfs_modules="gnome-vfs-2.0 >= gnome_vfs_required_version"
 
-if $PKG_CONFIG --atleast-version=gnomeui_required_version libgnomeui-2.0; then
-  have_gnomeui=yes
-  gnome_vfs_modules="$gnome_vfs_modules libgnomeui-2.0"
-else
   have_gnomeui="no (libgnomeui-2.0 not found)"
-fi
 
-if $PKG_CONFIG --atleast-version=gnome_keyring_required_version gnome-keyring-1; then
-  have_gnome_keyring=yes
-  gnome_vfs_modules="$gnome_vfs_modules gnome-keyring-1"
-else
   have_gnome_keyring="no (gnome-keyring-1 not found)"
-fi
 
 PKG_CHECK_MODULES(GNOME_VFS, $gnome_vfs_modules,
   have_gnomevfs=yes,
