$OpenBSD: patch-sqlplusint_field_types1_hh,v 1.1 2004/01/06 11:16:53 wilfried Exp $
--- sqlplusint/field_types1.hh.orig	2001-05-19 18:44:48.000000000 +0200
+++ sqlplusint/field_types1.hh	2004-01-04 23:27:18.000000000 +0100
@@ -1,19 +1,21 @@
 #ifndef __field_types1_hh__
 #define __field_types1_hh__
 
-#include <vector.h>
+#include <vector>
 #include "defs"
 #include "define_short"
 #include "type_info1.hh"
 
+//using namespace std;
+
 //: A vector of the field types.
-class FieldTypes : public vector<mysql_type_info> {
+class FieldTypes : public std::vector<mysql_type_info> {
 private:
   void init (const ResUse *res);
 public:
   FieldTypes () {}
   FieldTypes (const ResUse *res) {init(res);}
-  FieldTypes (int i) : vector<mysql_type_info>(i) {}
+  FieldTypes (int i) : std::vector<mysql_type_info>(i) {}
 
   FieldTypes& operator = (const ResUse *res) {init(res); return *this;}
   //: Creates a new list based on the info in res
@@ -21,11 +23,11 @@ public:
 					 mysql_type_info()); return *this;}
   //: Creates a new list with i fields. 
   
-  mysql_type_info&  operator [] (int i) {return vector<mysql_type_info>
+    mysql_type_info&  operator [] (int i) {return std::vector<mysql_type_info>
 				  ::operator [] (i);}
   //: Returns the field type for the field with an offset of i.
   const mysql_type_info&  operator [] (int i) const 
-    {return vector<mysql_type_info>::operator[] (i);}
+  {return std::vector<mysql_type_info>::operator[] (i);}
   //: Returns the field type for the field with an offset of i.
 };
 
