$OpenBSD: patch-engines_simon_simon_cpp,v 1.2 2006/11/02 07:48:59 jsg Exp $
--- engines/simon/simon.cpp.orig	Mon Oct 23 06:58:08 2006
+++ engines/simon/simon.cpp	Wed Nov  1 15:28:02 2006
@@ -97,10 +97,6 @@ SimonEngine::SimonEngine(OSystem *syst)
 	_itemArraySize = 0;
 	_itemArrayInited = 0;
 
-	_itemHeapPtr = 0;
-	_itemHeapCurPos = 0;
-	_itemHeapSize = 0;
-
 	_iconFilePtr = 0;
 
 	_tblList = 0;
@@ -587,7 +583,12 @@ SimonEngine::~SimonEngine() {
 
 	midi.close();
 
-	free(_itemHeapPtr - _itemHeapCurPos);
+	for (uint i = 0; i < _itemHeap.size(); i++) {
+		delete [] _itemHeap[i];
+	}
+
+	_itemHeap.clear();
+
 	free(_tablesHeapPtr - _tablesHeapCurPos);
 
 	free(_gameOffsetsPtr);
@@ -653,16 +654,10 @@ void SimonEngine::paletteFadeOut(byte *p
 }
 
 byte *SimonEngine::allocateItem(uint size) {
-	byte *org = _itemHeapPtr;
-	size = (size + 3) & ~3;
-
-	_itemHeapPtr += size;
-	_itemHeapCurPos += size;
-
-	if (_itemHeapCurPos > _itemHeapSize)
-		error("allocateItem: Itemheap overflow");
-
-	return org;
+	byte *item = new byte[size];
+	memset(item, 0, size);
+	_itemHeap.push_back(item);
+	return item;
 }
 
 void SimonEngine::setUserFlag(Item *item, int a, int b) {
@@ -727,9 +722,7 @@ Child *SimonEngine::allocateChildBlock(I
 }
 
 void SimonEngine::allocItemHeap() {
-	_itemHeapSize = 10000;
-	_itemHeapCurPos = 0;
-	_itemHeapPtr = (byte *)calloc(10000, 1);
+	_itemHeap.clear();
 }
 
 void SimonEngine::allocTablesHeap() {
@@ -1961,8 +1954,13 @@ void SimonEngine::shutdown() {
 
 	free(_stringTabPtr);
 	free(_itemArrayPtr);
-	free(_itemHeapPtr - _itemHeapCurPos);
-	free(_tablesHeapPtr - _tablesHeapCurPos);
+
+	for (uint i = 0; i < _itemHeap.size(); i++) {
+		delete [] _itemHeap[i];
+	}
+
+	_itemHeap.clear();
+
 	free(_tblList);
 	free(_zoneBuffers);
 	free(_iconFilePtr);
