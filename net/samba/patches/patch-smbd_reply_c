$OpenBSD: patch-smbd_reply_c,v 1.1.2.1 2007/02/07 19:52:53 sturm Exp $

	Potential Denial of Service bug in smbd -- CVE-2007-0452

--- smbd/reply.c.orig	Wed Jan 25 00:46:32 2006
+++ smbd/reply.c	Wed Feb  7 20:15:29 2007
@@ -1853,7 +1853,7 @@ static NTSTATUS can_rename(connection_st
  Check if a user is allowed to delete a file.
 ********************************************************************/
 
-NTSTATUS can_delete(connection_struct *conn, char *fname, uint32 dirtype, BOOL bad_path, BOOL check_is_at_open)
+NTSTATUS can_delete(connection_struct *conn, char *fname, uint32 dirtype, BOOL bad_path, BOOL check_is_at_open, BOOL can_defer)
 {
 	SMB_STRUCT_STAT sbuf;
 	uint32 fattr;
@@ -1914,7 +1914,7 @@ NTSTATUS can_delete(connection_struct *c
 					FILE_OPEN,
 					0,
 					FILE_ATTRIBUTE_NORMAL,
-					0,
+					can_defer ? 0 : INTERNAL_OPEN_ONLY,
 					NULL);
 
 		if (!fsp) {
@@ -1936,7 +1936,7 @@ NTSTATUS can_delete(connection_struct *c
  code.
 ****************************************************************************/
 
-NTSTATUS unlink_internals(connection_struct *conn, uint32 dirtype, char *name, BOOL has_wild)
+NTSTATUS unlink_internals(connection_struct *conn, uint32 dirtype, char *name, BOOL has_wild, BOOL can_defer)
 {
 	pstring directory;
 	pstring mask;
@@ -1976,7 +1976,7 @@ NTSTATUS unlink_internals(connection_str
 	if (!has_wild) {
 		pstrcat(directory,"/");
 		pstrcat(directory,mask);
-		error = can_delete(conn,directory,dirtype,bad_path,False);
+		error = can_delete(conn,directory,dirtype,bad_path,False,can_defer);
 		if (!NT_STATUS_IS_OK(error))
 			return error;
 
@@ -2034,7 +2034,7 @@ NTSTATUS unlink_internals(connection_str
 				}
 
 				slprintf(fname,sizeof(fname)-1, "%s/%s",directory,dname);
-				error = can_delete(conn,fname,dirtype,bad_path,False);
+				error = can_delete(conn,fname,dirtype,bad_path,False,False);
 				if (!NT_STATUS_IS_OK(error)) {
 					continue;
 				}
@@ -2080,7 +2080,7 @@ int reply_unlink(connection_struct *conn
 	
 	DEBUG(3,("reply_unlink : %s\n",name));
 	
-	status = unlink_internals(conn, dirtype, name, path_contains_wcard);
+	status = unlink_internals(conn, dirtype, name, path_contains_wcard, True);
 	if (!NT_STATUS_IS_OK(status)) {
 		if (open_was_deferred(SVAL(inbuf,smb_mid))) {
 			/* We have re-scheduled this call. */
