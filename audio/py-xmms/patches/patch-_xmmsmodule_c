$OpenBSD: patch-_xmmsmodule_c,v 1.1 2003/12/29 20:58:27 espie Exp $
--- _xmmsmodule.c.orig	2003-12-29 21:50:34.000000000 +0100
+++ _xmmsmodule.c	2003-12-29 21:54:11.000000000 +0100
@@ -326,14 +326,14 @@ static PyObject *func_void_glist(void (*
 
 /* XXXwatch */
 static char playlist_doc[] =
-"Set the playlist contents or enqueue files/URLs in it.
-
-playlist(seq, enqueue, session=0) -> None
-
-seq     -- a sequence of files/URLs
-enqueue -- boolean (0 = false, 1 = true); false does not work in
-           xmms 1.2.6.
-session -- the XMMS session to act on";
+"Set the playlist contents or enqueue files/URLs in it.\n"
+"\n"
+"playlist(seq, enqueue, session=0) -> None\n"
+"\n"
+"seq     -- a sequence of files/URLs\n"
+"enqueue -- boolean (0 = false, 1 = true); false does not work in\n"
+"           xmms 1.2.6.\n"
+"session -- the XMMS session to act on";
 
 static PyObject *pywrap_xmms_remote_playlist(PyObject *self,
                                              PyObject *args)
@@ -406,185 +406,185 @@ static PyObject *pywrap_xmms_remote_play
 
 /* XXX find the purpose of this function */
 static char get_version_doc[] =
-"Get version (of what?).
-
-get_version(session=0) -> version of what? (integer)
-
-The code fragment that answers to this request in XMMS 1.2.6 is:
-
-  case CMD_GET_VERSION:
-          ctrl_write_gint(pkt->fd, 0x09a3);
-          ...
-If you understand this better than I, please let me know.";
+"Get version (of what?).\n"
+"\n"
+"get_version(session=0) -> version of what? (integer)\n"
+"\n"
+"The code fragment that answers to this request in XMMS 1.2.6 is:\n"
+"\n"
+"  case CMD_GET_VERSION:\n"
+"          ctrl_write_gint(pkt->fd, 0x09a3);\n"
+"          ...\n"
+"If you understand this better than I, please let me know.";
 
 PYXMMS_FUNC_GINT(pywrap_xmms_remote_get_version, xmms_remote_get_version)
 
 static char play_files_doc[] =
-"Set the playlist and play.
-
-play_files(seq, session=0) -> None
-
-Clear the playlist, add the specified files/URLs to it and start
-playing.
-
-seq     -- a sequence of files/URLs
-session -- the XMMS session to act on";
+"Set the playlist and play.\n"
+"\n"
+"play_files(seq, session=0) -> None\n"
+"\n"
+"Clear the playlist, add the specified files/URLs to it and start\n"
+"playing.\n"
+"\n"
+"seq     -- a sequence of files/URLs\n"
+"session -- the XMMS session to act on";
 
 PYXMMS_FUNC_VOID_GLIST(pywrap_xmms_remote_play_files,
                        xmms_remote_play_files)
 
 static char playlist_add_doc[] =
-"Add files/URLs to the playlist.
-
-playlist_add(seq, session=0) -> None
-
-seq     -- a sequence of files/URLs
-session -- the XMMS session to act on";
+"Add files/URLs to the playlist.\n"
+"\n"
+"playlist_add(seq, session=0) -> None\n"
+"\n"
+"seq     -- a sequence of files/URLs\n"
+"session -- the XMMS session to act on";
 
 PYXMMS_FUNC_VOID_GLIST(pywrap_xmms_remote_playlist_add,
                        xmms_remote_playlist_add)
 
 static char playlist_delete_doc[] =
-"Delete one element of the playlist.
-
-playlist_delete(index, session=0) -> None
-
-index   -- the index (starting at 0) of the playlist entry to
-           delete
-session -- the XMMS session to act on";
+"Delete one element of the playlist.\n"
+"\n"
+"playlist_delete(index, session=0) -> None\n"
+"\n"
+"index   -- the index (starting at 0) of the playlist entry to\n"
+"           delete\n"
+"session -- the XMMS session to act on";
 
 PYXMMS_FUNC_VOID_GINT(pywrap_xmms_remote_playlist_delete,
                       xmms_remote_playlist_delete)
 
 static char play_doc[] =
-"Play the current playlist entry.
-
-play(session=0) -> None
-
-session -- the XMMS session to act on";
+"Play the current playlist entry.\n"
+"\n"
+"play(session=0) -> None\n"
+"\n"
+"session -- the XMMS session to act on";
 
 PYXMMS_FUNC_VOID(pywrap_xmms_remote_play, xmms_remote_play)
 
 static char pause_doc[] =
-"Pause.
-
-pause(session=0) -> None
-
-session -- the XMMS session to act on";
+"Pause.\n"
+"\n"
+"pause(session=0) -> None\n"
+"\n"
+"session -- the XMMS session to act on";
 
 PYXMMS_FUNC_VOID(pywrap_xmms_remote_pause, xmms_remote_pause)
 
 static char stop_doc[] =
-"Stop.
-
-stop(session=0) -> None
-
-session -- the XMMS session to act on";
+"Stop.\n"
+"\n"
+"stop(session=0) -> None\n"
+"\n"
+"session -- the XMMS session to act on";
 
 PYXMMS_FUNC_VOID(pywrap_xmms_remote_stop, xmms_remote_stop)
 
 static char play_pause_doc[] =
-"Play or pause (toggle).
-
-play_pause(session=0) -> None
-
-session -- the XMMS session to act on";
+"Play or pause (toggle).\n"
+"\n"
+"play_pause(session=0) -> None\n"
+"\n"
+"session -- the XMMS session to act on";
 
 PYXMMS_FUNC_VOID(pywrap_xmms_remote_play_pause, xmms_remote_play_pause)
 
 static char is_playing_doc[] =
-"Tell whether XMMS is playing (= not stopped).
-
-is_playing(session=0) -> boolean (0 = false, 1 = true)
-
-When in pause, XMMS is considered to be playing for this
-function.
-
-session -- the XMMS session to contact";
+"Tell whether XMMS is playing (= not stopped).\n"
+"\n"
+"is_playing(session=0) -> boolean (0 = false, 1 = true)\n"
+"\n"
+"When in pause, XMMS is considered to be playing for this\n"
+"function.\n"
+"\n"
+"session -- the XMMS session to contact";
 
 PYXMMS_FUNC_GBOOLEAN(pywrap_xmms_remote_is_playing, xmms_remote_is_playing)
 
 static char is_paused_doc[] =
-"Tell whether XMMS is paused.
-
-is_paused(session=0) -> boolean (0 = false, 1 = true)
-
-session -- the XMMS session to contact";
+"Tell whether XMMS is paused.\n"
+"\n"
+"is_paused(session=0) -> boolean (0 = false, 1 = true)\n"
+"\n"
+"session -- the XMMS session to contact";
 
 PYXMMS_FUNC_GBOOLEAN(pywrap_xmms_remote_is_paused, xmms_remote_is_paused)
 
 static char get_playlist_pos_doc[] =
-"Get the current playlist position.
-
-get_playlist_pos(session=0) -> position (integer)
-
-The count starts at 0 (first playlist entry).
-
-session -- the XMMS session to contact";
+"Get the current playlist position.\n"
+"\n"
+"get_playlist_pos(session=0) -> position (integer)\n"
+"\n"
+"The count starts at 0 (first playlist entry).\n"
+"\n"
+"session -- the XMMS session to contact";
 
 PYXMMS_FUNC_GINT(pywrap_xmms_remote_get_playlist_pos,
                  xmms_remote_get_playlist_pos)
 
 static char set_playlist_pos_doc[] =
-"Set the current playlist position.
-
-set_playlist_pos(position, session=0) -> None
-
-pos     -- the target playlist index (counting from 0)
-session -- the XMMS session to act on";
+"Set the current playlist position.\n"
+"\n"
+"set_playlist_pos(position, session=0) -> None\n"
+"\n"
+"pos     -- the target playlist index (counting from 0)\n"
+"session -- the XMMS session to act on";
 
 PYXMMS_FUNC_VOID_GINT(pywrap_xmms_remote_set_playlist_pos,
                       xmms_remote_set_playlist_pos)
 
 static char get_playlist_length_doc[] =
-"Get the playlist length (number of files/URLs).
-
-get_playlist_length(session=0) -> length (integer)
-
-session -- the XMMS session to contact";
+"Get the playlist length (number of files/URLs).\n"
+"\n"
+"get_playlist_length(session=0) -> length (integer)\n"
+"\n"
+"session -- the XMMS session to contact";
 
 PYXMMS_FUNC_GINT(pywrap_xmms_remote_get_playlist_length,
                  xmms_remote_get_playlist_length)
 
 static char playlist_clear_doc[] =
-"Clear the playlist.
-
-playlist_clear(session=0) -> None
-
-session -- the XMMS session to act on";
+"Clear the playlist.\n"
+"\n"
+"playlist_clear(session=0) -> None\n"
+"\n"
+"session -- the XMMS session to act on";
 
 PYXMMS_FUNC_VOID(pywrap_xmms_remote_playlist_clear,
                  xmms_remote_playlist_clear)
 
 static char get_output_time_doc[] =
-"Get the time since the beginning of the current playlist entry.
-
-get_output_time(session=0) -> integer value in ms
-
-session -- the XMMS session to contact";
+"Get the time since the beginning of the current playlist entry.\n"
+"\n"
+"get_output_time(session=0) -> integer value in ms\n"
+"\n"
+"session -- the XMMS session to contact";
 
 PYXMMS_FUNC_GINT(pywrap_xmms_remote_get_output_time,
                  xmms_remote_get_output_time)
 
 static char jump_to_time_doc[] =
-"Jump to a given time since the beginning of the current playlist entry.
-
-jump_to_time(time, session=0) -> None
-
-time    -- time to jump to, in ms (integer)
-session -- the XMMS session to act on";
+"Jump to a given time since the beginning of the current playlist entry.\n"
+"\n"
+"jump_to_time(time, session=0) -> None\n"
+"\n"
+"time    -- time to jump to, in ms (integer)\n"
+"session -- the XMMS session to act on";
 
 PYXMMS_FUNC_VOID_GINT(pywrap_xmms_remote_jump_to_time,
                       xmms_remote_jump_to_time)
 
 static char get_volume_doc[] =
-"Get left and right volumes.
-
-get_volume(session=0) -> (left volume, right volume)
-
-The volumes are integers.
-
-session -- the XMMS session to contact";
+"Get left and right volumes.\n"
+"\n"
+"get_volume(session=0) -> (left volume, right volume)\n"
+"\n"
+"The volumes are integers.\n"
+"\n"
+"session -- the XMMS session to contact";
 
 static PyObject *pywrap_xmms_remote_get_volume(PyObject *self, PyObject *args)
 {
@@ -600,121 +600,121 @@ static PyObject *pywrap_xmms_remote_get_
 }
 
 static char get_main_volume_doc[] =
-"Get the greater of left and right volumes.
-
-get_main_volume(session=0) -> volume (integer)
-
-session -- the XMMS session to contact";
+"Get the greater of left and right volumes.\n"
+"\n"
+"get_main_volume(session=0) -> volume (integer)\n"
+"\n"
+"session -- the XMMS session to contact";
 
 PYXMMS_FUNC_GINT(pywrap_xmms_remote_get_main_volume,
                  xmms_remote_get_main_volume)
 
 static char get_balance_doc[] =
-"Get the balance value.
-
-get_balance(session=0) -> balance (integer)
-
-session -- the XMMS session to contact";
+"Get the balance value.\n"
+"\n"
+"get_balance(session=0) -> balance (integer)\n"
+"\n"
+"session -- the XMMS session to contact";
 
 PYXMMS_FUNC_GINT(pywrap_xmms_remote_get_balance, xmms_remote_get_balance)
 
 static char set_volume_doc[] =
-"Set left and right volumes.
-
-set_volume(left_volume, right_volume, session=0) -> None
-
-left_volume  -- left volume (integer)
-right_volume -- right volume (integer)
-session      -- the XMMS session to act on";
+"Set left and right volumes.\n"
+"\n"
+"set_volume(left_volume, right_volume, session=0) -> None\n"
+"\n"
+"left_volume  -- left volume (integer)\n"
+"right_volume -- right volume (integer)\n"
+"session      -- the XMMS session to act on";
 
 PYXMMS_FUNC_VOID_GINT_GINT(pywrap_xmms_remote_set_volume,
                            xmms_remote_set_volume)
 
 static char set_main_volume_doc[] =
-"Set the \"main\" volume.
-
-set_main_volume(volume, session=0) -> None
-
-The left and right volumes are calculated (and set) from the
-supplied `volume' argument and the current balance.
-
-volume  -- \"main\" volume (integer)
-session -- the XMMS session to act on";
+"Set the \"main\" volume.\n"
+"\n"
+"set_main_volume(volume, session=0) -> None\n"
+"\n"
+"The left and right volumes are calculated (and set) from the\n"
+"supplied `volume' argument and the current balance.\n"
+"\n"
+"volume  -- \"main\" volume (integer)\n"
+"session -- the XMMS session to act on";
 
 PYXMMS_FUNC_VOID_GINT(pywrap_xmms_remote_set_main_volume,
                       xmms_remote_set_main_volume)
 
 static char set_balance_doc[] =
-"Set the balance.
-
-set_balance(balance, session=0) -> None
-
-balance -- balance value (integer)
-session -- the XMMS session to act on";
+"Set the balance.\n"
+"\n"
+"set_balance(balance, session=0) -> None\n"
+"\n"
+"balance -- balance value (integer)\n"
+"session -- the XMMS session to act on";
 
 PYXMMS_FUNC_VOID_GINT(pywrap_xmms_remote_set_balance,
                       xmms_remote_set_balance)
 
 static char get_skin_doc[] =
-"Get the current skin file.
-
-get_skin(session=0) -> absolute file name for the skin (string)
-
-session -- the XMMS session to contact";
+"Get the current skin file.\n"
+"\n"
+"get_skin(session=0) -> absolute file name for the skin (string)\n"
+"\n"
+"session -- the XMMS session to contact";
 
 PYXMMS_FUNC_GCHARP(pywrap_xmms_remote_get_skin, xmms_remote_get_skin)
 
 static char set_skin_doc[] =
-"Set the skin from a specified file.
-
-set_skin(skin_file, session=0) -> None
-
-skin_file -- the target skin file
-session   -- the XMMS session to act on";
+"Set the skin from a specified file.\n"
+"\n"
+"set_skin(skin_file, session=0) -> None\n"
+"\n"
+"skin_file -- the target skin file\n"
+"session   -- the XMMS session to act on";
 
 PYXMMS_FUNC_VOID_GCHARP(pywrap_xmms_remote_set_skin, xmms_remote_set_skin)
 
 static char get_playlist_file_doc[] =
-"Get the file name corresponding to a given entry in the playlist.
-
-get_playlist_file(index, session=0) -> absolute filename (string)
-
-index   -- index (starting at 0) of the playlist entry
-session -- the XMMS session to contact";
+"Get the file name corresponding to a given entry in the playlist.\n"
+"\n"
+"get_playlist_file(index, session=0) -> absolute filename (string)\n"
+"\n"
+"index   -- index (starting at 0) of the playlist entry\n"
+"session -- the XMMS session to contact";
 
 PYXMMS_FUNC_GCHARP_GINT(pywrap_xmms_remote_get_playlist_file,
                         xmms_remote_get_playlist_file)
 
 static char get_playlist_title_doc[] =
-"Get the title of a given entry in the playlist.
-
-get_playlist_title(index, session=0) -> title (string)
-
-index   -- index (starting at 0) of the playlist entry
-session -- the XMMS session to contact";
+"Get the title of a given entry in the playlist.\n"
+"\n"
+"get_playlist_title(index, session=0) -> title (string)\n"
+"\n"
+"index   -- index (starting at 0) of the playlist entry\n"
+"session -- the XMMS session to contact";
 
 PYXMMS_FUNC_GCHARP_GINT(pywrap_xmms_remote_get_playlist_title,
                         xmms_remote_get_playlist_title)
     
 static char get_playlist_time_doc[] =
-"Get the duration of a given entry in the playlist.
-
-get_playlist_time(index, session=0) -> duration in ms (integer)
-
-index   -- index (starting at 0) of the playlist entry
-session -- the XMMS session to contact";
+"Get the duration of a given entry in the playlist.\n"
+"\n"
+"get_playlist_time(index, session=0) -> duration in ms (integer)\n"
+"\n"
+"index   -- index (starting at 0) of the playlist entry\n"
+"session -- the XMMS session to contact";
 
 PYXMMS_FUNC_GINT_GINT(pywrap_xmms_remote_get_playlist_time,
                       xmms_remote_get_playlist_time)
 
 static char get_info_doc[] =
-"Get information about the current playlist entry.
-
-get_info(session=0) -> (rate, frequency, number_of_channels)
-
-The elements of the returned tuple are all integers.
-
-session -- the XMMS session to contact";
+"Get information about the current playlist entry.\n"
+"\n"
+"get_info(session=0) -> (rate, frequency, number_of_channels)\n"
+"\n"
+"The elements of the returned tuple are all integers.\n"
+"\n"
+"session -- the XMMS session to contact";
 
 static PyObject *pywrap_xmms_remote_get_info(PyObject *self, PyObject *args)
 {
@@ -730,216 +730,216 @@ static PyObject *pywrap_xmms_remote_get_
 }
 
 static char pl_win_toggle_doc[] =
-"Hide or show the playlist window.
-
-pl_win_toggle(display, session=0) -> None
-
-This is not a real toggle function: you have to specify the
-`display' argument.
-
-display -- 1 to display the window, 0 to hide it
-session -- the XMMS session to act on";
+"Hide or show the playlist window.\n"
+"\n"
+"pl_win_toggle(display, session=0) -> None\n"
+"\n"
+"This is not a real toggle function: you have to specify the\n"
+"`display' argument.\n"
+"\n"
+"display -- 1 to display the window, 0 to hide it\n"
+"session -- the XMMS session to act on";
 
 PYXMMS_FUNC_VOID_GBOOLEAN(pywrap_xmms_remote_pl_win_toggle,
                           xmms_remote_pl_win_toggle)
 
 static char eq_win_toggle_doc[] =
-"Hide or show the equalizer window.
-
-eq_win_toggle(display, session=0) -> None
-
-This is not a real toggle function: you have to specify the
-`display' argument.
-
-display -- 1 to display the window, 0 to hide it
-session -- the XMMS session to act on";
+"Hide or show the equalizer window.\n"
+"\n"
+"eq_win_toggle(display, session=0) -> None\n"
+"\n"
+"This is not a real toggle function: you have to specify the\n"
+"`display' argument.\n"
+"\n"
+"display -- 1 to display the window, 0 to hide it\n"
+"session -- the XMMS session to act on";
 
 PYXMMS_FUNC_VOID_GBOOLEAN(pywrap_xmms_remote_eq_win_toggle,
                           xmms_remote_eq_win_toggle)
 
 static char main_win_toggle_doc[] =
-"Hide or show the main window.
-
-main_win_toggle(display, session=0) -> None
-
-This is not a real toggle function: you have to specify the
-`display' argument.
-
-display -- 1 to display the window, 0 to hide it
-session -- the XMMS session to act on";
+"Hide or show the main window.\n"
+"\n"
+"main_win_toggle(display, session=0) -> None\n"
+"\n"
+"This is not a real toggle function: you have to specify the\n"
+"`display' argument.\n"
+"\n"
+"display -- 1 to display the window, 0 to hide it\n"
+"session -- the XMMS session to act on";
 
 PYXMMS_FUNC_VOID_GBOOLEAN(pywrap_xmms_remote_main_win_toggle,
                           xmms_remote_main_win_toggle)
 
 static char is_main_win_doc[] =
-"Tell whether the main window is visible.
-
-is_main_win(session=0) -> boolean (0 = false, 1 = true)
-
-session -- the XMMS session to contact";
+"Tell whether the main window is visible.\n"
+"\n"
+"is_main_win(session=0) -> boolean (0 = false, 1 = true)\n"
+"\n"
+"session -- the XMMS session to contact";
 
 PYXMMS_FUNC_GBOOLEAN(pywrap_xmms_remote_is_main_win, xmms_remote_is_main_win)
 
 static char is_pl_win_doc[] =
-"Tell whether the playlist window is visible.
-
-is_pl_win(session=0) -> boolean (0 = false, 1 = true)
-
-session -- the XMMS session to contact";
+"Tell whether the playlist window is visible.\n"
+"\n"
+"is_pl_win(session=0) -> boolean (0 = false, 1 = true)\n"
+"\n"
+"session -- the XMMS session to contact";
 
 PYXMMS_FUNC_GBOOLEAN(pywrap_xmms_remote_is_pl_win, xmms_remote_is_pl_win)
 
 static char is_eq_win_doc[] =
-"Tell whether the equalizer window is visible.
-
-is_eq_win(session=0) -> boolean (0 = false, 1 = true)
-
-session -- the XMMS session to contact";
+"Tell whether the equalizer window is visible.\n"
+"\n"
+"is_eq_win(session=0) -> boolean (0 = false, 1 = true)\n"
+"\n"
+"session -- the XMMS session to contact";
 
 PYXMMS_FUNC_GBOOLEAN(pywrap_xmms_remote_is_eq_win, xmms_remote_is_eq_win)
 
 static char show_prefs_box_doc[] =
-"Show the preferences dialog box.
-
-show_prefs_box(session=0) -> None
-
-session -- the XMMS session to act on";
+"Show the preferences dialog box.\n"
+"\n"
+"show_prefs_box(session=0) -> None\n"
+"\n"
+"session -- the XMMS session to act on";
 
 PYXMMS_FUNC_VOID(pywrap_xmms_remote_show_prefs_box,
                  xmms_remote_show_prefs_box)
 
 /* XXX XMMS weird code here */
 static char toggle_aot_doc[] =
-"Set the always-on-top flag for the main window.
-
-toggle_aot(always, session=0) -> None
-
-The implementation of this function in XMMS 1.2.6 is weird,
-I cannot tell you more about `always' than \"it seems not
-to be used\".
-
-always  -- should be a boolean (0 or 1)
-session -- the XMMS session to act on";
+"Set the always-on-top flag for the main window.\n"
+"\n"
+"toggle_aot(always, session=0) -> None\n"
+"\n"
+"The implementation of this function in XMMS 1.2.6 is weird,\n"
+"I cannot tell you more about `always' than \"it seems not\n"
+"to be used\".\n"
+"\n"
+"always  -- should be a boolean (0 or 1)\n"
+"session -- the XMMS session to act on";
 
 PYXMMS_FUNC_VOID_GBOOLEAN(pywrap_xmms_remote_toggle_aot,
                           xmms_remote_toggle_aot)
 
 static char show_about_box_doc[] =
-"Show about box.
-
-show_about_box(session=0) -> None
-
-Does not to work in XMMS 1.2.6.
-
-session -- the XMMS session to act on";
+"Show about box.\n"
+"\n"
+"show_about_box(session=0) -> None\n"
+"\n"
+"Does not to work in XMMS 1.2.6.\n"
+"\n"
+"session -- the XMMS session to act on";
 
 PYXMMS_FUNC_VOID(pywrap_xmms_remote_show_about_box,
                  xmms_remote_show_about_box)
 
 static char eject_doc[] =
-"Show the eject dialog box.
-
-eject(session=0) -> None
-
-session -- the XMMS session to act on";
+"Show the eject dialog box.\n"
+"\n"
+"eject(session=0) -> None\n"
+"\n"
+"session -- the XMMS session to act on";
 
 PYXMMS_FUNC_VOID(pywrap_xmms_remote_eject, xmms_remote_eject)
 
 static char playlist_prev_doc[] =
-"Jump to the previous entry in the playlist.
-
-playlist_prev(session=0) -> None
-
-session -- the XMMS session to act on";
+"Jump to the previous entry in the playlist.\n"
+"\n"
+"playlist_prev(session=0) -> None\n"
+"\n"
+"session -- the XMMS session to act on";
 
 PYXMMS_FUNC_VOID(pywrap_xmms_remote_playlist_prev, xmms_remote_playlist_prev)
 
 static char playlist_next_doc[] =
-"Jump to the next entry in the playlist.
-
-playlist_next(session=0) -> None
-
-session -- the XMMS session to act on";
+"Jump to the next entry in the playlist.\n"
+"\n"
+"playlist_next(session=0) -> None\n"
+"\n"
+"session -- the XMMS session to act on";
 
 PYXMMS_FUNC_VOID(pywrap_xmms_remote_playlist_next, xmms_remote_playlist_next)
 
 static char playlist_add_url_string_doc[] =
-"Append a file/URL to the playlist.
-
-playlist_add_url_string(string, session=0) -> None
-
-string  -- an absolute file name or a URL
-session -- the XMMS session to act on";
+"Append a file/URL to the playlist.\n"
+"\n"
+"playlist_add_url_string(string, session=0) -> None\n"
+"\n"
+"string  -- an absolute file name or a URL\n"
+"session -- the XMMS session to act on";
 
 PYXMMS_FUNC_VOID_GCHARP(pywrap_xmms_remote_playlist_add_url_string,
                         xmms_remote_playlist_add_url_string)
 
 static char playlist_ins_url_string_doc[] =
-"Insert a file/URL at a given position in the playlist.
-
-playlist_ins_url_string(string, pos, session=0) -> None
-
-string  -- an absolute file name or a URL
-pos     -- index (starting at 0) of the playlist entry before
-           which the entry for `string' will be inserted
-session -- the XMMS session to act on";
+"Insert a file/URL at a given position in the playlist.\n"
+"\n"
+"playlist_ins_url_string(string, pos, session=0) -> None\n"
+"\n"
+"string  -- an absolute file name or a URL\n"
+"pos     -- index (starting at 0) of the playlist entry before\n"
+"           which the entry for `string' will be inserted\n"
+"session -- the XMMS session to act on";
 
 PYXMMS_FUNC_VOID_GCHARP_GINT(pywrap_xmms_remote_playlist_ins_url_string,
                              xmms_remote_playlist_ins_url_string)
 
 static char is_running_doc[] =
-"Tell whether the specified XMMS session is running.
-
-is_running(session=0) -> boolean (0 = false, 1 = true)
-
-session -- the XMMS session to contact";
+"Tell whether the specified XMMS session is running.\n"
+"\n"
+"is_running(session=0) -> boolean (0 = false, 1 = true)\n"
+"\n"
+"session -- the XMMS session to contact";
 
 PYXMMS_FUNC_GBOOLEAN(pywrap_xmms_remote_is_running, xmms_remote_is_running)
 
 static char toggle_repeat_doc[] =
-"Toggle repeat mode.
-
-toggle_repeat(session=0) -> None
-
-session -- the XMMS session to act on";
+"Toggle repeat mode.\n"
+"\n"
+"toggle_repeat(session=0) -> None\n"
+"\n"
+"session -- the XMMS session to act on";
 
 PYXMMS_FUNC_VOID(pywrap_xmms_remote_toggle_repeat, xmms_remote_toggle_repeat)
 
 static char toggle_shuffle_doc[] =
-"Toggle shuffle mode.
-
-toggle_shuffle(session=0) -> None
-
-session -- the XMMS session to act on";
+"Toggle shuffle mode.\n"
+"\n"
+"toggle_shuffle(session=0) -> None\n"
+"\n"
+"session -- the XMMS session to act on";
 
 PYXMMS_FUNC_VOID(pywrap_xmms_remote_toggle_shuffle, xmms_remote_toggle_shuffle)
 
 static char is_repeat_doc[] =
-"Tell whether repeat mode is active.
-
-is_repeat(session=0) -> boolean (0 = false, 1 = true)
-
-session -- the XMMS session to contact";
+"Tell whether repeat mode is active.\n"
+"\n"
+"is_repeat(session=0) -> boolean (0 = false, 1 = true)\n"
+"\n"
+"session -- the XMMS session to contact";
 
 PYXMMS_FUNC_GBOOLEAN(pywrap_xmms_remote_is_repeat, xmms_remote_is_repeat)
 
 static char is_shuffle_doc[] =
-"Tell whether shuffle mode is active.
-
-is_shuffle(session=0) -> boolean (0 = false, 1 = true)
-
-session -- the XMMS session to contact";
+"Tell whether shuffle mode is active.\n"
+"\n"
+"is_shuffle(session=0) -> boolean (0 = false, 1 = true)\n"
+"\n"
+"session -- the XMMS session to contact";
 
 PYXMMS_FUNC_GBOOLEAN(pywrap_xmms_remote_is_shuffle, xmms_remote_is_shuffle)
 
 static char get_eq_doc[] =
-"Get the equalizer settings.
-
-get_eq(session=0) -> (preamp, (band0, band1, ... band9))
-
-preamp, band0, ... band9 are all floats (gains in dB).
-
-session -- the XMMS session to contact";
+"Get the equalizer settings.\n"
+"\n"
+"get_eq(session=0) -> (preamp, (band0, band1, ... band9))\n"
+"\n"
+"preamp, band0, ... band9 are all floats (gains in dB).\n"
+"\n"
+"session -- the XMMS session to contact";
 
 static PyObject *pywrap_xmms_remote_get_eq(PyObject *self, PyObject *args)
 {
@@ -969,39 +969,39 @@ static PyObject *pywrap_xmms_remote_get_
 }
 
 static char get_eq_preamp_doc[] =
-"Get the equalizer preamp value.
-
-get_eq_preamp(session=0) -> preamp in dB (float)
-
-session -- the XMMS session to contact";
+"Get the equalizer preamp value.\n"
+"\n"
+"get_eq_preamp(session=0) -> preamp in dB (float)\n"
+"\n"
+"session -- the XMMS session to contact";
 
 PYXMMS_FUNC_GFLOAT(pywrap_xmms_remote_get_eq_preamp,
                    xmms_remote_get_eq_preamp)
 
 static char get_eq_band_doc[] =
-"Get the equalizer setting for a given band.
-
-get_eq_band(band, session=0) -> gain in dB (float)
-
-band    -- integer between 0 and 9 (both inclusive), specifying
-           the equalizer band from which the setting is to be
-           retrieved. 0 is for the lowest frequency and 9 for the
-           highest one.
-session -- the XMMS session to contact";
+"Get the equalizer setting for a given band.\n"
+"\n"
+"get_eq_band(band, session=0) -> gain in dB (float)\n"
+"\n"
+"band    -- integer between 0 and 9 (both inclusive), specifying\n"
+"           the equalizer band from which the setting is to be\n"
+"           retrieved. 0 is for the lowest frequency and 9 for the\n"
+"           highest one.\n"
+"session -- the XMMS session to contact";
 
 PYXMMS_FUNC_GFLOAT_GINT(pywrap_xmms_remote_get_eq_band,
                         xmms_remote_get_eq_band)
 
 static char set_eq_doc[] =
-"Set all equalizer settings (preamp and all bands).
-
-set_eq(preamp, seq, session=0) -> None
-
-preamp  -- gain in dB (float)
-seq     -- a sequence of 10 floats, which are the gains in dB of
-           for the 10 frequency bands predefined in XMMS
-           (first = lowest frequency, last = highest frequency)
-session -- the XMMS session to act on";
+"Set all equalizer settings (preamp and all bands).\n"
+"\n"
+"set_eq(preamp, seq, session=0) -> None\n"
+"\n"
+"preamp  -- gain in dB (float)\n"
+"seq     -- a sequence of 10 floats, which are the gains in dB of\n"
+"           for the 10 frequency bands predefined in XMMS\n"
+"           (first = lowest frequency, last = highest frequency)\n"
+"session -- the XMMS session to act on";
 
 static PyObject *pywrap_xmms_remote_set_eq(PyObject *self, PyObject *args)
 {
@@ -1054,37 +1054,37 @@ static PyObject *pywrap_xmms_remote_set_
 }
 
 static char set_eq_preamp_doc[] =
-"Set the equalizer preamp value.
-
-set_eq_preamp(preamp, session=0) -> None
-
-preamp  -- gain in dB (float)
-session -- the XMMS session to act on";
+"Set the equalizer preamp value.\n"
+"\n"
+"set_eq_preamp(preamp, session=0) -> None\n"
+"\n"
+"preamp  -- gain in dB (float)\n"
+"session -- the XMMS session to act on";
 
 PYXMMS_FUNC_VOID_GFLOAT(pywrap_xmms_remote_set_eq_preamp,
                         xmms_remote_set_eq_preamp)
 
 static char set_eq_band_doc[] =
-"Set the equalizer setting for a given band.
-
-set_eq_band(band, gain, session=0) -> None
-
-band    -- number of the band (integer between 0 and 9, both
-           inclusive, specifying the equalizer band from which
-           the setting is to be set; 0 is for the lowest
-           frequency and 9 for the highest one).
-gain    -- value of the gain to set (float)
-session -- the XMMS session to act on";
+"Set the equalizer setting for a given band.\n"
+"\n"
+"set_eq_band(band, gain, session=0) -> None\n"
+"\n"
+"band    -- number of the band (integer between 0 and 9, both\n"
+"           inclusive, specifying the equalizer band from which\n"
+"           the setting is to be set; 0 is for the lowest\n"
+"           frequency and 9 for the highest one).\n"
+"gain    -- value of the gain to set (float)\n"
+"session -- the XMMS session to act on";
 
 PYXMMS_FUNC_VOID_GINT_GFLOAT(pywrap_xmms_remote_set_eq_band,
                              xmms_remote_set_eq_band)
 
 static char quit_doc[] =
-"Quit the specified XMMS session.
-
-quit(session=0) -> None
-
-session -- the XMMS session to act on";
+"Quit the specified XMMS session.\n"
+"\n"
+"quit(session=0) -> None\n"
+"\n"
+"session -- the XMMS session to act on";
 
 PYXMMS_FUNC_VOID(pywrap_xmms_remote_quit, xmms_remote_quit)
 
@@ -1212,11 +1212,11 @@ static PyMethodDef pyxmms_methods[] =
 };
 
 static char _xmms_doc[] =
-"Python interface to XMMS -- internal module.
-
-This module is an internal part of PyXMMS and should not be used
-directly by \"user\" modules. It contains the direct interface to
-libxmms. \"User\" modules should use the xmms module instead.";
+"Python interface to XMMS -- internal module.\n"
+"\n"
+"This module is an internal part of PyXMMS and should not be used\n"
+"directly by \"user\" modules. It contains the direct interface to\n"
+"libxmms. \"User\" modules should use the xmms module instead.";
 
 void init_xmms(void)            /* Executed on the first import */
 {
