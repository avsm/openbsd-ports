$OpenBSD: patch-sw_source_core_unocore_unochart_cxx,v 1.1 2007/11/13 09:46:28 robert Exp $
--- sw/source/core/unocore/unochart.cxx.orig.port	Sun Oct 28 00:17:02 2007
+++ sw/source/core/unocore/unochart.cxx	Sun Oct 28 00:07:32 2007
@@ -1638,7 +1638,7 @@ void SwChartDataProvider::InvalidateTable( const SwTab
         Set_DataSequenceRef_t::iterator aIt( rSet.begin() );
         while (aIt != rSet.end())
         {
-            uno::Reference< util::XModifiable > xRef( uno::Reference< chart2::data::XDataSequence >(*aIt), uno::UNO_QUERY );
+            uno::Reference< util::XModifiable > xRef = uno::Reference< util::XModifiable>( uno::Reference< chart2::data::XDataSequence >(*aIt), uno::UNO_QUERY );
             if (xRef.is())
             {
                 // mark the sequence as 'dirty' and notify listeners
@@ -1671,7 +1671,7 @@ sal_Bool SwChartDataProvider::DeleteBox( const SwTable
             sal_Bool bNowEmpty = sal_False;
 
             // check if weak reference is still valid...
-            uno::Reference< chart2::data::XDataSequence > xRef( uno::Reference< chart2::data::XDataSequence>(*aIt), uno::UNO_QUERY );
+            uno::Reference< chart2::data::XDataSequence > xRef = uno::Reference< chart2::data::XDataSequence >( uno::Reference< chart2::data::XDataSequence>(*aIt), uno::UNO_QUERY );
             if (xRef.is())
             {
                 // then delete that table box (check if implementation cursor needs to be adjusted)
@@ -1713,7 +1713,7 @@ void SwChartDataProvider::DisposeAllDataSequences( con
         Set_DataSequenceRef_t::iterator aEndIt( rSet.end() );
         while (aIt != aEndIt)
         {
-            uno::Reference< lang::XComponent > xRef( uno::Reference< chart2::data::XDataSequence >(*aIt), uno::UNO_QUERY );
+            uno::Reference< lang::XComponent > xRef = uno::Reference< lang::XComponent>( uno::Reference< chart2::data::XDataSequence >(*aIt), uno::UNO_QUERY );
             if (xRef.is())
             {
                 xRef->dispose();
@@ -1792,7 +1792,7 @@ void SwChartDataProvider::AddRowCols(
 			Set_DataSequenceRef_t::iterator aIt( rSet.begin() );
 			while (aIt != rSet.end())
 			{
-				uno::Reference< chart2::data::XTextualDataSequence > xRef( uno::Reference< chart2::data::XDataSequence >(*aIt), uno::UNO_QUERY );
+				uno::Reference< chart2::data::XTextualDataSequence > xRef = uno::Reference< chart2::data::XTextualDataSequence>( uno::Reference< chart2::data::XDataSequence >(*aIt), uno::UNO_QUERY );
 				if (xRef.is())
 				{
 					const sal_Int32 nLen = xRef->getTextualData().getLength();
