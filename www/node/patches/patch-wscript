$OpenBSD: patch-wscript,v 1.7 2011/05/21 20:32:54 sthen Exp $

- OpenBSD can also use libexecinfo.
- Don't append EV_MULTIPLICITY_EV was it breaks the build with using the
  shared libev with an undefined reference to ev_rt_now.
- Don't build with -O3.
- Adjust some paths.

--- wscript.orig	Sat May 21 03:40:06 2011
+++ wscript	Sat May 21 08:42:12 2011
@@ -269,7 +269,7 @@ def configure(conf):
   if Options.options.efence:
     conf.check(lib='efence', libpath=['/usr/lib', '/usr/local/lib'], uselib_store='EFENCE')
 
-  if sys.platform.startswith("freebsd"):
+  if sys.platform.startswith("freebsd") or sys.platform.startswith("openbsd"):
      if not conf.check(lib="execinfo",
                        includes=['/usr/include', '/usr/local/include'],
                        libpath=['/usr/lib', '/usr/local/lib'],
@@ -451,8 +451,10 @@ def configure(conf):
   # LFS
   conf.env.append_value('CPPFLAGS',  '-D_LARGEFILE_SOURCE')
   conf.env.append_value('CPPFLAGS',  '-D_FILE_OFFSET_BITS=64')
-  conf.env.append_value('CPPFLAGS',  '-DEV_MULTIPLICITY=0')
 
+#  Disabled, see http://comments.gmane.org/gmane.comp.lang.javascript.nodejs/18924
+#  conf.env.append_value('CPPFLAGS',  '-DEV_MULTIPLICITY=0')
+
   # Makes select on windows support more than 64 FDs
   if sys.platform.startswith("win32"):
     conf.env.append_value('CPPFLAGS', '-DFD_SETSIZE=1024');
@@ -521,7 +523,7 @@ def configure(conf):
 
   # Configure default variant
   conf.setenv('default')
-  default_compile_flags = ['-g', '-O3']
+  default_compile_flags = ['-g']
   conf.env.append_value('CCFLAGS', default_compile_flags)
   conf.env.append_value('CXXFLAGS', default_compile_flags)
   conf.write_config_header("config.h")
@@ -890,11 +892,10 @@ def build(bld):
   # Only install the man page if it exists.
   # Do 'make doc install' to build and install it.
   if os.path.exists('doc/node.1'):
-    bld.install_files('${PREFIX}/share/man/man1/', 'doc/node.1')
+    bld.install_files('${PREFIX}/man/man1/', 'doc/node.1')
 
   bld.install_files('${PREFIX}/bin/', 'tools/node-waf', chmod=0755)
-  bld.install_files('${LIBDIR}/node/wafadmin', 'tools/wafadmin/*.py')
-  bld.install_files('${LIBDIR}/node/wafadmin/Tools', 'tools/wafadmin/Tools/*.py')
+  bld.install_files('${LIBDIR}/node/wafadmin', 'tools/wafadmin/Node.py')
 
   # create a pkg-config(1) file
   node_conf = bld.new_task_gen('subst', before="cxx")
