--- pacpl-install.orig	Sun Sep 17 17:47:14 2006
+++ pacpl-install	Mon Dec 11 16:13:40 2006
@@ -38,15 +38,12 @@ my $uninstall_msg  = "$name - $version: 
 my ($install, $uninstall, $checkinstall, $help);
 my ($all, $base, $kde, $tags, $lang);
 
-my $prefix       = "/usr/local";
-my $kde_prefix;
+my $prefix       = $ENV{'PREFIX'};
+my $kde_prefix   = $prefix;
  
-   $kde_prefix   = "$ENV{'KDEDIR'}"  if     $ENV{'KDEDIR'};
-   $kde_prefix   = "/usr"            if not $ENV{'KDEDIR'};
+my $conf_path = "$prefix/share/examples/pacpl";
+my $doc_path  = "$prefix/share/doc/pacpl";
 
-my $conf_path = "/etc/pacpl";
-my $doc_path  = "$prefix/doc/pacpl-$version";
-
 GetOptions('i|install=s'    => \$install,
            'u|uninstall=s'  => \$uninstall,
            'c|checkinstall' => \$checkinstall,
@@ -68,9 +65,8 @@ my @MIMES      = qw(x-shn.desktop  x-ape
                     x-lpac.desktop x-kxs.desktop   x-la.desktop
                     x-bonk.desktop);
 
-my @BASE       = qw(pacpl      pacpl.conf  pacpl-install pacpl.1.gz
-                    README     ChangeLog   GPL      
-                    INSTALL    TODO        FAQ);
+my @BASE       = qw(pacpl      pacpl.conf  pacpl.1
+                    README     FAQ);
               
 my @MODULES    = qw(Parse::RecDescent      Carp                      Inline
                     Inline::C              Audio::Musepack           Audio::WMA
@@ -94,7 +90,6 @@ if (!grep(/base|all|tags|kde|lang/, $ins
 # Install base program
 if ($install =~ /base|all/i) {
 
-  if (!-e "$prefix/doc") { mkdir("$prefix/doc") }
   
   mkdir("$doc_path");
   
@@ -383,6 +378,8 @@ sub checkinstall {
     print      "-------------------------------------------------\n";
                    
     foreach my $app (sort(keys(%program))) {
+	$program{$app} = "%%LOCALBASE%%/bin/$app";
+	next;
 
          if (`which $app 2>/dev/null`) {
              
@@ -443,12 +440,12 @@ sub checkinstall {
     print "\nSee $doc_path/README for application URLs\n";
     print "\nPress enter to continue";
 
-    my $enter = <STDIN>;
     
     my @TAG_MODS = qw(MP3::Tag       Ogg::Vorbis::Header Audio::FLAC::Header
                       MP4::Info      Audio::Musepack     Audio::WMA     
                       
                       CDDB_get);
+    @TAG_MODS = ();
                       
     print "\n$name - $version: Audio Tagging Modules\n\n";
     
