$OpenBSD: patch-lib-src_portaudio_pa_unix_oss_pa_unix_c,v 1.3 2007/06/06 09:35:18 ajacoutot Exp $
--- lib-src/portaudio/pa_unix_oss/pa_unix.c.orig	Wed Mar 28 09:22:39 2007
+++ lib-src/portaudio/pa_unix_oss/pa_unix.c	Wed Mar 28 09:26:18 2007
@@ -399,6 +399,7 @@ static int PaHost_CanaryProc( PaHostSoundControl   *pa
     return result;
 }
 
+#if 0
 /*******************************************************************************************
  * Monitor audio thread and lower its it if it hogs the CPU.
  * To prevent getting killed, the audio thread must update a
@@ -598,6 +599,7 @@ static PaError PaHost_BoostPriority( internalPortAudio
 
     return result;
 }
+#endif  /* Watchdog */
 
 /*******************************************************************************************/
 static PaError Pa_AudioThreadProc( internalPortAudioStream   *past )
@@ -613,8 +615,10 @@ static PaError Pa_AudioThreadProc( internalPortAudioSt
     GSRegisterCurrentThread(); /* SB20010904 */
 #endif
 
+#if 0
     result = PaHost_BoostPriority( past );
     if( result < 0 ) goto error;
+#endif
 
     past->past_IsActive = 1;
     DBUG(("entering thread.\n"));
@@ -680,7 +684,9 @@ static PaError Pa_AudioThreadProc( internalPortAudioSt
     DBUG(("Pa_AudioThreadProc: left audio loop.\n"));
 
     past->past_IsActive = 0;
+#if 0
     PaHost_StopWatchDog( pahsc );
+#endif
 
 error:
     DBUG(("leaving audio thread.\n"));
@@ -810,7 +816,7 @@ PaError PaHost_OpenStream( internalPortAudioStream   *
                            past->past_NumUserBuffers, past->past_FramesPerUserBuffer,
                            past->past_NumOutputChannels );
             result = Pa_SetupDeviceFormat( pahsc->pahsc_OutputHandle,
-                                           past->past_NumOutputChannels, (int)past->past_SampleRate );
+                                           past->past_NumOutputChannels, (int)past->past_SampleRate, 2 );
         }
     }
     else
