$OpenBSD: patch-kioslave_man_kio_man_cpp,v 1.2 2002/04/18 00:26:40 espie Exp $
--- kioslave/man/kio_man.cpp.orig	Tue Apr 16 15:50:53 2002
+++ kioslave/man/kio_man.cpp	Thu Apr 18 02:15:29 2002
@@ -111,6 +111,8 @@ MANProtocol::MANProtocol(const QCString 
     assert(!_self);
     _self = this;
     common_dir = KGlobal::dirs()->findResourceDir( "html", "en/common/kde-common.css" );
+    section_names << "1" << "2" << "3" << "3n" << "3p" << "4" << "5" << "6" << "7"
+    << "8" << "9" << "l" << "n";
 }
 
 MANProtocol *MANProtocol::self() { return _self; }
@@ -120,21 +122,65 @@ MANProtocol::~MANProtocol()
     _self = 0;
 }
 
-QStringList MANProtocol::findPages(const QString &section,
-                                   const QString &title,
-                                   bool full_path)
+bool MANProtocol::addWhatIs(QMap<QString, QString> &i, const QString &name, const QString &mark)
 {
-    checkManPaths();
+    QFile f(name);
+    if (!f.open(IO_ReadOnly))
+	    return false;
+    int marklen = mark.length();
+    QTextStream t(&f);
+    QString l;
+    while (!t.eof())
+    {
+	    l = t.readLine();	
+	    int pos = l.find(mark);
+	    if (pos != -1)
+	    {
+	    	QString names = l.left(pos);
+		QString descr = l.mid(pos+marklen);
+		while ((pos = names.find(",")) != -1)
+		{
+		    i[names.left(pos++)] = descr;
+		    while (names[pos] == ' ')
+		    	pos++;
+		    names = names.mid(pos);
+		}
+		i[names] = descr;
+	    }
+    }
+    return true;
+}
 
-    QStringList list;
+QMap<QString, QString> MANProtocol::buildIndexMap(const QString &section)
+{
+    QMap<QString, QString> i;
+    QStringList man_dirs = manDirectories();
+    // Supplementary places for whatis databases
+    man_dirs << "/var/cache/man";
+    QStringList names;
+    names << "whatis.db" << "whatis";
+    QString mark = " (" + section + ") - ";
 
-    if (title.at(0) == '/') {
-       list.append(title);
-       return list;
+    for ( QStringList::ConstIterator it_dir = man_dirs.begin();
+          it_dir != man_dirs.end();
+          it_dir++ )
+    {
+    	for ( QStringList::ConstIterator it_name = names.begin();
+	      it_name != names.end();
+	      it_name++ )
+        {
+	    if (addWhatIs(i, (*it_dir) + "/" + (*it_name), mark))
+		break;
+	}
     }
+    return i;
+}
 
+QStringList MANProtocol::manDirectories()
+{
+    checkManPaths();
     //
-    // Build a list of man direcotries including translations
+    // Build a list of man directories including translations
     //
     QStringList man_dirs;
 
@@ -166,7 +212,21 @@ QStringList MANProtocol::findPages(const
         // Untranslated pages in "<mandir>"
         man_dirs += (*it_dir);
     }
+    return man_dirs;
+}
+
+QStringList MANProtocol::findPages(const QString &section,
+                                   const QString &title,
+                                   bool full_path)
+{
+    QStringList list;
+
+    if (title.at(0) == '/') {
+       list.append(title);
+       return list;
+    }
 
+    QStringList man_dirs = manDirectories();
     //
     // Find pages
     //
@@ -511,6 +571,10 @@ QString sectionName(const QString& secti
         return i18n("System Calls");
     else if (section == "3")
         return i18n("Subroutines");
+    else if (section == "3p")
+    	return i18n("Perl Modules");
+    else if (section == "3n")
+    	return i18n("Network Functions");
     else if (section == "4")
         return i18n("Devices");
     else if (section == "5")
@@ -523,12 +587,34 @@ QString sectionName(const QString& secti
         return i18n("System Administration");
     else if (section == "9")
         return i18n("Kernel");
+    else if (section == "l")
+    	return i18n("Local Documentation");
     else if (section == "n")
         return i18n("New");
 
     return QString::null;
 }
 
+QStringList MANProtocol::buildSectionList(const QStringList& dirs) const
+{
+    QStringList l;
+
+    for (QStringList::ConstIterator it = section_names.begin();
+	    it != section_names.end(); ++it)
+    {
+	    for (QStringList::ConstIterator dir = dirs.begin();
+		    dir != dirs.end(); ++dir)
+	    {
+		QDir d((*dir)+"/man"+(*it));
+		if (d.exists())
+		{
+		    l << *it;
+		    break;
+		}
+	    }
+    }
+    return l;
+}
 
 void MANProtocol::showMainIndex()
 {
@@ -543,9 +629,11 @@ void MANProtocol::showMainIndex()
     os << i18n("<body bgcolor=#ffffff><h1>UNIX Manual Index</h1>") << endl;
 
     QString sectList = getenv("MANSECT");
+    QStringList sections;
     if (sectList.isEmpty())
-        sectList = "1:2:3:4:5:6:7:8:9:n";
-    QStringList sections = QStringList::split(':', sectList);
+    	sections = buildSectionList(manDirectories());
+    else
+	sections = QStringList::split(':', sectList);
 
     os << "<table>" << endl;
 
@@ -930,6 +1018,7 @@ void MANProtocol::showIndex(const QStrin
     // search for the man pages
 	QStringList pages = findPages( section, QString::null );
 
+	QMap<QString, QString> indexmap = buildIndexMap(section);
 
     // print out the list
     os << "<table>" << endl;
@@ -960,7 +1049,8 @@ void MANProtocol::showIndex(const QStrin
     {
 	os << "<tr><td><a href=\"man:" << it.data() << "\">\n"
 	   << it.key() << "</a></td><td>&nbsp;</td><td> "
-	   << i18n("no idea yet") << "</td></tr>"  << endl;
+	   << (indexmap.contains(it.key()) ? indexmap[it.key()] : i18n("no idea"))
+	   << "</td></tr>"  << endl;
     }
 
 #else /* ! _USE_OLD_CODE */
@@ -1094,7 +1184,7 @@ void MANProtocol::showIndex(const QStrin
 	((char *)manindex->manpage_begin)[manindex->manpage_len] = '\0';
 	os << manindex->manpage_begin
 	   << "</a></td><td>&nbsp;</td><td> "
-	   << i18n("no idea yet")
+	   << (indexmap.contains(manindex->manpage_begin) ? indexmap[manindex->manpage_begin] : i18n("no idea"))
 	   << "</td></tr>"  << endl;
 	last_index = manindex;
     }
@@ -1135,7 +1225,7 @@ void MANProtocol::showIndex(const QStrin
 	manindex->manpage_begin[manindex->manpage_len] = '\0';
 	os << manindex->manpage_begin
 	   << "</a></td><td>&nbsp;</td><td> "
-	   << i18n("no idea yet")
+	   << (indexmap.contains(manindex->manpage_begin) ? indexmap[manindex->manpage_begin] : i18n("no idea"))
 	   << "</td></tr>"  << endl;
 	last_index = manindex;
     }
