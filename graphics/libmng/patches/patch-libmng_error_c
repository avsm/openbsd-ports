$OpenBSD: patch-libmng_error_c,v 1.1 2002/08/25 04:19:21 drahn Exp $
--- libmng_error.c.orig	Sun Jun 23 11:57:16 2002
+++ libmng_error.c	Fri Aug 23 14:40:25 2002
@@ -70,7 +70,7 @@
 /* ************************************************************************** */
 
 #ifdef MNG_INCLUDE_ERROR_STRINGS
-  mng_error_entry error_table [] =
+  mng_error_entry mng_error_table [] =
   {
     {MNG_NOERROR,          "No error"},
     {MNG_OUTOFMEMORY,      "Out of memory"},
@@ -182,7 +182,7 @@ mng_bool mng_store_error (mng_datap   pD
       mng_int32        iTop, iLower, iUpper, iMiddle;
       mng_error_entryp pEntry;         /* pointer to found entry */
                                        /* determine max index of table */
-      iTop = (sizeof (error_table) / sizeof (error_table [0])) - 1;
+      iTop = (sizeof (mng_error_table) / sizeof (mng_error_table [0])) - 1;
 
       iLower  = 0;                     /* initialize binary search */
       iMiddle = iTop >> 1;             /* start in the middle */
@@ -191,13 +191,13 @@ mng_bool mng_store_error (mng_datap   pD
 
       do                               /* the binary search itself */
         {
-          if (error_table [iMiddle].iError < iError)
+          if (mng_error_table [iMiddle].iError < iError)
             iLower = iMiddle + 1;
-          else if (error_table [iMiddle].iError > iError)
+          else if (mng_error_table [iMiddle].iError > iError)
             iUpper = iMiddle - 1;
           else
           {
-            pEntry = &error_table [iMiddle];
+            pEntry = &mng_error_table [iMiddle];
             break;
           }
 
