$OpenBSD: patch-src_share_native_sun_awt_cmm_evalth14_c,v 1.1 2003/12/31 17:18:16 espie Exp $
--- src/share/native/sun/awt/cmm/evalth14.c.orig	2003-12-31 15:26:02.000000000 +0100
+++ src/share/native/sun/awt/cmm/evalth14.c	2003-12-31 15:33:54.000000000 +0100
@@ -37,12 +37,12 @@
 /* Macros used by 4-input functions */
 
 #define TH1_STORE_DATA8(chan) \
-	*outp##chan## = prevRes##chan##;	/* write to buffer */ \
-	outp##chan## = (KpUInt8_p)outp##chan## + outStride##chan##;	/* next location */
+	*outp##chan = prevRes##chan;	/* write to buffer */ \
+	outp##chan = (KpUInt8_p)outp##chan + outStride##chan;	/* next location */
 
 #define TH1_STORE_DATA16(chan) \
-	*outp##chan## = prevRes##chan##;	/* write to buffer */ \
-	outp##chan## = (KpUInt16_p)((KpUInt8_p)outp##chan## + outStride##chan##);	/* next location */
+	*outp##chan = prevRes##chan;	/* write to buffer */ \
+	outp##chan = (KpUInt16_p)((KpUInt8_p)outp##chan + outStride##chan);	/* next location */
 
 #define TH1_EVAL_INIT \
 esItbl_p	inLut0 = PTTableP->esILuts.P; \
@@ -100,12 +100,12 @@ KpUInt32_t	thisColor1, thisColor2, prevC
 	prevColor1 = (~(*inp0)) << 16; 			/* make sure cache is not valid */
 
 #define TH1_STORE_DATA8(chan) \
-	*outp##chan## = prevRes##chan##;	/* write to buffer */ \
-	outp##chan## = (KpUInt8_p)outp##chan## + outStride##chan##;	/* next location */
+	*outp##chan = prevRes##chan;	/* write to buffer */ \
+	outp##chan = (KpUInt8_p)outp##chan + outStride##chan;	/* next location */
 
 #define TH1_STORE_DATA16(chan) \
-	*outp##chan## = prevRes##chan##;	/* write to buffer */ \
-	outp##chan## = (KpUInt16_p)((KpUInt8_p)outp##chan## + outStride##chan##);	/* next location */
+	*outp##chan = prevRes##chan;	/* write to buffer */ \
+	outp##chan = (KpUInt16_p)((KpUInt8_p)outp##chan + outStride##chan);	/* next location */
 
 #define TH1_4D_GETDATA8 \
 	data0 = *inp0; 					/* get channel 0 input data */ \
@@ -250,7 +250,7 @@ KpUInt32_t	thisColor1, thisColor2, prevC
 #define TH1_4D_TETRAINTERP_AND_OLUT(chan) \
 	baseP += sizeof (esGridData_t); \
 	TH1_4D_TETRAINTERP		/* tetrahedral interpolation for this channel */ \
-	prevRes##chan## = outLut0[(##chan##*4096)+tResult];
+	prevRes##chan = outLut0[(chan*4096)+tResult];
 
 
 /* constant tables for finding pentahedral volumes and the corresponding coefficients and multipliers */
